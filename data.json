{"version":1,"blocks":[{"id":"614adbbe-dd1a-4798-92f9-6067b1c58b57","page-name":"Rubocop","properties":{"public":true},"children":[{"id":"614adbbe-f0b1-4381-b518-94b918d947c1","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-b66a-486d-b36e-e5d4ead0ddb5","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-0227-4bfc-bbcc-cc52b6eceff7","page-name":"The Etymology of Programming","children":[{"id":"614adbbe-7b43-4e91-be00-a3964407e869","format":"markdown","children":[],"title":[["Plain","In the 1940s a technical team at "],["Link",{"url":["Page_ref","Harvard University"],"label":[["Plain",""]],"full_text":"[[Harvard University]]","metadata":""}],["Plain"," found a moth in one of their machines that caused it to not function properly. "],["Link",{"url":["Page_ref","Grace Hopper"],"label":[["Plain",""]],"full_text":"[[Grace Hopper]]","metadata":""}],["Plain",", who was part of the team, taped the moth to a report with the text \"First actual case of bug being found\". From here on the term "],["Emphasis",[["Bold"],[["Plain","bug"]]]],["Plain"," became popularized as an error."]],"body":[],"content":"In the 1940s a technical team at [[Harvard University]] found a moth in one of their machines that caused it to not function properly. [[Grace Hopper]], who was part of the team, taped the moth to a report with the text \"First actual case of bug being found\". From here on the term **bug** became popularized as an error."},{"id":"614adbbe-56d1-402b-b77f-db16dab0154b","format":"markdown","children":[],"title":[["Emphasis",[["Bold"],[["Plain","Debugging"]]]],["Plain"," literally meant to remove any bugs from the machinery. This has sparked some discussions since it can imply that it's something other than developer error that causes the issue."]],"body":[],"content":"**Debugging** literally meant to remove any bugs from the machinery. This has sparked some discussions since it can imply that it's something other than developer error that causes the issue."},{"id":"614adbbe-d37f-4b29-bb7f-405a26dc75f3","format":"markdown","children":[{"id":"614adbbe-d00b-43c0-9e84-4dbaac1f8348","format":"markdown","children":[],"title":[["Plain","The origin of this touches on the same category as master/slave and whitelist/blacklist. Which we are trying to move away from."]],"body":[],"content":"The origin of this touches on the same category as master/slave and whitelist/blacklist. Which we are trying to move away from."}],"title":[["Emphasis",[["Bold"],[["Plain","foobar"]]]],["Plain"," comes from the military term \"FUBAR\", \"Fucked Up Beyond All Recognition\". Instead we should "],["Link",{"url":["Page_ref","Always use real variable names in examples"],"label":[["Plain",""]],"full_text":"[[Always use real variable names in examples]]","metadata":""}]],"body":[],"content":"**foobar** comes from the military term \"FUBAR\", \"Fucked Up Beyond All Recognition\". Instead we should [[Always use real variable names in examples]]"},{"id":"614adbbe-fde0-400b-8c73-3f62c048df09","format":"markdown","children":[],"title":[["Plain","The "],["Emphasis",[["Bold"],[["Plain","shell"]]]],["Plain"," (terminal) is a metaphor for a nut. We interact with the outer layer, but don't have direct access to \"the inner seed\", the "],["Link",{"url":["Page_ref","Kernel"],"label":[["Plain",""]],"full_text":"[[Kernel]]","metadata":""}],["Plain","."]],"body":[],"content":"The **shell** (terminal) is a metaphor for a nut. We interact with the outer layer, but don't have direct access to \"the inner seed\", the [[Kernel]]."},{"id":"614adbbe-70bf-487d-8de6-746c1229e09a","format":"markdown","children":[],"title":[],"body":[["Horizontal_Rule"]],"content":"  ---"},{"id":"614adbbe-262f-408b-95e1-37bc811925f7","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Brittany Storoz"],"label":[["Plain",""]],"full_text":"[[Brittany Storoz]]","metadata":""}],["Plain",". ("],["Link",{"url":["Page_ref","2018-06-26"],"label":[["Plain",""]],"full_text":"[[2018-06-26]]","metadata":""}],["Plain","). "],["Emphasis",[["Italic"],[["Plain","\"The Etymology of Programming\""]]]],["Plain",". "],["Link",{"url":["Complex",{"protocol":"https","link":"youtu.be/2KTK2qD4-gs"}],"label":[["Plain","https://youtu.be/2KTK2qD4-gs"]],"full_text":"https://youtu.be/2KTK2qD4-gs","metadata":""}]],"body":[],"content":"[[Brittany Storoz]]. ([[2018-06-26]]). _\"The Etymology of Programming\"_. https://youtu.be/2KTK2qD4-gs"},{"id":"614adbbe-c928-42ac-8d08-f1e5947c441b","format":"markdown","children":[],"title":[["Tag",[["Plain","Development"]]]],"body":[],"content":"#Development"},{"id":"614adbbe-8a51-4575-99cf-caac99ebefd4","format":"markdown","children":[],"title":[["Emphasis",[["Bold"],[["Plain","ID:"]]]],["Plain"," 210622073324"]],"body":[],"content":"**ID:** 210622073324"}]},{"id":"614adbbe-ff61-4810-91bb-e8a8e058becf","page-name":"Contents","children":[{"id":"614adbbd-96a1-416e-afed-ec9d36309305","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-fa02-4eb3-8038-2537ef2b5d14","page-name":"Implementing a strong code-review culture","children":[{"id":"614adbbe-7bdc-4b38-876c-d19d455805f1","format":"markdown","children":[],"title":[["Plain","Code reviews are more about transferring knowledge inside a team and coming up with alternate solutions than finding bugs in the code. A strong code review culture will give us better code and better developers."]],"body":[],"content":"Code reviews are more about transferring knowledge inside a team and coming up with alternate solutions than finding bugs in the code. A strong code review culture will give us better code and better developers."},{"id":"614adbbe-9880-410a-8d8d-2f131680e064","format":"markdown","children":[],"title":[["Plain","The "],["Emphasis",[["Bold"],[["Plain","why"]]]],["Plain"," is more important than the "],["Emphasis",[["Bold"],[["Plain","how"]]]],["Plain",". Take the time to write a thorough "],["Link",{"url":["Page_ref","PR"],"label":[["Plain",""]],"full_text":"[[PR]]","metadata":""}],["Plain"," description that explains the code change. Include documentation and links if they are relevant. You might not stay at the company forever and if you leave the context of the PR leaves with you. If you do stick around, your future self will thank you."]],"body":[],"content":"The **why** is more important than the **how**. Take the time to write a thorough [[PR]] description that explains the code change. Include documentation and links if they are relevant. You might not stay at the company forever and if you leave the context of the PR leaves with you. If you do stick around, your future self will thank you."},{"id":"614adbbe-81ce-48e7-83bc-cb3d237aed8a","format":"markdown","children":[],"title":[["Plain","Written communication can often be perceived as negative. Review what you've written before publishing. Try to read it as the the one who will receive the text and try to make it feel as positive as possible. Use the "],["Link",{"url":["Page_ref","Socratic method"],"label":[["Plain",""]],"full_text":"[[Socratic method]]","metadata":""}]],"body":[],"content":"Written communication can often be perceived as negative. Review what you've written before publishing. Try to read it as the the one who will receive the text and try to make it feel as positive as possible. Use the [[Socratic method]]"},{"id":"614adbbe-932e-44ff-b002-7a14f7164772","format":"markdown","children":[{"id":"614adbbe-6d1f-4418-9d0f-814605efed67","format":"markdown","children":[],"title":[["Plain","\"Extract this to a service\" -> \"What do you think about extracting this to a service?\""]],"body":[],"content":"\"Extract this to a service\" -> \"What do you think about extracting this to a service?\""}],"title":[["Plain","The "],["Link",{"url":["Page_ref","PR"],"label":[["Plain",""]],"full_text":"[[PR]]","metadata":""}],["Plain"," is a discussion. "],["Emphasis",[["Bold"],[["Plain","Don't tell the author to do something, ask them about it."]]]]],"body":[],"content":"The [[PR]] is a discussion. **Don't tell the author to do something, ask them about it.**"},{"id":"614adbbe-667a-41c3-9ed9-ea23267745aa","format":"markdown","children":[],"title":[["Plain","Conflicts will arise and are not necessarily a bad thing. If we don't agree, be open to discussing the issues and the process."]],"body":[],"content":"Conflicts will arise and are not necessarily a bad thing. If we don't agree, be open to discussing the issues and the process."},{"id":"614adbbe-f17b-44e4-90ec-4c9a00e08121","format":"markdown","children":[{"id":"614adbbe-3ea7-4c08-9d34-6dd462b5c685","format":"markdown","children":[{"id":"614adbbe-6a98-4671-a434-e45a2f7f9e24","format":"markdown","children":[],"title":[],"body":[["Quote",[["Paragraph",[["Plain","Naming is hard. Renaming is "],["Emphasis",[["Bold"],[["Plain","harder"]]]],["Plain",". Spend the time up front. - "],["Link",{"url":["Complex",{"protocol":"https","link":"twitter.com/laurieontech/status/1402313492162613252"}],"label":[["Plain","@laurieontech"]],"full_text":"[@laurieontech](https://twitter.com/laurieontech/status/1402313492162613252)","metadata":""}],["Break_Line"]]]]]],"content":"\t\t  > Naming is hard. Renaming is **harder**. Spend the time up front. - [@laurieontech](https://twitter.com/laurieontech/status/1402313492162613252)"}],"title":[["Plain","Think about naming."]],"body":[],"content":"Think about naming."},{"id":"614adbbe-e09a-4991-9f74-aca4df5af98d","format":"markdown","children":[],"title":[["Plain","Review the complexity and make suggestions for possible improvements."]],"body":[],"content":"Review the complexity and make suggestions for possible improvements."},{"id":"614adbbe-00b9-4847-878b-0254783ace4b","format":"markdown","children":[],"title":[["Plain","Check on test coverage. 100% coverage isn't absolutely necessary, but make sure that we've added tests for the important paths."]],"body":[],"content":"Check on test coverage. 100% coverage isn't absolutely necessary, but make sure that we've added tests for the important paths."}],"title":[["Plain","What to review"]],"body":[],"content":"What to review"},{"id":"614adbbe-9115-4c43-a105-1434ec2557bd","format":"markdown","children":[],"title":[["Plain","Styling is important, but it should, if possible, be solved using automation. Use "],["Link",{"url":["Page_ref","Rubocop"],"label":[["Plain",""]],"full_text":"[[Rubocop]]","metadata":""}],["Plain",", "],["Link",{"url":["Page_ref","ESLint"],"label":[["Plain",""]],"full_text":"[[ESLint]]","metadata":""}],["Plain",", "],["Link",{"url":["Page_ref","Prettier"],"label":[["Plain",""]],"full_text":"[[Prettier]]","metadata":""}],["Plain"," etc."]],"body":[],"content":"Styling is important, but it should, if possible, be solved using automation. Use [[Rubocop]], [[ESLint]], [[Prettier]] etc."},{"id":"614adbbe-9220-42ee-a0f8-9306795338d5","format":"markdown","children":[],"title":[],"body":[["Horizontal_Rule"]],"content":"  ---"},{"id":"614adbbe-7ff6-49bf-8294-7234b784e0e3","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Derek Prior"],"label":[["Plain",""]],"full_text":"[[Derek Prior]]","metadata":""}],["Plain",". ("],["Link",{"url":["Page_ref","2015-04-30"],"label":[["Plain",""]],"full_text":"[[2015-04-30]]","metadata":""}],["Plain","). "],["Emphasis",[["Italic"],[["Plain","RailsConf 2015 - Implementing a Strong Code-Review Culture"]]]],["Plain",". "],["Link",{"url":["Complex",{"protocol":"https","link":"www.youtube.com/watch?v=PJjmw9TRB7s"}],"label":[["Plain","https://www.youtube.com/watch?v=PJjmw9TRB7s"]],"full_text":"https://www.youtube.com/watch?v=PJjmw9TRB7s","metadata":""}]],"body":[],"content":"[[Derek Prior]]. ([[2015-04-30]]). _RailsConf 2015 - Implementing a Strong Code-Review Culture_. https://www.youtube.com/watch?v=PJjmw9TRB7s"},{"id":"614adbbe-b3bf-468e-adb6-24b00e85b1e8","format":"markdown","children":[],"title":[["Tag",[["Link",{"url":["Page_ref","Code review"],"label":[["Plain",""]],"full_text":"[[Code review]]","metadata":""}]]]],"body":[],"content":"#[[Code review]]"},{"id":"614adbbe-b01c-4ab2-b7cc-d2734865c5c5","format":"markdown","children":[],"title":[["Emphasis",[["Bold"],[["Plain","ID:"]]]],["Plain"," 210616101755"]],"body":[],"content":"**ID:** 210616101755"}]},{"id":"614adbbe-a192-4099-a26e-a12c95b328c7","page-name":"2021-06-13","children":[{"id":"614adbbe-7ae9-443d-8a7c-9acc6e055c66","format":"markdown","children":[],"title":[],"body":[["Paragraph",[["Plain",""]]]],"content":""}]},{"id":"614adbbe-250e-4282-85d4-d56a2dd5a53f","page-name":"2021-06-14","children":[{"id":"614adbbe-462c-4fb3-bf0a-5321f1d8623c","format":"markdown","children":[],"title":[["Plain","The "],["Code","act"],["Plain"," utility in "],["Link",{"url":["Page_ref","React"],"label":[["Plain",""]],"full_text":"[[React]]","metadata":""}],["Plain"," makes your tests run closer to how React works in the browser. If you're using "],["Link",{"url":["Page_ref","Testing Library"],"label":[["Plain",""]],"full_text":"[[Testing Library]]","metadata":""}],["Plain"," you won't need it that often since the library already wraps the code in "],["Code","act"],["Plain"," when necessary."]],"body":[],"content":"The `act` utility in [[React]] makes your tests run closer to how React works in the browser. If you're using [[Testing Library]] you won't need it that often since the library already wraps the code in `act` when necessary."},{"id":"614adbbe-87b9-426d-908d-03046316f020","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Adding types to a React component in TypeScript"],"label":[["Plain",""]],"full_text":"[[Adding types to a React component in TypeScript]]","metadata":""}]],"body":[],"content":"[[Adding types to a React component in TypeScript]]"},{"id":"614adbbe-37df-4d21-b53c-1eaf08397da3","format":"markdown","children":[],"title":[["Plain","The correct pronunciation for "],["Code",".png"],["Plain"," is "],["Emphasis",[["Bold"],[["Plain","ping"]]]],["Plain"," according to its inventor "],["Link",{"url":["Page_ref","Thomas Boutell"],"label":[["Plain",""]],"full_text":"[[Thomas Boutell]]","metadata":""}],["Plain",", although he  states that pronouncing the acronym "],["Link",{"url":["Complex",{"protocol":"https","link":"twitter.com/boutell/status/1404410047980052492"}],"label":[["Plain","can never be considered wrong"]],"full_text":"[can never be considered wrong](https://twitter.com/boutell/status/1404410047980052492)","metadata":""}],["Plain",". "],["Tag",[["Plain","TIL"]]]],"body":[],"content":"The correct pronunciation for `.png` is **ping** according to its inventor [[Thomas Boutell]], although he  states that pronouncing the acronym [can never be considered wrong](https://twitter.com/boutell/status/1404410047980052492). #TIL"}]},{"id":"614adbbe-3cab-481e-9bd0-62bdc768dd1e","page-name":"Nielsen Norman Group","properties":{"public":true},"children":[{"id":"614adbbe-2527-4e23-adac-84f3348b36b5","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-9e9a-4865-8403-e7ea79cb828c","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-2f77-4463-b81d-2c3cbd92b710","page-name":"2020-10-23","properties":{"public":true},"children":[{"id":"614adbbd-a45f-4a21-9a28-9a2aca311822","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbd-d527-4289-a59c-d3b09419a43e","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-03dd-4ba9-ac91-7d0b7e763391","page-name":"2021-06-21","children":[{"id":"614adbbe-c982-460e-8266-9f98d0d8fb8a","format":"markdown","children":[],"title":[["Plain","I hadn't kept up with what the latest was in the newly announced "],["Link",{"url":["Page_ref","React"],"label":[["Plain",""]],"full_text":"[[React]]","metadata":""}],["Plain"," 18 but decided that it was the perfect thing to start this Monday off with. "],["Link",{"url":["Page_ref","What's new in React 18"],"label":[["Plain",""]],"full_text":"[[What's new in React 18]]","metadata":""}]],"body":[],"content":"I hadn't kept up with what the latest was in the newly announced [[React]] 18 but decided that it was the perfect thing to start this Monday off with. [[What's new in React 18]]"},{"id":"614adbbe-20f9-4ecb-8588-9023b86386a5","format":"markdown","children":[{"id":"614adbbe-83c9-42a1-aba2-669a43da54bb","format":"markdown","children":[],"title":[["Plain","Neither of the solutions affect the "],["Link",{"url":["Page_ref","Accessibility"],"label":[["Plain",""]],"full_text":"[[Accessibility]]","metadata":""}],["Plain"," on the page since pinch-to-zoom will still work."]],"body":[],"content":"Neither of the solutions affect the [[Accessibility]] on the page since pinch-to-zoom will still work."},{"id":"614adbbe-d5b3-48c3-a5db-7015144a8619","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["/* Set the property on the entire page or on specific","\n","elements like a or button  */","\n","html {","\n","  touch-action: manipulation;","\n","}","\n"],"language":"css","pos_meta":{"start_pos":616,"end_pos":757},"full_content":"``` css\n/* Set the property on the entire page or on specific\nelements like a or button  */\nhtml {\n  touch-action: manipulation;\n}\n```"}]],"content":"\t  ``` css\n/* Set the property on the entire page or on specific\nelements like a or button  */\nhtml {\n  touch-action: manipulation;\n}\n```"}],"title":[["Plain","If you use a correct "],["Link",{"url":["Page_ref","Meta viewport for mobile devices"],"label":[["Plain",""]],"full_text":"[[Meta viewport for mobile devices]]","metadata":""}],["Plain"," you'll never see the 300-350 ms tap delay that browsers add to wait for a double tap. If you for some reason can't add the meta tag, there's also a "],["Link",{"url":["Page_ref","CSS"],"label":[["Plain",""]],"full_text":"[[CSS]]","metadata":""}],["Plain"," property that does the same thing. It's not supported by "],["Link",{"url":["Page_ref","Firefox"],"label":[["Plain",""]],"full_text":"[[Firefox]]","metadata":""}],["Plain",", so the meta tag is preferred."]],"body":[],"content":"If you use a correct [[Meta viewport for mobile devices]] you'll never see the 300-350 ms tap delay that browsers add to wait for a double tap. If you for some reason can't add the meta tag, there's also a [[CSS]] property that does the same thing. It's not supported by [[Firefox]], so the meta tag is preferred."}]},{"id":"614adbbe-046d-4cf2-b41a-f4434c3b30c8","page-name":"Grace Hopper","properties":{"public":true},"children":[{"id":"614adbbe-28d6-4402-b08e-04d5b4571042","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-ab81-4df8-825e-975e2f083bd8","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-eeaa-431a-b777-2959ef1645fd","page-name":"Ryan Florence","properties":{"public":true},"children":[{"id":"614adbbe-ee76-4b01-9c2f-ff0aca699112","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-65f4-441f-a00d-d301f10a0241","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-3c68-4a8b-bcc9-1aff709710b1","page-name":"Socratic method","properties":{"public":true},"children":[{"id":"614adbbd-1d91-4d60-9ea5-aa45a9d7c2f3","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbd-e47b-463d-bc0d-fa04940ea8de","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbea-57d0-4dfc-9d39-284faa58fec1","page-name":"Difference between ?? and ||","properties":{"title":"Difference between ?? and ||","tags":["Development","JavaScript"],"pid":210922101321},"children":[{"id":"614adbfc-3afd-4b1f-8f3a-7a607dac6542","properties":{"title":"Difference between ?? and ||","tags":["Development","JavaScript"],"pid":210922101321},"format":"markdown","children":[],"content":"title:: Difference between ?? and ||\ntags:: Development, JavaScript\npid:: 210922101321"},{"id":"614adbfc-f5f9-461c-9fec-5eee7ca411f8","properties":{},"format":"markdown","children":[],"title":[["Code","||"],["Plain"," (logical OR) will use the right value when the left side is "],["Link",{"url":["Page_ref","falsy"],"label":[["Plain",""]],"full_text":"[[falsy]]","metadata":""}],["Plain",". "],["Code","??"],["Plain"," (nullish coalescing) only uses the right value when the left side is "],["Emphasis",[["Italic"],[["Plain","nullish"]]]],["Plain",", i.e. "],["Code","null"],["Plain"," or "],["Code","undefined"],["Plain","."]],"body":[],"content":"`||` (logical OR) will use the right value when the left side is [[falsy]]. `??` (nullish coalescing) only uses the right value when the left side is _nullish_, i.e. `null` or `undefined`."},{"id":"614ae06c-ab47-4e14-b46d-d104ef3ed4f8","properties":{},"format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["// ||","\n","console.log(\"\" || \"default\") // \"default\"","\n","console.log(\"test\" || \"default\") // \"test\"","\n","\n","console.log(0 || \"default\") // \"default\"","\n","console.log(12 || \"default\") // 12","\n","\n","console.log(false || \"default\") // \"default\"","\n","console.log(true || \"default\") // true","\n","\n","console.log(undefined || \"default\") // \"default\"","\n","console.log(null || \"default\") // \"default\"","\n","\n","// ??","\n","console.log(\"\" ?? \"default\") // \"\"","\n","console.log(\"test\" ?? \"default\") // \"test\"","\n","\n","console.log(0 ?? \"default\") // 0","\n","console.log(12 ?? \"default\") // 12","\n","\n","console.log(false ?? \"default\") // false","\n","console.log(true ?? \"default\") // true","\n","\n","console.log(undefined ?? \"default\") // \"default\"","\n","console.log(null ?? \"default\") // \"default\"","\n","\n"],"language":"js","pos_meta":{"start_pos":8,"end_pos":697},"full_content":"```js\n// ||\nconsole.log(\"\" || \"default\") // \"default\"\nconsole.log(\"test\" || \"default\") // \"test\"\n\nconsole.log(0 || \"default\") // \"default\"\nconsole.log(12 || \"default\") // 12\n\nconsole.log(false || \"default\") // \"default\"\nconsole.log(true || \"default\") // true\n\nconsole.log(undefined || \"default\") // \"default\"\nconsole.log(null || \"default\") // \"default\"\n\n// ??\nconsole.log(\"\" ?? \"default\") // \"\"\nconsole.log(\"test\" ?? \"default\") // \"test\"\n\nconsole.log(0 ?? \"default\") // 0\nconsole.log(12 ?? \"default\") // 12\n\nconsole.log(false ?? \"default\") // false\nconsole.log(true ?? \"default\") // true\n\nconsole.log(undefined ?? \"default\") // \"default\"\nconsole.log(null ?? \"default\") // \"default\"\n\n```"}]],"content":"```js\n// ||\nconsole.log(\"\" || \"default\") // \"default\"\nconsole.log(\"test\" || \"default\") // \"test\"\n\nconsole.log(0 || \"default\") // \"default\"\nconsole.log(12 || \"default\") // 12\n\nconsole.log(false || \"default\") // \"default\"\nconsole.log(true || \"default\") // true\n\nconsole.log(undefined || \"default\") // \"default\"\nconsole.log(null || \"default\") // \"default\"\n\n// ??\nconsole.log(\"\" ?? \"default\") // \"\"\nconsole.log(\"test\" ?? \"default\") // \"test\"\n\nconsole.log(0 ?? \"default\") // 0\nconsole.log(12 ?? \"default\") // 12\n\nconsole.log(false ?? \"default\") // false\nconsole.log(true ?? \"default\") // true\n\nconsole.log(undefined ?? \"default\") // \"default\"\nconsole.log(null ?? \"default\") // \"default\"\n\n```"}]},{"id":"614adbbe-4107-42ed-b35e-a7aa737255a5","page-name":"2021-06-10","properties":{"public":true},"children":[{"id":"614adbbe-d05e-4a4d-a95d-2013feeadca9","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-6b26-4d74-a8d9-ecf6d26ff800","format":"markdown","children":[{"id":"614adbbe-9078-48d9-bfbd-edf7d9e4e7a1","format":"markdown","children":[],"title":[["Plain","Since I always forget it I've created a snippet for it. Below is a version for "],["Link",{"url":["Page_ref","UltiSnips"],"label":[["Plain",""]],"full_text":"[[UltiSnips]]","metadata":""}],["Plain"," and it's also available as a "],["Link",{"url":["Page_ref","VS Code"],"label":[["Plain",""]],"full_text":"[[VS Code]]","metadata":""}],["Plain"," snippet "],["Link",{"url":["Complex",{"protocol":"https","link":"snippets.willcodefor.beer/html/metav"}],"label":[["Plain","on my snippets page"]],"full_text":"[on my snippets page](https://snippets.willcodefor.beer/html/metav)","metadata":""}],["Plain","."]],"body":[],"content":"Since I always forget it I've created a snippet for it. Below is a version for [[UltiSnips]] and it's also available as a [[VS Code]] snippet [on my snippets page](https://snippets.willcodefor.beer/html/metav)."},{"id":"614adbbe-462a-4e4a-87c1-1d66890be72f","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["# Make the viewport scale correctly on mobile devices","\n","snippet metav \"Meta viewport\"","\n","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />","\n","endsnippet","\n"],"pos_meta":{"start_pos":401,"end_pos":582},"full_content":"```\n# Make the viewport scale correctly on mobile devices\nsnippet metav \"Meta viewport\"\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\nendsnippet\n```"}]],"content":"\t  ```\n# Make the viewport scale correctly on mobile devices\nsnippet metav \"Meta viewport\"\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\nendsnippet\n```"}],"title":[["Plain","I'll keep this here for future reference when I eventually forget what the meta tag should be and have to look it up again "],["Link",{"url":["Page_ref","Meta viewport for mobile devices"],"label":[["Plain",""]],"full_text":"[[Meta viewport for mobile devices]]","metadata":""}]],"body":[],"content":"I'll keep this here for future reference when I eventually forget what the meta tag should be and have to look it up again [[Meta viewport for mobile devices]]"},{"id":"614adbbe-1140-4c3f-8eaf-dda64bf1f890","format":"markdown","children":[],"title":[["Plain","An example of how to use grid columns as \"padding\" "],["Link",{"url":["Page_ref","CSS Grid tricks"],"label":[["Plain",""]],"full_text":"[[CSS Grid tricks]]","metadata":""}]],"body":[],"content":"An example of how to use grid columns as \"padding\" [[CSS Grid tricks]]"}]},{"id":"614adbbe-b7df-4057-81a0-877dce6941bb","page-name":"Rubber ducking","children":[{"id":"614adbbd-3134-44d7-9de6-9397ac118588","format":"markdown","children":[],"title":[["Emphasis",[["Italic"],[["Plain","Rubber ducking"]]]],["Plain"," is the process of explaining your problem to another human or even an inanimate object like a plastic duck (hence the name). By putting the problem into words you might see issues that you've missed by only writing the code."]],"body":[],"content":"_Rubber ducking_ is the process of explaining your problem to another human or even an inanimate object like a plastic duck (hence the name). By putting the problem into words you might see issues that you've missed by only writing the code."},{"id":"614adbbd-747b-4c67-9646-dcae74eca104","format":"markdown","children":[],"title":[["Plain","Try to think the problem through and "],["Link",{"url":["Page_ref","Explain in plain words"],"label":[["Plain",""]],"full_text":"[[Explain in plain words]]","metadata":""}]],"body":[],"content":"Try to think the problem through and [[Explain in plain words]]"},{"id":"614adbbd-7e14-41b6-a341-7efcc51b7d34","format":"markdown","children":[],"title":[],"body":[["Horizontal_Rule"]],"content":"  ---"},{"id":"614adbbd-707f-4cb2-b77c-f22e922c9b94","format":"markdown","children":[],"title":[["Tag",[["Plain","Teaching"]]],["Plain",", "],["Tag",[["Plain","Learning"]]]],"body":[],"content":"#Teaching, #Learning"}]},{"id":"615747e9-ed1a-4b2d-990f-dd036a2d7fe4","page-name":"2021-10-01","format":"markdown","children":[{"id":"615747e9-ee70-4267-9740-ababb292e49f","properties":{},"format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Share shortcuts and plugins when teaching new developers"],"label":[["Plain",""]],"full_text":"[[Share shortcuts and plugins when teaching new developers]]","metadata":""}]],"body":[],"content":"[[Share shortcuts and plugins when teaching new developers]]"}]},{"id":"614adbbe-4b52-460f-8a09-8c3c54f3f94b","page-name":"MDN","properties":{"public":true},"children":[{"id":"614adbbe-4a79-4750-8726-bdbc9516f97b","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-914c-49f1-8966-c4462fe38137","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-2b3e-4c33-8e8d-cde7a3a34932","page-name":"Firefox","properties":{"public":true},"children":[{"id":"614adbbe-adc6-4485-9e2d-1ef268d03fce","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-98f3-4727-a979-fc612c422b20","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-83dc-4928-acbf-6b41394ef72a","page-name":"2020-08-24","properties":{"public":true},"children":[{"id":"614adbbe-d8f4-4d94-b2ce-9bffe4b04a08","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-7166-40a0-a7a6-f65430e07e39","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-01b5-408a-8d5e-dc09ca10cf5f","page-name":"Thomas Boutell","properties":{"public":true},"children":[{"id":"614adbbe-e482-4c2a-8bce-05fe63fe0b50","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-8d5b-4319-bd28-22ed55901b85","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-b129-49c6-b148-73f13619efb2","page-name":"2021-06-16","children":[{"id":"614adbbe-900c-4599-a04b-884022670556","format":"markdown","children":[],"title":[["Plain","Today I held a workshop in testing for my team at "],["Link",{"url":["Page_ref","Hemnet"],"label":[["Plain",""]],"full_text":"[[Hemnet]]","metadata":""}],["Plain",". All the descriptions, code, and explanations are available on the page "],["Link",{"url":["Page_ref","Frontend testing workshop"],"label":[["Plain",""]],"full_text":"[[Frontend testing workshop]]","metadata":""}]],"body":[],"content":"Today I held a workshop in testing for my team at [[Hemnet]]. All the descriptions, code, and explanations are available on the page [[Frontend testing workshop]]"},{"id":"614adbbe-6b69-4e30-b589-6806771b1327","format":"markdown","children":[{"id":"614adbbe-40af-4ceb-90bb-a3eba9c697d8","format":"markdown","children":[],"title":[["Plain","Make many small commits instead of a few large ones. This will make the PR read more as a story of what happened which is a good compliment to a good description."]],"body":[],"content":"Make many small commits instead of a few large ones. This will make the PR read more as a story of what happened which is a good compliment to a good description."}],"title":[["Link",{"url":["Page_ref","Implementing a strong code-review culture"],"label":[["Plain",""]],"full_text":"[[Implementing a strong code-review culture]]","metadata":""}]],"body":[],"content":"[[Implementing a strong code-review culture]]"}]},{"id":"614adbbe-4544-4c27-a444-63520e87f92d","page-name":"2018-06-26","properties":{"public":true},"children":[{"id":"614adbbe-3dbc-4559-9a5b-f481781c8315","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-3524-4926-ac6e-30a9988208fc","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-a4bb-43fd-b105-f07599180360","page-name":"TDD","children":[{"id":"614adbbe-366f-45cd-95de-32f797790184","format":"markdown","children":[],"title":[["Plain","Test-driven development"]],"body":[],"content":"Test-driven development"}]},{"id":"614adbbe-8f12-462f-8c66-3ba132a2036d","page-name":"Twitter","properties":{"public":true},"children":[{"id":"614adbbd-e1f4-41df-a608-45b8be24a1a5","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbd-b3bd-4ffc-af10-5ebc70c0c790","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-fb10-450a-9ef0-1bded3ffcb6a","page-name":"Brittany Storoz","properties":{"public":true},"children":[{"id":"614adbbd-919c-423d-adaf-cdcbf7e3a152","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbd-2999-4411-8531-686515c759c4","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-326f-42ef-aa3e-847edba7d7f5","page-name":"2021-06-11","properties":{"public":true},"children":[{"id":"614adbbd-4b7a-42f3-949c-0f06461c34e1","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbd-7dcd-43c7-a6b1-3bac7eb5fba7","format":"markdown","children":[{"id":"614adbbd-2ef8-4ddb-aab3-ef9db894f289","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Learn by doing side projects"],"label":[["Plain",""]],"full_text":"[[Learn by doing side projects]]","metadata":""}]],"body":[],"content":"[[Learn by doing side projects]]"},{"id":"614adbbd-5340-445b-a4d3-a7b5366992cd","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Learning in public"],"label":[["Plain",""]],"full_text":"[[Learning in public]]","metadata":""}]],"body":[],"content":"[[Learning in public]]"},{"id":"614adbbd-4e0b-4ab3-ab11-ee0671168f9a","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Explain in plain words"],"label":[["Plain",""]],"full_text":"[[Explain in plain words]]","metadata":""}]],"body":[],"content":"[[Explain in plain words]]"}],"title":[["Plain","A coworker asked for tips on how to get more advanced "],["Link",{"url":["Page_ref","React"],"label":[["Plain",""]],"full_text":"[[React]]","metadata":""}],["Plain"," knowledge. This got me thinking about how I do learning."]],"body":[],"content":"A coworker asked for tips on how to get more advanced [[React]] knowledge. This got me thinking about how I do learning."}]},{"id":"614adbbe-f49e-4267-85be-ee447806379f","page-name":"Development","properties":{"public":true},"children":[{"id":"614adbbe-be79-4b64-b8ee-31a2ba7f1b85","properties":{"public":true},"format":"markdown","children":[],"content":"public:: true\n"}]},{"id":"614adbbe-dcea-4a6f-984a-34daab501c07","page-name":"Braden Becker","properties":{"public":true},"children":[{"id":"614adbbe-65a4-4aa8-84de-29b86e077a35","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-b18b-4c5f-b89c-fcfad60c36b8","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-5116-4bc2-ad2e-14738914557d","page-name":"Testing","properties":{"public":true},"children":[{"id":"614adbbe-3659-4120-a3c5-7ebd8cd24106","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-f487-421f-bc03-1e4e97618d43","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-4c8e-4ece-8516-c8a384ab358a","page-name":"NERDTree","properties":{"public":true},"children":[{"id":"614adbbd-b8e1-4d8b-8ace-8944093ded19","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbd-56a5-4a69-9fb8-ced51476132a","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-9e65-4253-959a-51dea9707a04","page-name":"Richard Feynman","properties":{"public":true},"children":[{"id":"614adbbd-bd3c-4b6b-97aa-5f7f0339f320","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbd-7139-4279-9a36-326145a28846","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-a687-488e-bbcf-027be4519f63","page-name":"How to save and quit Vim","properties":{"title":"How to save and quit Vim","public":true},"children":[{"id":"614adbbe-6017-46e5-89be-6a4be63ee80d","properties":{"title":"How to save and quit Vim","public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"title:: How to save and quit Vim\npublic:: true\n\n"},{"id":"614adbbe-7add-46bd-9158-9b1b93b444b5","format":"markdown","children":[{"id":"614adbbe-3b8c-4682-a717-468bc72cb3c2","format":"markdown","children":[],"title":[["Code",":q"],["Plain"," - quit (short for "],["Code",":quit"],["Plain",")"]],"body":[],"content":"``:q`` - quit (short for ``:quit``)"},{"id":"614adbbe-7a2a-4da7-9676-eed8bc546453","format":"markdown","children":[],"title":[["Code",":q!"],["Plain"," - quit without saving"]],"body":[],"content":"``:q!`` - quit without saving"},{"id":"614adbbe-028d-464e-836e-0c9824cb14cc","format":"markdown","children":[],"title":[["Code",":qa"],["Plain"," - quit all"]],"body":[],"content":"``:qa`` - quit all"},{"id":"614adbbe-54fb-4ce5-9a76-6580f0c62cf8","format":"markdown","children":[],"title":[["Code",":wq"],["Plain"," - write (save) and quit"]],"body":[],"content":"``:wq`` - write (save) and quit"},{"id":"614adbbe-818e-44c8-a3f1-5477fb8bf4ab","format":"markdown","children":[],"title":[["Code",":wq!"],["Plain"," - write and quit even if the file is in read only mode"]],"body":[],"content":"``:wq!`` - write and quit even if the file is in read only mode"},{"id":"614adbbe-4d63-428a-9ebe-3b30229113ad","format":"markdown","children":[],"title":[["Code",":x"],["Plain"," - write and quit (only writes if there are changes)"]],"body":[],"content":"``:x`` - write and quit (only writes if there are changes)"},{"id":"614adbbe-c915-4a01-a777-022658be6b0c","format":"markdown","children":[],"title":[["Code","ZZ"],["Plain"," - same as "],["Code",":x"]],"body":[],"content":"``ZZ`` - same as ``:x``"}],"title":[["Plain","There's a "],["Link",{"url":["Complex",{"protocol":"https","link":"twitter.com/iamdevloper/status/435555976687923200"}],"label":[["Plain","joke around the internet"]],"full_text":"[joke around the internet](https://twitter.com/iamdevloper/status/435555976687923200)","metadata":""}],["Plain"," that it's impossible to quit "],["Link",{"url":["Page_ref","Vim"],"label":[["Plain",""]],"full_text":"[[Vim]]","metadata":""}],["Plain",", but we'll see that it's actually not that hard. First of all, make sure that you're in "],["Emphasis",[["Bold"],[["Plain","normal mode"]]]],["Plain",". If you haven't changed any settings, you'll get to normal mode by pressing "],["Code","Esc"],["Plain",". From here you can use any of the following commands:"]],"body":[],"content":"There's a [joke around the internet](https://twitter.com/iamdevloper/status/435555976687923200) that it's impossible to quit [[Vim]], but we'll see that it's actually not that hard. First of all, make sure that you're in **normal mode**. If you haven't changed any settings, you'll get to normal mode by pressing ``Esc``. From here you can use any of the following commands:"},{"id":"614adbbe-a6d5-42fe-bcec-ac3353bd19cb","format":"markdown","children":[],"title":[["Plain","All together that would for instance be: "],["Code","Esc:q"]],"body":[],"content":"All together that would for instance be: ``Esc:q``"},{"id":"614adbbe-50b6-4072-877b-293e5587815f","format":"markdown","children":[],"title":[],"body":[["Horizontal_Rule"]],"content":"  ---"},{"id":"614adbbe-eb01-46a8-81e4-37a34f5ddcd9","format":"markdown","children":[],"title":[["Tag",[["Plain","Vim"]]]],"body":[],"content":"#Vim"},{"id":"614adbbe-ecc0-4968-a663-88aad0b9918d","format":"markdown","children":[],"title":[["Emphasis",[["Bold"],[["Plain","ID:"]]]],["Plain"," 210609194733"]],"body":[],"content":"**ID:** 210609194733"}]},{"id":"614adbbe-792b-4597-a749-1fabcc1b7156","page-name":"Index signature","properties":{"public":true},"children":[{"id":"614adbbe-2855-44e9-8c8b-d995370cc890","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-c2d1-4c79-9a6e-0820daca743e","format":"markdown","children":[],"title":[["Link",{"url":["Complex",{"protocol":"https","link":"www.typescriptlang.org/docs/handbook/2/objects.html#index-signatures"}],"label":[["Plain","Documentation"]],"full_text":"[Documentation](https://www.typescriptlang.org/docs/handbook/2/objects.html#index-signatures)","metadata":""}]],"body":[],"content":"[Documentation](https://www.typescriptlang.org/docs/handbook/2/objects.html#index-signatures)"}]},{"id":"614adbbe-565b-42ae-a6f3-b56614789666","page-name":"PR","properties":{"public":true},"children":[{"id":"614adbbd-6dc0-4a1d-ae88-7f81cbfd262a","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbd-b77c-4283-ac8b-3cdd0879557d","format":"markdown","children":[],"title":[["Plain","A pull request"]],"body":[],"content":"A pull request"}]},{"id":"614adbbe-681c-48bb-94e3-4f045135c331","page-name":"Handling tech debt is like doing the dishes","children":[{"id":"614adbbe-bb25-41f7-ae4b-ebcf148d28ce","format":"markdown","children":[],"title":[["Plain","Whenever you procrastinate on doing the dishes – even if it's only a plate, a knife, and a fork – something happens. The dishes start to pile up since there's already something in the sink. If you have a dishwasher there might be a feeling that \"the dishwasher must be full or running or clean and I don't want to be the one to handle it\". You do this knowing full well that the problem will become more of a hassle with each item that gets added to the pile."]],"body":[],"content":"Whenever you procrastinate on doing the dishes – even if it's only a plate, a knife, and a fork – something happens. The dishes start to pile up since there's already something in the sink. If you have a dishwasher there might be a feeling that \"the dishwasher must be full or running or clean and I don't want to be the one to handle it\". You do this knowing full well that the problem will become more of a hassle with each item that gets added to the pile."},{"id":"614adbbe-c4e7-4487-a1d0-32ca544981d1","format":"markdown","children":[],"title":[["Plain","The same can be said for "],["Link",{"url":["Page_ref","Technical debt"],"label":[["Plain",""]],"full_text":"[[Technical debt]]","metadata":""}],["Plain",". The longer we ignore or avoid the issues, the harder they'll be to clean up. "],["Emphasis",[["Bold"],[["Plain","When you spot something, take a short amount of time and fix it"]]]],["Plain",". It'll be much easier to do now when you are in the context. Or at least make a note, preferably with context, and make sure it's fixed straight after the feature has been released."]],"body":[],"content":"The same can be said for [[Technical debt]]. The longer we ignore or avoid the issues, the harder they'll be to clean up. **When you spot something, take a short amount of time and fix it**. It'll be much easier to do now when you are in the context. Or at least make a note, preferably with context, and make sure it's fixed straight after the feature has been released."},{"id":"614adbbe-040b-42b6-94cf-18f752c58262","format":"markdown","children":[],"title":[],"body":[["Horizontal_Rule"]],"content":"  ---"},{"id":"614adbbe-ba24-4a38-8fa8-76e2ae8e5384","format":"markdown","children":[],"title":[["Tag",[["Plain","Development"]]]],"body":[],"content":"#Development"},{"id":"614adbbe-763a-4859-a78a-2c3c530e9c3d","format":"markdown","children":[],"title":[["Emphasis",[["Bold"],[["Plain","ID:"]]]],["Plain"," 210630160342"]],"body":[],"content":"**ID:** 210630160342"}]},{"id":"614adbbe-3d48-428d-a2c6-f3a8884e5407","page-name":"React Query","properties":{"public":true},"children":[{"id":"614adbbd-cb22-47c2-8afb-857b9d491c1f","properties":{"public":true},"format":"markdown","children":[],"content":"public:: true\n"}]},{"id":"614adbbe-ad38-489b-8d69-f3894b3f4279","page-name":"React Podcast","properties":{"public":true},"children":[{"id":"614adbbe-9342-49de-aab9-6495a03fd2e5","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-4168-4bd2-95c3-859c3510616e","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-a1d1-4cfb-b492-aa9a9c3ee2ee","page-name":"TypeScript","properties":{"public":true},"children":[{"id":"614adbbe-a561-40bd-a0a5-734930f7e2fc","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-6751-4c51-9232-105389b8d110","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-4130-401e-8d96-ddaba7e9b0fa","page-name":"2021-06-09","properties":{"public":true},"children":[{"id":"614adbbe-a3ee-4ce7-b7e7-5c5f0532936f","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-50b0-46de-a4bb-e073f012bb62","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Rewriting Git commit history"],"label":[["Plain",""]],"full_text":"[[Rewriting Git commit history]]","metadata":""}]],"body":[],"content":"[[Rewriting Git commit history]]"},{"id":"614adbbe-7c04-4743-8adf-671b618cac80","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Write useful error messages"],"label":[["Plain",""]],"full_text":"[[Write useful error messages]]","metadata":""}]],"body":[],"content":"[[Write useful error messages]]"},{"id":"614adbbe-f54a-4ffd-bfab-197fb3362430","format":"markdown","children":[{"id":"614adbbe-d8f5-45f4-9a4f-03b18ceb1799","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["type Server = 'dev' | 'stage' | 'production'","\n","\t  ","\n","// Index signature","\n","const serversIndex: { [key in Server]: string } = {","\n","  dev: 'url-dev',","\n","  stage: 'url-stage',","\n","  production: 'url-production'","\n","} as const","\n","\t  ","\n","// Using the Record utility","\n","const serversRecord: Record<Server, string> = {","\n","  dev: 'url-dev',","\n","  stage: 'url-stage',","\n","  production: 'url-production'","\n","} as const","\n"],"language":"ts","pos_meta":{"start_pos":301,"end_pos":707},"full_content":"```ts\ntype Server = 'dev' | 'stage' | 'production'\n\n// Index signature\nconst serversIndex: { [key in Server]: string } = {\n  dev: 'url-dev',\n  stage: 'url-stage',\n  production: 'url-production'\n} as const\n\n// Using the Record utility\nconst serversRecord: Record<Server, string> = {\n  dev: 'url-dev',\n  stage: 'url-stage',\n  production: 'url-production'\n} as const\n```"}]],"content":"\t  ```ts\ntype Server = 'dev' | 'stage' | 'production'\n\n// Index signature\nconst serversIndex: { [key in Server]: string } = {\n  dev: 'url-dev',\n  stage: 'url-stage',\n  production: 'url-production'\n} as const\n\n// Using the Record utility\nconst serversRecord: Record<Server, string> = {\n  dev: 'url-dev',\n  stage: 'url-stage',\n  production: 'url-production'\n} as const\n```"},{"id":"614adbbe-5124-4d55-99ba-c554b3721720","format":"markdown","children":[],"title":[["Link",{"url":["Complex",{"protocol":"https","link":"www.typescriptlang.org/play?#code/C4TwDgpgBAyhBOA3BUC8UDkATCiNQB9MBnYAQwHMJ8iMx4B7LAVwGNgBLBgOwwCg+rHqSjEEyeMQBcUAN5QA2gGsIIKB26xxCALozS8DRSgBfNHL5QoORDIzN4AGwC0NjABpLo8lTsOXpJTUnlb0TGycPH5OzmEs7Fy8fGZkxFBC3KQCGSJiSAgAotyIHIzcALYQ3MDSUABKEELwWAA8cPnw7t6G3BQAfOayXjbRLm4h3kGjzoFUHl5xEYnTiwk8-ClpOcAA3HxAA"}],"label":[["Plain","TS Playground"]],"full_text":"[TS Playground](https://www.typescriptlang.org/play?#code/C4TwDgpgBAyhBOA3BUC8UDkATCiNQB9MBnYAQwHMJ8iMx4B7LAVwGNgBLBgOwwCg+rHqSjEEyeMQBcUAN5QA2gGsIIKB26xxCALozS8DRSgBfNHL5QoORDIzN4AGwC0NjABpLo8lTsOXpJTUnlb0TGycPH5OzmEs7Fy8fGZkxFBC3KQCGSJiSAgAotyIHIzcALYQ3MDSUABKEELwWAA8cPnw7t6G3BQAfOayXjbRLm4h3kGjzoFUHl5xEYnTiwk8-ClpOcAA3HxAA)","metadata":""}]],"body":[],"content":"[TS Playground](https://www.typescriptlang.org/play?#code/C4TwDgpgBAyhBOA3BUC8UDkATCiNQB9MBnYAQwHMJ8iMx4B7LAVwGNgBLBgOwwCg+rHqSjEEyeMQBcUAN5QA2gGsIIKB26xxCALozS8DRSgBfNHL5QoORDIzN4AGwC0NjABpLo8lTsOXpJTUnlb0TGycPH5OzmEs7Fy8fGZkxFBC3KQCGSJiSAgAotyIHIzcALYQ3MDSUABKEELwWAA8cPnw7t6G3BQAfOayXjbRLm4h3kGjzoFUHl5xEYnTiwk8-ClpOcAA3HxAA)"}],"title":[["Plain","In "],["Link",{"url":["Page_ref","TypeScript"],"label":[["Plain",""]],"full_text":"[[TypeScript]]","metadata":""}],["Plain"," there are two syntaxes (are there more?) for defining a type of an "],["Code","object"],["Plain",", either "],["Link",{"url":["Page_ref","Index signature"],"label":[["Plain",""]],"full_text":"[[Index signature]]","metadata":""}],["Plain"," or the "],["Link",{"url":["Page_ref","Record utility"],"label":[["Plain",""]],"full_text":"[[Record utility]]","metadata":""}],["Plain",". In my opinion, the Record syntax looks more readable."]],"body":[],"content":"In [[TypeScript]] there are two syntaxes (are there more?) for defining a type of an `object`, either [[Index signature]] or the [[Record utility]]. In my opinion, the Record syntax looks more readable."}]},{"id":"614adbbe-0d84-4aac-8ebe-0d929a50aeba","page-name":"Structure of CSS","children":[{"id":"614adbbe-74b9-4a76-8007-7e05f6321658","format":"markdown","children":[],"title":[["Plain","The basic blocks of CSS are "],["Emphasis",[["Bold"],[["Plain","properties"]]]],["Plain"," and "],["Emphasis",[["Bold"],[["Plain","values"]]]],["Plain",". Properties are a human-readable identifiers that describe "],["Emphasis",[["Italic"],[["Plain","what"]]]],["Plain"," is being styled. Values indicate "],["Emphasis",[["Italic"],[["Plain","how"]]]],["Plain"," to style that property. When these are paired together they create a "],["Emphasis",[["Bold"],[["Plain","CSS declaration"]]]]],"body":[],"content":"The basic blocks of CSS are **properties** and **values**. Properties are a human-readable identifiers that describe _what_ is being styled. Values indicate _how_ to style that property. When these are paired together they create a **CSS declaration**"},{"id":"614adbbe-0fe2-4760-89a8-ec02509df258","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["/* Property: color, value: red - together they form a CSS declaration */","\n","color: red;","\n"],"language":"css","pos_meta":{"start_pos":266,"end_pos":357},"full_content":"``` css\n/* Property: color, value: red - together they form a CSS declaration */\ncolor: red;\n```"}]],"content":"  ``` css\n/* Property: color, value: red - together they form a CSS declaration */\ncolor: red;\n```"},{"id":"614adbbe-edb0-4c3a-a5ae-88f6296e7db6","format":"markdown","children":[],"title":[["Plain","CSS declarations are found within "],["Emphasis",[["Bold"],[["Plain","CSS declaration blocks"]]]],["Plain",". When CSS declaration blocks are paired with "],["Emphasis",[["Bold"],[["Plain","selectors"]]]],["Plain"," (or a list of selectors) they produce "],["Emphasis",[["Bold"],[["Plain","CSS rulesets"]]]],["Plain"," (or CSS rules)."]],"body":[],"content":"CSS declarations are found within **CSS declaration blocks**. When CSS declaration blocks are paired with **selectors** (or a list of selectors) they produce **CSS rulesets** (or CSS rules)."},{"id":"614adbbe-e996-4b87-8593-e292aa7894a4","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["/* p is a selector which together with the CSS declaration block creates a CSS rule */","\n","p {","\n","  /* Multiple declarations form a CSS declaration block */","\n","  background-color: black;","\n","  color: white;","\n","}","\n"],"language":"css","pos_meta":{"start_pos":566,"end_pos":775},"full_content":"``` css\n/* p is a selector which together with the CSS declaration block creates a CSS rule */\np {\n  /* Multiple declarations form a CSS declaration block */\n  background-color: black;\n  color: white;\n}\n```"}]],"content":"  ``` css\n/* p is a selector which together with the CSS declaration block creates a CSS rule */\np {\n  /* Multiple declarations form a CSS declaration block */\n  background-color: black;\n  color: white;\n}\n```"},{"id":"614adbbe-ce86-4f03-a024-f0907171201b","format":"markdown","children":[],"title":[],"body":[["Horizontal_Rule"]],"content":"  ---"},{"id":"614adbbe-4d74-40f7-bd74-9ae2307d2e87","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","MDN"],"label":[["Plain",""]],"full_text":"[[MDN]]","metadata":""}],["Plain",". "],["Emphasis",[["Italic"],[["Plain","How CSS is structured"]]]],["Plain",". "],["Link",{"url":["Complex",{"protocol":"https","link":"developer.mozilla.org/en-US/docs/Learn/CSS/First_steps/How_CSS_is_structured"}],"label":[["Plain","https://developer.mozilla.org/en-US/docs/Learn/CSS/First_steps/How_CSS_is_structured"]],"full_text":"https://developer.mozilla.org/en-US/docs/Learn/CSS/First_steps/How_CSS_is_structured","metadata":""}]],"body":[],"content":"[[MDN]]. _How CSS is structured_. https://developer.mozilla.org/en-US/docs/Learn/CSS/First_steps/How_CSS_is_structured"},{"id":"614adbbe-8165-4ab3-aea7-d0d9a80839b7","format":"markdown","children":[],"title":[],"body":[["Paragraph",[["Plain",""],["Tag",[["Plain","CSS"]]],["Break_Line"]]]],"content":"  #CSS"},{"id":"614adbbe-3d36-4bb5-a550-0ce266fd097a","format":"markdown","children":[],"title":[["Emphasis",[["Bold"],[["Plain","ID:"]]]],["Plain"," 210622091048"]],"body":[],"content":"**ID:** 210622091048"}]},{"id":"618bc3b2-d3fd-40c1-9f34-da5aa8ddafba","page-name":"Use valueAsNumber and valueAsDate on inputs","properties":{"tags":["HTML"],"pid":211110140610},"children":[{"id":"618bc3b3-3c9c-4ec1-bfed-dd06630f3ed1","properties":{"tags":["HTML"],"pid":211110140610},"format":"markdown","children":[],"content":"tags:: HTML,\npid:: 211110140610\n"},{"id":"618bc416-ed31-4d17-91bc-c9623c36764c","properties":{},"format":"markdown","children":[],"title":[["Plain","If you want to get the value of an input as a number or a date you can easily parse the value of a "],["Code","type=\"text\""],["Plain"," input. However, there's an easier solution by using "],["Code","valueAsNumber"],["Plain"," or "],["Code","valueAsDate"],["Plain",". The attributes are only available "],["Link",{"url":["Complex",{"protocol":"https","link":"www.w3.org/TR/2011/WD-html5-20110525/the-input-element.html#input-type-attr-summary"}],"label":[["Plain","for certain input types"]],"full_text":"[for certain input types](https://www.w3.org/TR/2011/WD-html5-20110525/the-input-element.html#input-type-attr-summary)","metadata":""}],["Plain",". The attributes return "],["Code","NaN"],["Plain"," if not available or if the value is invalid."]],"body":[],"content":"If you want to get the value of an input as a number or a date you can easily parse the value of a `type=\"text\"` input. However, there's an easier solution by using ``valueAsNumber`` or ``valueAsDate``. The attributes are only available [for certain input types](https://www.w3.org/TR/2011/WD-html5-20110525/the-input-element.html#input-type-attr-summary). The attributes return ``NaN`` if not available or if the value is invalid."},{"id":"618bc5ed-244f-4355-8e84-90a8620b4d69","properties":{},"format":"markdown","children":[],"title":[["Plain","Browser support is great, "],["Code","valueAsNumber"],["Plain"," is supported by all browsers (even "],["Link",{"url":["Page_ref","IE"],"label":[["Plain",""]],"full_text":"[[IE]]","metadata":""}],["Plain",") and "],["Code","valueAsDate"],["Plain"," is supported by all browsers except IE."]],"body":[],"content":"Browser support is great, `valueAsNumber` is supported by all browsers (even [[IE]]) and ``valueAsDate`` is supported by all browsers except IE."},{"id":"618bc671-2265-4b2e-831f-17268bc93919","properties":{},"format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["// This will always return NaN since valueAsNumber is not available on text inputs","\n","<input type=\"text\" onChange={e => console.log(e.target.valueAsNumber)} />","\n","\n","// Return the value as an integer or a float","\n","// depending on the input's step attribute","\n","<input type=\"number\" onChange={e => console.log(e.target.valueAsNumber)} />","\n","\n","// Return the date as a UNIX timestamp, i.e. new Date().getTime()","\n","<input type=\"date\" onChange={e => console.log(e.target.valueAsNumber)} />","\n","\n","// Return the date as a JS Date object","\n","<input type=\"date\" onChange={e => console.log(e.target.valueAsDate)} />","\n"],"language":"js","pos_meta":{"start_pos":8,"end_pos":583},"full_content":"```js\n// This will always return NaN since valueAsNumber is not available on text inputs\n<input type=\"text\" onChange={e => console.log(e.target.valueAsNumber)} />\n\n// Return the value as an integer or a float\n// depending on the input's step attribute\n<input type=\"number\" onChange={e => console.log(e.target.valueAsNumber)} />\n\n// Return the date as a UNIX timestamp, i.e. new Date().getTime()\n<input type=\"date\" onChange={e => console.log(e.target.valueAsNumber)} />\n\n// Return the date as a JS Date object\n<input type=\"date\" onChange={e => console.log(e.target.valueAsDate)} />\n```"}]],"content":"```js\n// This will always return NaN since valueAsNumber is not available on text inputs\n<input type=\"text\" onChange={e => console.log(e.target.valueAsNumber)} />\n\n// Return the value as an integer or a float\n// depending on the input's step attribute\n<input type=\"number\" onChange={e => console.log(e.target.valueAsNumber)} />\n\n// Return the date as a UNIX timestamp, i.e. new Date().getTime()\n<input type=\"date\" onChange={e => console.log(e.target.valueAsNumber)} />\n\n// Return the date as a JS Date object\n<input type=\"date\" onChange={e => console.log(e.target.valueAsDate)} />\n```"},{"id":"618bc3c4-30a7-40f4-b88a-c1f4dc740d91","properties":{},"format":"markdown","children":[],"title":[],"body":[["Horizontal_Rule"]],"content":"---"},{"id":"618bc3c5-66d6-4f21-a5e5-74514f57435c","properties":{},"format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","MDN"],"label":[["Plain",""]],"full_text":"[[MDN]]","metadata":""}],["Plain",". "],["Link",{"url":["Page_ref","2021-11-10"],"label":[["Plain",""]],"full_text":"[[2021-11-10]]","metadata":""}],["Plain",". "],["Emphasis",[["Italic"],[["Plain","HTMLInputElement"]]]],["Plain",". "],["Link",{"url":["Complex",{"protocol":"https","link":"developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement"}],"label":[["Plain","Link"]],"full_text":"[Link](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)","metadata":""}]],"body":[],"content":"[[MDN]]. [[2021-11-10]]. _HTMLInputElement_. [Link](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement)"},{"id":"618bc3eb-336a-4c5c-a7b1-b5a8771984cb","properties":{},"format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Can I Use"],"label":[["Plain",""]],"full_text":"[[Can I Use]]","metadata":""}],["Plain",". "],["Link",{"url":["Page_ref","2021-11-10"],"label":[["Plain",""]],"full_text":"[[2021-11-10]]","metadata":""}],["Plain",". "],["Emphasis",[["Italic"],[["Plain","HTMLInputElement API: valueAsNumber"]]]],["Plain",". "],["Link",{"url":["Complex",{"protocol":"https","link":"caniuse.com/mdn-api_htmlinputelement_valueasnumber"}],"label":[["Plain","Link"]],"full_text":"[Link](https://caniuse.com/mdn-api_htmlinputelement_valueasnumber)","metadata":""}]],"body":[],"content":"[[Can I Use]]. [[2021-11-10]]. _HTMLInputElement API: valueAsNumber_. [Link](https://caniuse.com/mdn-api_htmlinputelement_valueasnumber)"}]},{"id":"614adbbe-5a7b-4e55-be74-8e922e6471a9","page-name":"SEO","properties":{"public":true},"children":[{"id":"614adbbe-8f71-468f-aa37-2d934d617a7a","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-a3d8-407c-8eaf-3f8be9d51166","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-10f5-4c75-ad7a-6f851455cf7a","page-name":"Vim","properties":{"public":true},"children":[{"id":"614adbbe-d7a8-42d4-b6ae-e9775878a727","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-37df-433c-97c0-0714d083ece6","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-d1d8-48e9-9a71-331cdf2b2f9e","page-name":"Testing Library","properties":{"public":true},"children":[{"id":"614adbbe-a163-4598-abdc-7fb0a2c60def","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-71d6-4c06-9e45-64766123146b","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-5c2a-4de8-a55f-92f112fa54ec","page-name":"2015-04-30","properties":{"public":true},"children":[{"id":"614adbbe-b311-47d3-81d3-fdaf5c7de773","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-3033-4b08-997d-5d8d00b941e5","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614ae420-ee0e-40b2-b365-258c36da1706","page-name":"Falsy in JavaScript","properties":{"alias":["falsy"],"title":"Falsy in JavaScript","tags":["JavaScript"]},"children":[{"id":"614ae422-8623-4ad0-b32b-871f3e953e3e","properties":{"alias":["falsy"],"title":"Falsy in JavaScript","tags":["JavaScript"]},"format":"markdown","children":[],"content":"alias:: falsy\ntitle:: Falsy in JavaScript\ntags:: JavaScript,"},{"id":"614ae44b-b597-4080-a6ca-9b1a3a8f9387","properties":{},"format":"markdown","children":[],"title":[["Plain","Empty string"]],"body":[],"content":"Empty string"},{"id":"614ae451-bced-4bc6-9302-20f78ba523b6","properties":{},"format":"markdown","children":[],"title":[["Plain","0 and -0"]],"body":[],"content":"0 and -0"},{"id":"614ae455-a91b-4497-8a87-3845f8c6223f","properties":{},"format":"markdown","children":[],"title":[["Code","false"]],"body":[],"content":"`false`"},{"id":"614ae45a-f42e-4fad-88fd-690caa78e037","properties":{},"format":"markdown","children":[],"title":[["Code","undefined"]],"body":[],"content":"``undefined``"},{"id":"614ae45d-6322-4552-bbba-ec5652e82994","properties":{},"format":"markdown","children":[],"title":[["Code","null"]],"body":[],"content":"``null``"}]},{"id":"614adbbe-1cd1-4ef7-bb15-318ba80acbec","page-name":"Good documentation is written by and for humans","children":[{"id":"614adbbe-1776-4670-b867-3124c21fa4e7","properties":{},"format":"markdown","children":[],"title":[["Plain","Writing good documentation is hard. Remember that you are writing for humans. It might be the first time they are seeing code like the one you are describing."]],"body":[],"content":"Writing good documentation is hard. Remember that you are writing for humans. It might be the first time they are seeing code like the one you are describing."},{"id":"614adbbe-12ac-4a92-a980-0e798be88cb4","format":"markdown","children":[],"title":[["Plain","Everyone has at least one example of good documentation. Write your documentation as that example, they way you would want to find it. "],["Link",{"url":["Page_ref","Explain in plain words"],"label":[["Plain",""]],"full_text":"[[Explain in plain words]]","metadata":""}],["Plain"," as everyone might not have the same level of knowledge as you do."]],"body":[],"content":"Everyone has at least one example of good documentation. Write your documentation as that example, they way you would want to find it. [[Explain in plain words]] as everyone might not have the same level of knowledge as you do."},{"id":"614adbbe-d271-442c-adc6-42869f6e79b7","format":"markdown","children":[],"title":[["Plain","There are tools that help with generating documentation, but it does not help you write good documentation. "],["Emphasis",[["Bold"],[["Plain","Generate documentation when possible, but put in extra effort to make it good."]]]]],"body":[],"content":"There are tools that help with generating documentation, but it does not help you write good documentation. **Generate documentation when possible, but put in extra effort to make it good.**"},{"id":"614adbbe-0f1e-4759-8c11-388cc12ca2a4","format":"markdown","children":[],"title":[],"body":[["Horizontal_Rule"]],"content":"  ---"},{"id":"614adbbe-65f7-429c-91d9-c87e1b610e26","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Jason Etcovich"],"label":[["Plain",""]],"full_text":"[[Jason Etcovich]]","metadata":""}],["Plain",". ("],["Link",{"url":["Page_ref","2020-08-24"],"label":[["Plain",""]],"full_text":"[[2020-08-24]]","metadata":""}],["Plain","). "],["Emphasis",[["Italic"],[["Plain","\"Assorted thoughts on documentation\""]]]],["Plain",". "],["Link",{"url":["Complex",{"protocol":"https","link":"jasonet.co/posts/thoughts-on-docs/"}],"label":[["Plain","https://jasonet.co/posts/thoughts-on-docs/"]],"full_text":"https://jasonet.co/posts/thoughts-on-docs/","metadata":""}]],"body":[],"content":"[[Jason Etcovich]]. ([[2020-08-24]]). _\"Assorted thoughts on documentation\"_. https://jasonet.co/posts/thoughts-on-docs/"},{"id":"614adbbe-7372-4997-9d1a-4004aebd289d","format":"markdown","children":[],"title":[["Tag",[["Plain","Development"]]],["Plain",", "],["Tag",[["Plain","Documentation"]]]],"body":[],"content":"#Development, #Documentation"},{"id":"614adbbe-9f46-458d-b37a-efe775d263bb","format":"markdown","children":[],"title":[["Emphasis",[["Bold"],[["Plain","ID:"]]]],["Plain"," 210718220754"]],"body":[],"content":"**ID:** 210718220754"}]},{"id":"614adbbe-6ab5-47ed-b6b5-a31be3bd434a","page-name":"AbortController can be used to cancel multiple request","children":[{"id":"614adbbe-e411-4edc-b26b-7f6ff17668c3","format":"markdown","children":[],"title":[["Plain","Let's say the user clicks a link while we are still loading some data. Then we can use "],["Code","AbortController"],["Plain",", a controller object that allows us to abort "],["Emphasis",[["Bold"],[["Plain","one or more web requests"]]]],["Plain",", to tell the browser to cancel and ignore the request."]],"body":[],"content":"Let's say the user clicks a link while we are still loading some data. Then we can use ``AbortController``, a controller object that allows us to abort **one or more web requests**, to tell the browser to cancel and ignore the request."},{"id":"614adbbe-beb6-42f7-8ef6-14069339765f","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["const { signal } = new AbortController();","\n","  ","\n","// Pass the same signal to multiple promises","\n","fetch('url-one', { signal });","\n","fetch('url-two', { signal });","\n","  ","\n","// Cancel all requests","\n","controller.abort();","\n"],"language":"js","pos_meta":{"start_pos":249,"end_pos":459},"full_content":"``` js\nconst { signal } = new AbortController();\n\n// Pass the same signal to multiple promises\nfetch('url-one', { signal });\nfetch('url-two', { signal });\n\n// Cancel all requests\ncontroller.abort();\n```"}]],"content":"  ``` js\nconst { signal } = new AbortController();\n\n// Pass the same signal to multiple promises\nfetch('url-one', { signal });\nfetch('url-two', { signal });\n\n// Cancel all requests\ncontroller.abort();\n```"},{"id":"614adbbe-2a93-4537-a13e-f42ed3d3fbe4","format":"markdown","children":[],"title":[],"body":[["Horizontal_Rule"]],"content":"  ---"},{"id":"614adbbe-5d1c-4b95-aeab-135250dfa7ce","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Ryan Florence"],"label":[["Plain",""]],"full_text":"[[Ryan Florence]]","metadata":""}],["Plain",". ("],["Link",{"url":["Page_ref","2021-06-21"],"label":[["Plain",""]],"full_text":"[[2021-06-21]]","metadata":""}],["Plain","). "],["Emphasis",[["Italic"],[["Plain","\"AbortController\""]]]],["Plain",". "],["Link",{"url":["Complex",{"protocol":"https","link":"ryanflorence.dev/p/abortcontroller"}],"label":[["Plain","https://ryanflorence.dev/p/abortcontroller"]],"full_text":"https://ryanflorence.dev/p/abortcontroller","metadata":""}]],"body":[],"content":"[[Ryan Florence]]. ([[2021-06-21]]). _\"AbortController\"_. https://ryanflorence.dev/p/abortcontroller"},{"id":"614adbbe-426a-40da-a114-a405f4883ea6","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","MDN"],"label":[["Plain",""]],"full_text":"[[MDN]]","metadata":""}],["Plain",". "],["Emphasis",[["Italic"],[["Plain","AbortController"]]]],["Plain",". "],["Link",{"url":["Complex",{"protocol":"https","link":"developer.mozilla.org/en-US/docs/Web/API/AbortController"}],"label":[["Plain","https://developer.mozilla.org/en-US/docs/Web/API/AbortController"]],"full_text":"https://developer.mozilla.org/en-US/docs/Web/API/AbortController","metadata":""}]],"body":[],"content":"[[MDN]]. _AbortController_. https://developer.mozilla.org/en-US/docs/Web/API/AbortController"},{"id":"614adbbe-8898-4c33-a350-43dde3bf30d6","format":"markdown","children":[],"title":[["Tag",[["Plain","Development"]]],["Plain",", "],["Tag",[["Plain","React"]]]],"body":[],"content":"#Development, #React"},{"id":"614adbbe-6e85-4da7-b726-89ec65bb2c2f","format":"markdown","children":[],"title":[["Emphasis",[["Bold"],[["Plain","ID:"]]]],["Plain"," 210622110339"]],"body":[],"content":"**ID:** 210622110339"}]},{"id":"618bc3a2-3e70-494e-8bf8-62e05f4ebe51","page-name":"2021-11-10","format":"markdown","children":[{"id":"618bc3a2-5e45-4e02-ab96-d4ec3edb43b7","properties":{},"format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Use valueAsNumber and valueAsDate on inputs"],"label":[["Plain",""]],"full_text":"[[Use valueAsNumber and valueAsDate on inputs]]","metadata":""}]],"body":[],"content":"[[Use valueAsNumber and valueAsDate on inputs]]"},{"id":"618c0996-624e-4b1b-ab80-537fd79e6c82","properties":{},"format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Save disk space by deleting node_modules"],"label":[["Plain",""]],"full_text":"[[Save disk space by deleting node_modules]]","metadata":""}]],"body":[],"content":"[[Save disk space by deleting node_modules]]"}]},{"id":"614adbbe-690c-4056-a885-54d64c049e3a","page-name":"Learn by doing side projects","properties":{"public":true},"children":[{"id":"614adbbe-e3f8-4b66-9ac4-ac693305e050","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-55da-41b7-82cf-5e6133d33841","format":"markdown","children":[],"title":[["Plain","I think I can honestly say that building a bunch of side projects has made me a better developer. I get to actively work on different problems, try new things and improve my knowledge."]],"body":[],"content":"I think I can honestly say that building a bunch of side projects has made me a better developer. I get to actively work on different problems, try new things and improve my knowledge."},{"id":"614adbbe-f797-4dac-9bdd-b76102104991","format":"markdown","children":[],"title":[["Plain","Have "],["Emphasis",[["Bold"],[["Plain","one specific project"]]]],["Plain",", a project you know "],["Emphasis",[["Italic"],[["Plain","exactly"]]]],["Plain"," how you want it to work, to test out new ideas, technology and frameworks on. If it contains multiple parts, like interacting with an "],["Link",{"url":["Page_ref","API"],"label":[["Plain",""]],"full_text":"[[API]]","metadata":""}],["Plain"," or how to contain state, it's a perfect project to evaluate new technologies with."]],"body":[],"content":"Have **one specific project**, a project you know _exactly_ how you want it to work, to test out new ideas, technology and frameworks on. If it contains multiple parts, like interacting with an [[API]] or how to contain state, it's a perfect project to evaluate new technologies with."},{"id":"614adbbe-d99b-4628-94fb-7d04a1fa4e13","format":"markdown","children":[],"title":[["Plain","You can potentially learn even more by "],["Link",{"url":["Page_ref","Learning in public"],"label":[["Plain",""]],"full_text":"[[Learning in public]]","metadata":""}]],"body":[],"content":"You can potentially learn even more by [[Learning in public]]"},{"id":"614adbbe-a6b5-4809-994f-9d087c9a87b8","format":"markdown","children":[],"title":[],"body":[["Horizontal_Rule"]],"content":"  ---"},{"id":"614adbbe-bbb5-4615-a027-ca0869e1a74e","format":"markdown","children":[],"title":[["Tag",[["Plain","Learning"]]]],"body":[],"content":"#Learning"},{"id":"614adbbe-ea71-46ac-accd-e1e458820984","format":"markdown","children":[],"title":[["Emphasis",[["Bold"],[["Plain","ID:"]]]],["Plain"," 210611104633"]],"body":[],"content":"**ID:** 210611104633"}]},{"id":"614adbbe-fee1-4d0e-a70d-36dd71447216","page-name":"TIL","properties":{"public":true},"children":[{"id":"614adbbe-7c87-43f8-b797-33190dbc699b","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-ddfa-4d54-8d98-7dda679e3b35","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-f66a-447c-8fb8-6aa131188328","page-name":"Don't use shorthands in CSS","children":[{"id":"614adbbd-4354-4620-b081-5c76f67c2bfd","format":"markdown","children":[],"title":[["Plain","In "],["Link",{"url":["Page_ref","CSS"],"label":[["Plain",""]],"full_text":"[[CSS]]","metadata":""}],["Plain"," we have shorthands which makes it easier to write certain properties, for example "],["Code","background"],["Plain"," or "],["Code","margin"],["Plain",". However, these affect more properties than what you're probably aiming for."]],"body":[],"content":"In [[CSS]] we have shorthands which makes it easier to write certain properties, for example `background` or `margin`. However, these affect more properties than what you're probably aiming for."},{"id":"614adbbd-dddd-4788-a46d-9af0e9d3bbe0","format":"markdown","children":[],"title":[["Plain","Instead use specific properties such as "],["Code","background-color"],["Plain"," or "],["Code","margin-left"]],"body":[],"content":"Instead use specific properties such as `background-color` or ``margin-left``"},{"id":"614adbbd-3ee1-40d9-afc7-abc8d645b15d","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["/*","\n"," Here's an example where we want to change the background color to red.","\n","*/","\n",".test {","\n","  background: red;","\n","}","\n"," ","\n","/*","\n"," By using background we implicitly set all other values to initial","\n"," when we only wanted to change the background color","\n","*/","\n",".test {","\n","  background-image: initial;","\n","  background-position-x: initial;","\n","  background-position-y: initial;","\n","  background-size: initial;","\n","  background-repeat-x: initial;","\n","  background-repeat-y: initial;","\n","  background-attachment: initial;","\n","  background-origin: initial;","\n","  background-clip: initial;","\n","  background-color: red;","\n","}","\n"],"language":"css","pos_meta":{"start_pos":288,"end_pos":886},"full_content":"```css\n/*\n Here's an example where we want to change the background color to red.\n*/\n.test {\n  background: red;\n}\n \n/*\n By using background we implicitly set all other values to initial\n when we only wanted to change the background color\n*/\n.test {\n  background-image: initial;\n  background-position-x: initial;\n  background-position-y: initial;\n  background-size: initial;\n  background-repeat-x: initial;\n  background-repeat-y: initial;\n  background-attachment: initial;\n  background-origin: initial;\n  background-clip: initial;\n  background-color: red;\n}\n```"}]],"content":"  ```css\n/*\n Here's an example where we want to change the background color to red.\n*/\n.test {\n  background: red;\n}\n \n/*\n By using background we implicitly set all other values to initial\n when we only wanted to change the background color\n*/\n.test {\n  background-image: initial;\n  background-position-x: initial;\n  background-position-y: initial;\n  background-size: initial;\n  background-repeat-x: initial;\n  background-repeat-y: initial;\n  background-attachment: initial;\n  background-origin: initial;\n  background-clip: initial;\n  background-color: red;\n}\n```"},{"id":"614adbbd-c6fc-4bd3-9454-31b31a0cdaa3","format":"markdown","children":[],"title":[],"body":[["Horizontal_Rule"]],"content":"  ---"},{"id":"614adbbd-c69d-46ec-b82f-4a47dcbcd61b","format":"markdown","children":[],"title":[["Plain","CSS Wizardry. ("],["Link",{"url":["Page_ref","2016-12-12"],"label":[["Plain",""]],"full_text":"[[2016-12-12]]","metadata":""}],["Plain","). "],["Emphasis",[["Italic"],[["Plain","\"CSS Shorthand Syntax Considered an Anti-Pattern\""]]]],["Plain",". "],["Link",{"url":["Complex",{"protocol":"https","link":"csswizardry.com/2016/12/css-shorthand-syntax-considered-an-anti-pattern/"}],"label":[["Plain","https://csswizardry.com/2016/12/css-shorthand-syntax-considered-an-anti-pattern/"]],"full_text":"https://csswizardry.com/2016/12/css-shorthand-syntax-considered-an-anti-pattern/","metadata":""}]],"body":[],"content":"CSS Wizardry. ([[2016-12-12]]). _\"CSS Shorthand Syntax Considered an Anti-Pattern\"_. https://csswizardry.com/2016/12/css-shorthand-syntax-considered-an-anti-pattern/"},{"id":"614adbbd-6409-45f7-bfa5-f28dbc83cb60","format":"markdown","children":[],"title":[["Tag",[["Plain","CSS"]]],["Plain",", "],["Tag",[["Plain","Development"]]]],"body":[],"content":"#CSS, #Development"},{"id":"614adbbd-49bc-4e2e-9b7b-f1e006c6a510","format":"markdown","children":[],"title":[["Emphasis",[["Bold"],[["Plain","ID:"]]]],["Plain"," 210427103751"]],"body":[],"content":"**ID:** 210427103751"}]},{"id":"614adbbe-c7b8-4977-826a-41c8759c5e99","page-name":"2021-06-18","children":[{"id":"614adbbd-f6b2-430c-94da-8b69a5cd04c8","format":"markdown","children":[{"id":"614adbbd-97c1-4d77-a4ba-4f5e0a268927","format":"markdown","children":[],"title":[["Plain","I'm using "],["Link",{"url":["Page_ref","NERDTree"],"label":[["Plain",""]],"full_text":"[[NERDTree]]","metadata":""}],["Plain"," as my file explorer and the setting to display the sidebar to the right is"]],"body":[],"content":"I'm using [[NERDTree]] as my file explorer and the setting to display the sidebar to the right is"},{"id":"614adbbd-3da2-4d5c-b1bd-e49365d961b6","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["let g:NERDTreeWinPos = \"right\"","\n"],"language":"vim","pos_meta":{"start_pos":689,"end_pos":726},"full_content":"```vim\nlet g:NERDTreeWinPos = \"right\"\n```"}]],"content":"\t  ```vim\nlet g:NERDTreeWinPos = \"right\"\n```"}],"title":[["Plain","I haven't thought about using my sidebar/file explorer to the right in "],["Link",{"url":["Page_ref","Neovim"],"label":[["Plain",""]],"full_text":"[[Neovim]]","metadata":""}],["Plain"," (or in any other "],["Link",{"url":["Page_ref","IDE"],"label":[["Plain",""]],"full_text":"[[IDE]]","metadata":""}],["Plain"," I've ever used for that matter). After reading through the answers in this "],["Link",{"url":["Complex",{"protocol":"https","link":"twitter.com/code/status/1346573944703348743"}],"label":[["Plain","Twitter question"]],"full_text":"[Twitter question](https://twitter.com/code/status/1346573944703348743)","metadata":""}],["Plain"," I found it interesting that with the sidebar to the right, the code won't shift when toggling it. I think a lot of people keep the file explorer open while developing and don't experience this, but I always close it when I don't use it. I'm going to try using the sidebar to the right for a while and see if it sticks."]],"body":[],"content":"I haven't thought about using my sidebar/file explorer to the right in [[Neovim]] (or in any other [[IDE]] I've ever used for that matter). After reading through the answers in this [Twitter question](https://twitter.com/code/status/1346573944703348743) I found it interesting that with the sidebar to the right, the code won't shift when toggling it. I think a lot of people keep the file explorer open while developing and don't experience this, but I always close it when I don't use it. I'm going to try using the sidebar to the right for a while and see if it sticks."}]},{"id":"6157488c-539d-4411-8aa8-d4bf2f1eec20","page-name":"Share shortcuts and plugins when teaching new developers","properties":{"tags":["Development","Teaching"],"pid":211001194321},"children":[{"id":"615748ad-98b0-454a-804b-b373fb2694e0","properties":{"tags":["Development","Teaching"],"pid":211001194321},"format":"markdown","children":[],"content":"tags:: Development, Teaching\npid:: 211001194321"},{"id":"615748ba-1763-4f48-8600-98ae1d338dd3","properties":{},"format":"markdown","children":[],"title":[["Plain","When teaching a new developer, share with them what keyboard shortcuts/commands you use and if you're using any specific plugins that can help with the task. These things are easy to forget the more advanced your own knowledge gets, but can have a great impact to new developers."]],"body":[],"content":"When teaching a new developer, share with them what keyboard shortcuts/commands you use and if you're using any specific plugins that can help with the task. These things are easy to forget the more advanced your own knowledge gets, but can have a great impact to new developers."},{"id":"615749b6-fc24-49dc-89d4-f519db9b8ac5","properties":{},"format":"markdown","children":[],"title":[["Plain","This is closely related to "],["Link",{"url":["Page_ref","Describe what you're doing before doing it"],"label":[["Plain",""]],"full_text":"[[Describe what you're doing before doing it]]","metadata":""}]],"body":[],"content":"This is closely related to [[Describe what you're doing before doing it]]"},{"id":"615748ab-5858-46e9-a982-a5eb95322ef5","properties":{},"format":"markdown","children":[],"title":[],"body":[["Horizontal_Rule"]],"content":"---"},{"id":"6157488e-089e-4be9-a170-e21514e13b6d","properties":{},"format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Emma Bostian"],"label":[["Plain",""]],"full_text":"[[Emma Bostian]]","metadata":""}],["Plain",". ("],["Link",{"url":["Page_ref","2021-09-28"],"label":[["Plain",""]],"full_text":"[[2021-09-28]]","metadata":""}],["Plain","). "],["Emphasis",[["Italic"],[["Plain","Twitter"]]]],["Plain",". "],["Link",{"url":["Complex",{"protocol":"https","link":"twitter.com/EmmaBostian/status/1442830478176923649"}],"label":[["Plain","Link"]],"full_text":"[Link](https://twitter.com/EmmaBostian/status/1442830478176923649)","metadata":""}]],"body":[],"content":"[[Emma Bostian]]. ([[2021-09-28]]). _Twitter_. [Link](https://twitter.com/EmmaBostian/status/1442830478176923649)"}]},{"id":"614adbbe-e59d-4133-90c4-7486d1215b3b","page-name":"Write great alt texts for images","children":[{"id":"614adbbe-1a88-4993-a8b4-457377b7fe91","format":"markdown","children":[{"id":"614adbbe-a74e-434c-856c-4ebc23dd3b71","format":"markdown","children":[],"title":[["Plain","Alt-texts aren't only beneficial for screen readers. The text is also displayed when an image isn't able to load. This might happen due to an error or if the user has turned off image loading."]],"body":[],"content":"Alt-texts aren't only beneficial for screen readers. The text is also displayed when an image isn't able to load. This might happen due to an error or if the user has turned off image loading."},{"id":"614adbbe-2b88-4e86-87b4-d6921d9fb970","format":"markdown","children":[],"title":[["Plain","If done well, good alt-texts might also improve your "],["Link",{"url":["Page_ref","SEO"],"label":[["Plain",""]],"full_text":"[[SEO]]","metadata":""}],["Plain"," score."]],"body":[],"content":"If done well, good alt-texts might also improve your [[SEO]] score."}],"title":[["Plain","A "],["Link",{"url":["Complex",{"protocol":"https","link":"webaim.org/projects/million/"}],"label":[["Plain","study by WebAIM"]],"full_text":"[study by WebAIM](https://webaim.org/projects/million/)","metadata":""}],["Plain"," from 2019 found that missing alt-texts is the second most common failure of "],["Link",{"url":["Page_ref","Accessibility"],"label":[["Plain",""]],"full_text":"[[Accessibility]]","metadata":""}],["Plain"," on the web. If you don't provide an alt-text the screen reader would say \"Image\" or on some devices it might read the filename."]],"body":[],"content":"A [study by WebAIM](https://webaim.org/projects/million/) from 2019 found that missing alt-texts is the second most common failure of [[Accessibility]] on the web. If you don't provide an alt-text the screen reader would say \"Image\" or on some devices it might read the filename."},{"id":"614adbbe-22d1-46f1-8ad9-dd5c7f3632e7","format":"markdown","children":[{"id":"614adbbe-6353-4671-a975-87e243f59199","format":"markdown","children":[],"title":[["Emphasis",[["Bold"],[["Plain","Imagine that you're describing the image to a person over the phone"]]]]],"body":[],"content":"**Imagine that you're describing the image to a person over the phone**"},{"id":"614adbbe-3d97-46fc-b00a-af0bce61f3b0","format":"markdown","children":[],"title":[["Emphasis",[["Bold"],[["Plain","The recommendation is 125 characters and one sentence or two should be enough."]]]]],"body":[],"content":"**The recommendation is 125 characters and one sentence or two should be enough.**"},{"id":"614adbbe-83d2-47a8-94e8-2b0e845c2898","format":"markdown","children":[],"title":[["Plain","Think about context related to the topic you want to describe. e.g. "],["Code","alt=\"Business school professor pointing to a student's computer screen\""],["Plain"," instead of "],["Code","alt=\"Woman pointing to a person's computer screen\""]],"body":[],"content":"Think about context related to the topic you want to describe. e.g. `alt=\"Business school professor pointing to a student's computer screen\"` instead of `alt=\"Woman pointing to a person's computer screen\"`"}],"title":[["Plain","Be specific and concise. Think about what's relevant in the picture, for instance if it's important to convey what color something is or if the image contains a specific person. "],["Link",{"url":["Page_ref","Explain in plain words"],"label":[["Plain",""]],"full_text":"[[Explain in plain words]]","metadata":""}],["Plain","."]],"body":[],"content":"Be specific and concise. Think about what's relevant in the picture, for instance if it's important to convey what color something is or if the image contains a specific person. [[Explain in plain words]]."},{"id":"614adbbe-a68e-4b25-8782-21049ca93b27","format":"markdown","children":[],"title":[["Plain","Use an empty value, "],["Code","alt=\"\""],["Plain",", if an image is decorative or does not contain any valuable information."]],"body":[],"content":"Use an empty value, `alt=\"\"`, if an image is decorative or does not contain any valuable information."},{"id":"614adbbe-011d-429a-b28c-8cfb2bc135a1","format":"markdown","children":[],"title":[["Plain","Don't add \"A photo of...\" or \"An image of...\"."]],"body":[],"content":"Don't add \"A photo of...\" or \"An image of...\"."},{"id":"614adbbe-6741-417f-83e8-7601541af3dc","format":"markdown","children":[],"title":[["Plain","If an alt-text needs to be very long or is complex you might need to include the text somewhere else on the page. "],["Link",{"url":["Complex",{"protocol":"https","link":"accessibility.psu.edu/images/"}],"label":[["Plain","Here are some guidelines for complex images"]],"full_text":"[Here are some guidelines for complex images](https://accessibility.psu.edu/images/)","metadata":""}]],"body":[],"content":"If an alt-text needs to be very long or is complex you might need to include the text somewhere else on the page. [Here are some guidelines for complex images](https://accessibility.psu.edu/images/)"},{"id":"614adbbe-9361-4407-9c1f-7ba80a219103","format":"markdown","children":[],"title":[],"body":[["Horizontal_Rule"]],"content":"  ---"},{"id":"614adbbe-092e-4cf7-a9db-87300ce9b18b","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","The Big Hack"],"label":[["Plain",""]],"full_text":"[[The Big Hack]]","metadata":""}],["Plain",". ("],["Link",{"url":["Page_ref","2019-10-07"],"label":[["Plain",""]],"full_text":"[[2019-10-07]]","metadata":""}],["Plain","). "],["Emphasis",[["Italic"],[["Plain","How to write better alt-text descriptions for accessibility"]]]],["Plain",". "],["Link",{"url":["Complex",{"protocol":"https","link":"bighack.org/how-to-write-better-alt-text-descriptions-for-accessibility/"}],"label":[["Plain","https://bighack.org/how-to-write-better-alt-text-descriptions-for-accessibility/"]],"full_text":"https://bighack.org/how-to-write-better-alt-text-descriptions-for-accessibility/","metadata":""}]],"body":[],"content":"[[The Big Hack]]. ([[2019-10-07]]). _How to write better alt-text descriptions for accessibility_. https://bighack.org/how-to-write-better-alt-text-descriptions-for-accessibility/"},{"id":"614adbbe-3575-4ef6-b66b-4b7f02c0c9ac","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Braden Becker"],"label":[["Plain",""]],"full_text":"[[Braden Becker]]","metadata":""}],["Plain",". ("],["Link",{"url":["Page_ref","2021-07-12"],"label":[["Plain",""]],"full_text":"[[2021-07-12]]","metadata":""}],["Plain","). "],["Emphasis",[["Italic"],[["Plain","Image Alt Text: What It Is, How to Write It, and Why It Matters to SEO"]]]],["Plain"," "],["Link",{"url":["Complex",{"protocol":"https","link":"blog.hubspot.com/marketing/image-alt-text"}],"label":[["Plain","https://blog.hubspot.com/marketing/image-alt-text"]],"full_text":"https://blog.hubspot.com/marketing/image-alt-text","metadata":""}]],"body":[],"content":"[[Braden Becker]]. ([[2021-07-12]]). _Image Alt Text: What It Is, How to Write It, and Why It Matters to SEO_ https://blog.hubspot.com/marketing/image-alt-text"},{"id":"614adbbe-9118-43c6-a6c5-6aaac039ed24","format":"markdown","children":[],"title":[["Tag",[["Plain","Accessibility"]]],["Plain",", "],["Tag",[["Plain","Development"]]]],"body":[],"content":"#Accessibility, #Development"},{"id":"614adbbe-8eaa-4bf0-8471-ef5b7814c416","format":"markdown","children":[],"title":[["Emphasis",[["Bold"],[["Plain","ID:"]]]],["Plain"," 210803224234"]],"body":[],"content":"**ID:** 210803224234"}]},{"id":"614adbbe-3c81-43ca-ac13-b4aba01d5f53","page-name":"Record utility","properties":{"public":true},"children":[{"id":"614adbbd-8731-4450-89f0-1701228b2a71","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbd-62d0-4641-91b9-aef71dfe5961","format":"markdown","children":[],"title":[["Link",{"url":["Complex",{"protocol":"https","link":"www.typescriptlang.org/docs/handbook/utility-types.html#recordkeystype"}],"label":[["Plain","Documentation"]],"full_text":"[Documentation](https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeystype)","metadata":""}]],"body":[],"content":"[Documentation](https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeystype)"},{"id":"614adbbd-93b9-4f39-a4cd-92af61728b6b","format":"markdown","children":[],"title":[["Plain","The "],["Emphasis",[["Bold"],[["Plain","Record"]]]],["Plain"," utility is available from "],["Link",{"url":["Page_ref","TypeScript"],"label":[["Plain",""]],"full_text":"[[TypeScript]]","metadata":""}],["Plain"," "],["Code","v2.1"],["Plain",". "],["Link",{"url":["Complex",{"protocol":"https","link":"www.typescriptlang.org/docs/handbook/release-notes/typescript-2-1.html#partial-readonly-record-and-pick"}],"label":[["Plain","Release notes"]],"full_text":"[Release notes](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-1.html#partial-readonly-record-and-pick)","metadata":""}]],"body":[],"content":"The **Record** utility is available from [[TypeScript]] `v2.1`. [Release notes](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-1.html#partial-readonly-record-and-pick)"}]},{"id":"614adbbe-b708-4a83-b2b1-82540dbd2bc7","page-name":"SSR","children":[{"id":"614adbbd-e921-42ec-9107-237c49d14778","format":"markdown","children":[],"title":[["Plain","Server-side rendering"]],"body":[],"content":"Server-side rendering"}]},{"id":"614adbbe-dbf4-49ab-9d7c-8e91fe3a30f9","page-name":"Derek Prior","properties":{"public":true},"children":[{"id":"614adbbe-c5bb-482c-aff4-d808995d71d7","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-e2b3-4545-92ee-41c367825dac","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-9c6f-42eb-aa50-43f66103423a","page-name":"Adding types to a React component in TypeScript","children":[{"id":"614adbbe-b2da-4a9b-b502-d56a349f0e2c","format":"markdown","children":[{"id":"614adbbe-6a6b-4eb6-b1c6-09710371efc0","format":"markdown","children":[],"title":[["Plain","The component will accept "],["Code","children"],["Plain"," even if we're not using it. This happens because "],["Code","React.FC"],["Plain"," implicitly sets the "],["Code","children"],["Plain"," and some other values."]],"body":[],"content":"The component will accept `children` even if we're not using it. This happens because `React.FC` implicitly sets the `children` and some other values."},{"id":"614adbbe-5d0d-48c2-bcef-20f17f848ec0","format":"markdown","children":[],"title":[["Plain","We can't use generics"]],"body":[],"content":"We can't use generics"},{"id":"614adbbe-4371-4e23-aa88-e9459bc085e2","format":"markdown","children":[],"title":[["Plain","We can't use function declarations"]],"body":[],"content":"We can't use function declarations"}],"title":[["Plain","In the types for "],["Link",{"url":["Page_ref","React"],"label":[["Plain",""]],"full_text":"[[React]]","metadata":""}],["Plain",", "],["Code","@types/react"],["Plain",", there's an included helper for typing components called "],["Code","React.FC"],["Plain"," (or the longer version "],["Code","React.FunctionComponent"],["Plain","). However, there are some downsides to using this."]],"body":[],"content":"In the types for [[React]], `@types/react`, there's an included helper for typing components called `React.FC` (or the longer version `React.FunctionComponent`). However, there are some downsides to using this."},{"id":"614adbbe-bb10-4607-b23e-66c0c722d5d7","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["import React from 'react'","\n","  ","\n","interface AppProps {","\n","  text: string","\n","}","\n","  ","\n","// Using React.FC","\n","const App: React.FC<AppProps> = ({ text }) => {","\n","  return <div>{text}</div>","\n","}","\n","  ","\n","// This would compile","\n","<App text=\"Testing\">I'm content that's not used</App>","\n"],"language":"tsx","pos_meta":{"start_pos":441,"end_pos":707},"full_content":"```tsx\nimport React from 'react'\n\ninterface AppProps {\n  text: string\n}\n\n// Using React.FC\nconst App: React.FC<AppProps> = ({ text }) => {\n  return <div>{text}</div>\n}\n\n// This would compile\n<App text=\"Testing\">I'm content that's not used</App>\n```"}]],"content":"  ```tsx\nimport React from 'react'\n\ninterface AppProps {\n  text: string\n}\n\n// Using React.FC\nconst App: React.FC<AppProps> = ({ text }) => {\n  return <div>{text}</div>\n}\n\n// This would compile\n<App text=\"Testing\">I'm content that's not used</App>\n```"},{"id":"614adbbe-431d-4e39-a841-c3bbc90fef7b","format":"markdown","children":[],"title":[["Plain","Since React is nothing special you can use the regular syntax for defining variables to a function. This solves all of over pain points listed above."]],"body":[],"content":"Since React is nothing special you can use the regular syntax for defining variables to a function. This solves all of over pain points listed above."},{"id":"614adbbe-988b-4640-a6e6-f6b1f0bd803b","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["// Same import and interface","\n","  ","\n","// Using regular function typings","\n","const App = ({ text }: AppProps) => {","\n","  return <div>{text}</div>","\n","}","\n","  ","\n","// This would NOT compile","\n","<App text=\"Testing\">I'm content that's not used</App>","\n","  ","\n","// This would compile","\n","<App text=\"Testing\" />","\n"],"language":"tsx","pos_meta":{"start_pos":874,"end_pos":1158},"full_content":"```tsx\n// Same import and interface\n\n// Using regular function typings\nconst App = ({ text }: AppProps) => {\n  return <div>{text}</div>\n}\n\n// This would NOT compile\n<App text=\"Testing\">I'm content that's not used</App>\n\n// This would compile\n<App text=\"Testing\" />\n```"}]],"content":"  ```tsx\n// Same import and interface\n\n// Using regular function typings\nconst App = ({ text }: AppProps) => {\n  return <div>{text}</div>\n}\n\n// This would NOT compile\n<App text=\"Testing\">I'm content that's not used</App>\n\n// This would compile\n<App text=\"Testing\" />\n```"},{"id":"614adbbe-c099-4f26-b25a-d3586bc588ca","format":"markdown","children":[],"title":[["Plain","There are multiple types we could use for the component's return type: "],["Code","React.ReactElement"],["Plain",", "],["Code","JSX.Element"],["Plain",", "],["Code","React.ReactNode"],["Plain",". To not be too wide or too narrow with the typings, it's better to just rely on "],["Link",{"url":["Page_ref","TypeScript"],"label":[["Plain",""]],"full_text":"[[TypeScript]]","metadata":""}],["Plain","'s inference by not adding an explicit type."]],"body":[],"content":"There are multiple types we could use for the component's return type: `React.ReactElement`, `JSX.Element`, `React.ReactNode`. To not be too wide or too narrow with the typings, it's better to just rely on [[TypeScript]]'s inference by not adding an explicit type."},{"id":"614adbbe-707c-476e-81a8-d5dfa9835089","format":"markdown","children":[],"title":[],"body":[["Horizontal_Rule"]],"content":"  ---"},{"id":"614adbbe-d4a8-439b-b9c8-96dcf86588af","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Kent C. Dodds"],"label":[["Plain",""]],"full_text":"[[Kent C. Dodds]]","metadata":""}],["Plain",". ("],["Link",{"url":["Page_ref","2021-03-04"],"label":[["Plain",""]],"full_text":"[[2021-03-04]]","metadata":""}],["Plain","). "],["Emphasis",[["Italic"],[["Plain","How to write a React Component in TypeScript"]]]],["Plain",". "],["Link",{"url":["Complex",{"protocol":"https","link":"kentcdodds.com/blog/how-to-write-a-react-component-in-typescript"}],"label":[["Plain","https://kentcdodds.com/blog/how-to-write-a-react-component-in-typescript"]],"full_text":"https://kentcdodds.com/blog/how-to-write-a-react-component-in-typescript","metadata":""}]],"body":[],"content":"[[Kent C. Dodds]]. ([[2021-03-04]]). _How to write a React Component in TypeScript_. https://kentcdodds.com/blog/how-to-write-a-react-component-in-typescript"},{"id":"614adbbe-eb20-4c9e-aaf6-4d9ecbc04f7b","format":"markdown","children":[],"title":[["Tag",[["Plain","TypeScript"]]]],"body":[],"content":"#TypeScript"},{"id":"614adbbe-45dc-4062-9c94-bb038039fcbe","format":"markdown","children":[],"title":[["Emphasis",[["Bold"],[["Plain","ID:"]]]],["Plain"," 210614085847"]],"body":[],"content":"**ID:** 210614085847"}]},{"id":"614adbbe-9312-4482-a8f0-5818cadd43e1","page-name":"Frontend testing workshop","children":[{"id":"614adbbe-7d72-42f6-bbcb-abc824769d6a","format":"markdown","children":[],"title":[["Plain","This is a workshop in "],["Link",{"url":["Page_ref","Frontend"],"label":[["Plain",""]],"full_text":"[[Frontend]]","metadata":""}],["Plain"," "],["Link",{"url":["Page_ref","Testing"],"label":[["Plain",""]],"full_text":"[[Testing]]","metadata":""}],["Plain"," that I held at "],["Link",{"url":["Page_ref","Hemnet"],"label":[["Plain",""]],"full_text":"[[Hemnet]]","metadata":""}],["Plain",". The idea was to have it sort of like a "],["Link",{"url":["Page_ref","Mob programming"],"label":[["Plain",""]],"full_text":"[[Mob programming]]","metadata":""}],["Plain"," session so that each participant got to code and get a feel for the code instead of just sitting and listening to me talk about it."]],"body":[],"content":"This is a workshop in [[Frontend]] [[Testing]] that I held at [[Hemnet]]. The idea was to have it sort of like a [[Mob programming]] session so that each participant got to code and get a feel for the code instead of just sitting and listening to me talk about it."},{"id":"614adbbe-6cc9-4dc2-a282-4c334d7959dd","format":"markdown","children":[],"title":[["Plain","The focus of the workshop was for the participants to get better knowledge in testing some of the more uncommon/advanced testing paths."]],"body":[],"content":"The focus of the workshop was for the participants to get better knowledge in testing some of the more uncommon/advanced testing paths."},{"id":"614adbbe-d674-462f-a8c1-de8f1137b6de","format":"markdown","children":[],"title":[["Plain","The code is available at "],["Link",{"url":["Complex",{"protocol":"https","link":"github.com/believer/frontend-testing-workshop"}],"label":[["Plain","believer/frontend-testing-workshop"]],"full_text":"[believer/frontend-testing-workshop](https://github.com/believer/frontend-testing-workshop)","metadata":""}],["Plain"," and split into three branches: "],["Code","1-context"],["Plain",", "],["Code","2-async"],["Plain"," and "],["Code","3-hooks"],["Plain",". Each branch also has a sibling with the completed state for that scenario. The completed branch names are the same but with "],["Code","-complete"],["Plain"," added at the end, e.g. "],["Code","1-context-complete"],["Plain","."]],"body":[],"content":"The code is available at [believer/frontend-testing-workshop](https://github.com/believer/frontend-testing-workshop) and split into three branches: `1-context`, `2-async` and `3-hooks`. Each branch also has a sibling with the completed state for that scenario. The completed branch names are the same but with `-complete` added at the end, e.g. `1-context-complete`."},{"id":"614adbbe-c8aa-473b-9b22-500bf5b4155e","format":"markdown","children":[],"title":[["Plain","We're using "],["Link",{"url":["Page_ref","React"],"label":[["Plain",""]],"full_text":"[[React]]","metadata":""}],["Plain",", "],["Link",{"url":["Page_ref","Jest"],"label":[["Plain",""]],"full_text":"[[Jest]]","metadata":""}],["Plain",", "],["Link",{"url":["Page_ref","Testing Library"],"label":[["Plain",""]],"full_text":"[[Testing Library]]","metadata":""}],["Plain",", and "],["Link",{"url":["Page_ref","React Query"],"label":[["Plain",""]],"full_text":"[[React Query]]","metadata":""}],["Plain","."]],"body":[],"content":"We're using [[React]], [[Jest]], [[Testing Library]], and [[React Query]]."},{"id":"614adbbe-a40c-4fd9-83a3-67dd0df9441a","heading-level":3,"format":"markdown","children":[{"id":"614adbbe-a5dc-45df-a85a-d077e14a24cc","format":"markdown","children":[],"title":[["Link",{"url":["Search","#Context"],"label":[["Plain","Context"]],"full_text":"[Context](#Context)","metadata":""}]],"body":[],"content":"[Context](#Context)"},{"id":"614adbbe-3318-4277-b97b-eb4a6c787df7","format":"markdown","children":[],"title":[["Link",{"url":["Search","#Async"],"label":[["Plain","Async"]],"full_text":"[Async](#Async)","metadata":""}]],"body":[],"content":"[Async](#Async)"},{"id":"614adbbe-5261-49aa-915b-2cc42497b864","format":"markdown","children":[],"title":[["Link",{"url":["Search","#Custom-hooks"],"label":[["Plain","Custom hooks"]],"full_text":"[Custom hooks](#Custom-hooks)","metadata":""}]],"body":[],"content":"[Custom hooks](#Custom-hooks)"}],"title":[["Plain","Sections"]],"body":[],"content":"### Sections"},{"id":"614adbbe-e1d1-43b1-8aaa-4b8f70b1acda","heading-level":3,"format":"markdown","children":[{"id":"614adbbe-0290-4edc-8635-a6338062f0e8","format":"markdown","children":[],"title":[["Plain","We'll start off by testing "],["Link",{"url":["Page_ref","React"],"label":[["Plain",""]],"full_text":"[[React]]","metadata":""}],["Plain","'s context. The full starting code is available in the "],["Link",{"url":["Complex",{"protocol":"https","link":"github.com/believer/frontend-testing-workshop"}],"label":[["Plain","testing repo"]],"full_text":"[testing repo](https://github.com/believer/frontend-testing-workshop)","metadata":""}],["Plain",". The relevant code are these three files where we have set up a tiny application with a "],["Code","<Text>"],["Plain"," component that gets a text from the context and displays it to the user."]],"body":[],"content":"We'll start off by testing [[React]]'s context. The full starting code is available in the [testing repo](https://github.com/believer/frontend-testing-workshop). The relevant code are these three files where we have set up a tiny application with a `<Text>` component that gets a text from the context and displays it to the user."},{"id":"614adbbe-46f4-4156-8bc5-042d6c6e656e","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["// AppContext.js","\n","import React from 'react'","\n","\t  ","\n","// Create a React context and set the default text value to an empty string","\n","export const AppContext = React.createContext({","\n","  text: '',","\n","})","\n","\t  ","\n","// Create a custom hook to make it easier to access the context","\n","export const useApp = () => React.useContext(AppContext)","\n"],"language":"js","pos_meta":{"start_pos":1297,"end_pos":1641},"full_content":"```js\n// AppContext.js\nimport React from 'react'\n\t  \n// Create a React context and set the default text value to an empty string\nexport const AppContext = React.createContext({\n  text: '',\n})\n\t  \n// Create a custom hook to make it easier to access the context\nexport const useApp = () => React.useContext(AppContext)\n```"}]],"content":"\t  ```js\n// AppContext.js\nimport React from 'react'\n\t  \n// Create a React context and set the default text value to an empty string\nexport const AppContext = React.createContext({\n  text: '',\n})\n\t  \n// Create a custom hook to make it easier to access the context\nexport const useApp = () => React.useContext(AppContext)\n```"},{"id":"614adbbe-7582-4f2d-8002-bb05be4d7545","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["// App.js","\n","import { AppContext, useApp } from './AppContext'","\n","\t  ","\n","export const Text = () => {","\n","  const { text } = useApp()","\n","\t  ","\n","  return <div>{text}</div>","\n","}","\n","\t  ","\n","export default function App({ text }) {","\n","  return (","\n","    <AppContext.Provider value={{ text }}>","\n","      <Text />","\n","    </AppContext.Provider>","\n","  )","\n","}","\n"],"language":"js","pos_meta":{"start_pos":1657,"end_pos":1998},"full_content":"```js\n// App.js\nimport { AppContext, useApp } from './AppContext'\n\nexport const Text = () => {\n  const { text } = useApp()\n\n  return <div>{text}</div>\n}\n\nexport default function App({ text }) {\n  return (\n    <AppContext.Provider value={{ text }}>\n      <Text />\n    </AppContext.Provider>\n  )\n}\n```"}]],"content":"\t  ```js\n// App.js\nimport { AppContext, useApp } from './AppContext'\n\nexport const Text = () => {\n  const { text } = useApp()\n\n  return <div>{text}</div>\n}\n\nexport default function App({ text }) {\n  return (\n    <AppContext.Provider value={{ text }}>\n      <Text />\n    </AppContext.Provider>\n  )\n}\n```"},{"id":"614adbbe-8b59-4e3d-bbe8-f2f3609bcef2","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["// App.test.js","\n","import App, { Text } from './App'","\n","import { screen, render } from '@testing-library/react'","\n","\t  ","\n","// All the tests we'll create prepared as TODOs","\n","test.todo('renders app')","\n","test.todo('Text using a mocked useApp hook')","\n","test.todo('Text by importing the context')","\n"],"language":"js","pos_meta":{"start_pos":2014,"end_pos":2311},"full_content":"```js\n// App.test.js\nimport App, { Text } from './App'\nimport { screen, render } from '@testing-library/react'\n\t  \n// All the tests we'll create prepared as TODOs\ntest.todo('renders app')\ntest.todo('Text using a mocked useApp hook')\ntest.todo('Text by importing the context')\n```"}]],"content":"\t  ```js\n// App.test.js\nimport App, { Text } from './App'\nimport { screen, render } from '@testing-library/react'\n\t  \n// All the tests we'll create prepared as TODOs\ntest.todo('renders app')\ntest.todo('Text using a mocked useApp hook')\ntest.todo('Text by importing the context')\n```"},{"id":"614adbbe-1407-4236-9a23-82770c9ae231","format":"markdown","children":[],"title":[["Plain","Let's start with the first test, that the app renders correctly."]],"body":[],"content":"Let's start with the first test, that the app renders correctly."},{"id":"614adbbe-7323-495f-a7de-d13ff13fde4d","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["// App.test.js","\n","\t  ","\n","test('renders app', () => {","\n","  // Render the App component and pass a text prop","\n","  // The text prop is added to the context","\n","  render(<App text=\"Frontend testing is fun!\" />)","\n","\t  ","\n","  // Assert that the document contains a text with the value","\n","  // that we passed to the context. The toBeInTheDocument assertion comes","\n","  // from @testing-library/jest-dom","\n","  expect(screen.getByText(/frontend testing is fun/i)).toBeInTheDocument()","\n","})","\n"],"language":"js","pos_meta":{"start_pos":2395,"end_pos":2872},"full_content":"```js\n// App.test.js\n\ntest('renders app', () => {\n  // Render the App component and pass a text prop\n  // The text prop is added to the context\n  render(<App text=\"Frontend testing is fun!\" />)\n\n  // Assert that the document contains a text with the value\n  // that we passed to the context. The toBeInTheDocument assertion comes\n  // from @testing-library/jest-dom\n  expect(screen.getByText(/frontend testing is fun/i)).toBeInTheDocument()\n})\n```"}]],"content":"\t  ```js\n// App.test.js\n\ntest('renders app', () => {\n  // Render the App component and pass a text prop\n  // The text prop is added to the context\n  render(<App text=\"Frontend testing is fun!\" />)\n\n  // Assert that the document contains a text with the value\n  // that we passed to the context. The toBeInTheDocument assertion comes\n  // from @testing-library/jest-dom\n  expect(screen.getByText(/frontend testing is fun/i)).toBeInTheDocument()\n})\n```"},{"id":"614adbbe-4cbd-4eb8-bdc7-3da0b82a9f57","format":"markdown","children":[],"title":[["Plain","Next, we want to try render the "],["Code","<Text>"],["Plain"," component in isolation and here's where we'll start seeing some issues. If we just try to render the component, "],["Code","render(<Text />)"],["Plain",", and use the same assertion as above we'll get an error that the text can't be found. This happens because the "],["Code","<Text>"],["Plain"," component is no longer wrapped in a React context and it get's the default value for "],["Code","text"],["Plain"," which we defined in when creating the context using "],["Code","React.createContext"],["Plain","."]],"body":[],"content":"Next, we want to try render the `<Text>` component in isolation and here's where we'll start seeing some issues. If we just try to render the component, `render(<Text />)`, and use the same assertion as above we'll get an error that the text can't be found. This happens because the `<Text>` component is no longer wrapped in a React context and it get's the default value for `text` which we defined in when creating the context using `React.createContext`."},{"id":"614adbbe-6460-492c-bce7-c676d3715409","format":"markdown","children":[],"title":[["Plain","To get around this we'll need some way of getting the data to the component. Our first attempt will be to mock the response of the custom hook, "],["Code","useApp"],["Plain",", that we've defined for our context."]],"body":[],"content":"To get around this we'll need some way of getting the data to the component. Our first attempt will be to mock the response of the custom hook, `useApp`, that we've defined for our context."},{"id":"614adbbe-2ee4-4de5-ac07-538c17645dc5","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["// App.test.js","\n","// This import will be a mocked version as defined by jest.mock below","\n","import { useApp } from './AppContext'","\n","\t\t  \t\t  ","\n","// This is a mock that automatically determines what the file contains","\n","// and provides mocked functions for each exported value","\n","jest.mock('./AppContext')","\n","\t  ","\n","// Mock the response of the useApp hook before each test runs","\n","beforeEach(() => {","\n","  useApp.mockReturnValue({","\n","    text: 'Frontend testing is fun!',","\n","  })","\n","})","\n","\t\t  ","\n","test('Text using a mocked useApp hook', () => {","\n","  // Render the Text component","\n","  render(<Text />)","\n","\t\t  \t\t  ","\n","  // Since the useApp hook is now mocked, we'll get a passing text","\n","  expect(screen.getByText(/frontend testing is fun/i)).toBeInTheDocument()","\n","})","\n"],"language":"js","pos_meta":{"start_pos":3543,"end_pos":4310},"full_content":"```js\n// App.test.js\n// This import will be a mocked version as defined by jest.mock below\nimport { useApp } from './AppContext'\n\t\t  \t\t  \n// This is a mock that automatically determines what the file contains\n// and provides mocked functions for each exported value\njest.mock('./AppContext')\n\n// Mock the response of the useApp hook before each test runs\nbeforeEach(() => {\n  useApp.mockReturnValue({\n    text: 'Frontend testing is fun!',\n  })\n})\n\t\t  \ntest('Text using a mocked useApp hook', () => {\n  // Render the Text component\n  render(<Text />)\n\t\t  \t\t  \n  // Since the useApp hook is now mocked, we'll get a passing text\n  expect(screen.getByText(/frontend testing is fun/i)).toBeInTheDocument()\n})\n```"}]],"content":"\t  ```js\n// App.test.js\n// This import will be a mocked version as defined by jest.mock below\nimport { useApp } from './AppContext'\n\t\t  \t\t  \n// This is a mock that automatically determines what the file contains\n// and provides mocked functions for each exported value\njest.mock('./AppContext')\n\n// Mock the response of the useApp hook before each test runs\nbeforeEach(() => {\n  useApp.mockReturnValue({\n    text: 'Frontend testing is fun!',\n  })\n})\n\t\t  \ntest('Text using a mocked useApp hook', () => {\n  // Render the Text component\n  render(<Text />)\n\t\t  \t\t  \n  // Since the useApp hook is now mocked, we'll get a passing text\n  expect(screen.getByText(/frontend testing is fun/i)).toBeInTheDocument()\n})\n```"},{"id":"614adbbe-cdac-4277-859d-b035a78c3849","format":"markdown","children":[],"title":[["Plain","This works fine. However, if we were to remove the "],["Code","text"],["Plain"," prop from our first test and only use "],["Code","render(<App />)"],["Plain"," that test would still pass! That is because we've effectively mocked the entire context for all tests, which is not really want we want."]],"body":[],"content":"This works fine. However, if we were to remove the `text` prop from our first test and only use `render(<App />)` that test would still pass! That is because we've effectively mocked the entire context for all tests, which is not really want we want."},{"id":"614adbbe-5ba3-4548-a64e-0fcf1946b891","format":"markdown","children":[],"title":[["Plain","Let's try it another way. This time by adding the context inside our test."]],"body":[],"content":"Let's try it another way. This time by adding the context inside our test."},{"id":"614adbbe-d7c0-42c7-818a-289486530e55","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["// App.test.js","\n","// Import the AppContext, note that this is the real version and","\n","// not a mocked version","\n","import { AppContext } from './AppContext'","\n","\t  ","\n","test('Text by importing the context', () => {","\n","  // Wrap our Text component in the AppContext.Provider and","\n","  // provide it with the value we want displayed in the Text component","\n","  render(","\n","    <AppContext.Provider value={{ text: 'Frontend testing is fun' }}>","\n","      <Text />","\n","    </AppContext.Provider>","\n","  )","\n","\t  ","\n","  expect(screen.getByText(/frontend testing is fun/i)).toBeInTheDocument()","\n","})","\n"],"language":"js","pos_meta":{"start_pos":4658,"end_pos":5238},"full_content":"```js\n// App.test.js\n// Import the AppContext, note that this is the real version and\n// not a mocked version\nimport { AppContext } from './AppContext'\n\ntest('Text by importing the context', () => {\n  // Wrap our Text component in the AppContext.Provider and\n  // provide it with the value we want displayed in the Text component\n  render(\n    <AppContext.Provider value={{ text: 'Frontend testing is fun' }}>\n      <Text />\n    </AppContext.Provider>\n  )\n\n  expect(screen.getByText(/frontend testing is fun/i)).toBeInTheDocument()\n})\n```"}]],"content":"\t  ```js\n// App.test.js\n// Import the AppContext, note that this is the real version and\n// not a mocked version\nimport { AppContext } from './AppContext'\n\ntest('Text by importing the context', () => {\n  // Wrap our Text component in the AppContext.Provider and\n  // provide it with the value we want displayed in the Text component\n  render(\n    <AppContext.Provider value={{ text: 'Frontend testing is fun' }}>\n      <Text />\n    </AppContext.Provider>\n  )\n\n  expect(screen.getByText(/frontend testing is fun/i)).toBeInTheDocument()\n})\n```"},{"id":"614adbbe-a0f4-4afb-a851-cb19a730331d","format":"markdown","children":[],"title":[["Plain","Now this is much better. Now we're not messing with the first test and are instead asserting that the "],["Code","Text"],["Plain"," component works using the correct context. This is a trivial example, but for bigger contexts that are used across multiple files this would be a great solution for testing in isolation but still maintaining the integration testing aspect."]],"body":[],"content":"Now this is much better. Now we're not messing with the first test and are instead asserting that the `Text` component works using the correct context. This is a trivial example, but for bigger contexts that are used across multiple files this would be a great solution for testing in isolation but still maintaining the integration testing aspect."},{"id":"614adbbe-09dd-429c-99e0-45e0c74cbcec","format":"markdown","children":[],"title":[["Plain","The final code for our tests looks like this and it's available in the repo on the branch "],["Link",{"url":["Complex",{"protocol":"https","link":"github.com/believer/frontend-testing-workshop/tree/1-context-complete"}],"label":[["Code","1-context-complete"]],"full_text":"[`1-context-complete`](https://github.com/believer/frontend-testing-workshop/tree/1-context-complete)","metadata":""}]],"body":[],"content":"The final code for our tests looks like this and it's available in the repo on the branch [`1-context-complete`](https://github.com/believer/frontend-testing-workshop/tree/1-context-complete)"},{"id":"614adbbe-d638-4200-b01e-37827e9e9410","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["import App, { Text } from './App'","\n","import { screen, render } from '@testing-library/react'","\n","import { AppContext } from './AppContext'","\n","\t  ","\n","test('renders app', () => {","\n","  render(<App text=\"Frontend testing is fun!\" />)","\n","\t  ","\n","  expect(screen.getByText(/frontend testing is fun/i)).toBeInTheDocument()","\n","})","\n","\t  ","\n","test('Text by importing the context', () => {","\n","  render(","\n","    <AppContext.Provider value={{ text: 'Frontend testing is fun' }}>","\n","      <Text />","\n","    </AppContext.Provider>","\n","  )","\n","\t  ","\n","  expect(screen.getByText(/frontend testing is fun/i)).toBeInTheDocument()","\n","})","\n"],"language":"js","pos_meta":{"start_pos":5801,"end_pos":6403},"full_content":"```js\nimport App, { Text } from './App'\nimport { screen, render } from '@testing-library/react'\nimport { AppContext } from './AppContext'\n\ntest('renders app', () => {\n  render(<App text=\"Frontend testing is fun!\" />)\n\n  expect(screen.getByText(/frontend testing is fun/i)).toBeInTheDocument()\n})\n\ntest('Text by importing the context', () => {\n  render(\n    <AppContext.Provider value={{ text: 'Frontend testing is fun' }}>\n      <Text />\n    </AppContext.Provider>\n  )\n\n  expect(screen.getByText(/frontend testing is fun/i)).toBeInTheDocument()\n})\n```"}]],"content":"\t  ```js\nimport App, { Text } from './App'\nimport { screen, render } from '@testing-library/react'\nimport { AppContext } from './AppContext'\n\ntest('renders app', () => {\n  render(<App text=\"Frontend testing is fun!\" />)\n\n  expect(screen.getByText(/frontend testing is fun/i)).toBeInTheDocument()\n})\n\ntest('Text by importing the context', () => {\n  render(\n    <AppContext.Provider value={{ text: 'Frontend testing is fun' }}>\n      <Text />\n    </AppContext.Provider>\n  )\n\n  expect(screen.getByText(/frontend testing is fun/i)).toBeInTheDocument()\n})\n```"}],"title":[["Plain","Context"]],"body":[],"content":"### Context"},{"id":"614adbbe-ad57-4026-ad56-ab0770fc985d","heading-level":3,"format":"markdown","children":[{"id":"614adbbe-1122-42c1-8551-befdfddcd00c","format":"markdown","children":[],"title":[["Plain","For our second testing scenario we are going to test an asynchronous hook. For this we'll use "],["Code","react-query"],["Plain","'s "],["Code","useQuery"],["Plain"," hook and fetch a character from the Star Wars "],["Link",{"url":["Page_ref","API"],"label":[["Plain",""]],"full_text":"[[API]]","metadata":""}],["Plain",". The code is on the branch "],["Link",{"url":["Complex",{"protocol":"https","link":"github.com/believer/frontend-testing-workshop/tree/2-async"}],"label":[["Code","2-async"]],"full_text":"[`2-async`](https://github.com/believer/frontend-testing-workshop/tree/2-async)","metadata":""}],["Plain",". This is what we're starting out with"]],"body":[],"content":"For our second testing scenario we are going to test an asynchronous hook. For this we'll use `react-query`'s `useQuery` hook and fetch a character from the Star Wars [[API]]. The code is on the branch [`2-async`](https://github.com/believer/frontend-testing-workshop/tree/2-async). This is what we're starting out with"},{"id":"614adbbe-1abc-40e1-9d1d-c34640d283f3","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["// App.js","\n","import { useQuery, QueryClient, QueryClientProvider } from 'react-query'","\n","\t  ","\n","// Create a client for making queries","\n","const queryClient = new QueryClient()","\n","\t  ","\n","// Call the Star Wars API and return the JSON data","\n","// This can be any function, as long as it returns a promise","\n","const fetchLuke = async () => {","\n","  const response = await fetch('https://swapi.dev/api/people/1/')","\n","  return response.json()","\n","}","\n","\t  ","\n","const Luke = () => {","\n","  // Set up the useQuery hook with a unique key, 'luke', which is used","\n","  // for caching and pass our fetching function","\n","  const { isLoading, data } = useQuery('luke', fetchLuke)","\n","\t  ","\n","  // Loading state","\n","  if (isLoading) {","\n","    return <div>Loading...</div>","\n","  }","\n","\t  ","\n","  // Display the name of the character","\n","  return <div>{data.name}</div>","\n","}","\n","\t  ","\n","export default function App() {","\n","  return (","\n","    // Set up the provider with the client we created","\n","    <QueryClientProvider client={queryClient}>","\n","      <Luke />","\n","    </QueryClientProvider>","\n","  )","\n","}","\n"],"language":"js","pos_meta":{"start_pos":6752,"end_pos":7800},"full_content":"```js\n// App.js\nimport { useQuery, QueryClient, QueryClientProvider } from 'react-query'\n\n// Create a client for making queries\nconst queryClient = new QueryClient()\n\n// Call the Star Wars API and return the JSON data\n// This can be any function, as long as it returns a promise\nconst fetchLuke = async () => {\n  const response = await fetch('https://swapi.dev/api/people/1/')\n  return response.json()\n}\n\nconst Luke = () => {\n  // Set up the useQuery hook with a unique key, 'luke', which is used\n  // for caching and pass our fetching function\n  const { isLoading, data } = useQuery('luke', fetchLuke)\n\n  // Loading state\n  if (isLoading) {\n    return <div>Loading...</div>\n  }\n\n  // Display the name of the character\n  return <div>{data.name}</div>\n}\n\nexport default function App() {\n  return (\n    // Set up the provider with the client we created\n    <QueryClientProvider client={queryClient}>\n      <Luke />\n    </QueryClientProvider>\n  )\n}\n```"}]],"content":"\t  ```js\n// App.js\nimport { useQuery, QueryClient, QueryClientProvider } from 'react-query'\n\n// Create a client for making queries\nconst queryClient = new QueryClient()\n\n// Call the Star Wars API and return the JSON data\n// This can be any function, as long as it returns a promise\nconst fetchLuke = async () => {\n  const response = await fetch('https://swapi.dev/api/people/1/')\n  return response.json()\n}\n\nconst Luke = () => {\n  // Set up the useQuery hook with a unique key, 'luke', which is used\n  // for caching and pass our fetching function\n  const { isLoading, data } = useQuery('luke', fetchLuke)\n\n  // Loading state\n  if (isLoading) {\n    return <div>Loading...</div>\n  }\n\n  // Display the name of the character\n  return <div>{data.name}</div>\n}\n\nexport default function App() {\n  return (\n    // Set up the provider with the client we created\n    <QueryClientProvider client={queryClient}>\n      <Luke />\n    </QueryClientProvider>\n  )\n}\n```"},{"id":"614adbbe-1e2b-4ac4-abf7-2482af520186","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["// App.test.js","\n","import App from './App'","\n","import { screen, render } from '@testing-library/react'","\n","\t  ","\n","test.todo('renders loading state')","\n","test.todo('renders data')","\n"],"language":"js","pos_meta":{"start_pos":7816,"end_pos":7994},"full_content":"```js\n// App.test.js\nimport App from './App'\nimport { screen, render } from '@testing-library/react'\n\ntest.todo('renders loading state')\ntest.todo('renders data')\n```"}]],"content":"\t  ```js\n// App.test.js\nimport App from './App'\nimport { screen, render } from '@testing-library/react'\n\ntest.todo('renders loading state')\ntest.todo('renders data')\n```"},{"id":"614adbbe-b84c-4773-a322-2a9897e567bd","format":"markdown","children":[],"title":[["Plain","First we'll test that the loading state renders correctly. We don't need to do anything special for this case."]],"body":[],"content":"First we'll test that the loading state renders correctly. We don't need to do anything special for this case."},{"id":"614adbbe-bd93-453d-9a8d-4529f346247b","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["// App.test.js","\n","test('renders loading state', () => {","\n","  // Render the App component","\n","  render(<App />)","\n","\t  ","\n","  // Assert ","\n","  expect(screen.getByText(/loading.../i)).toBeInTheDocument()","\n","})","\n"],"language":"js","pos_meta":{"start_pos":8124,"end_pos":8331},"full_content":"```js\n// App.test.js\ntest('renders loading state', () => {\n  // Render the App component\n  render(<App />)\n\n  // Assert \n  expect(screen.getByText(/loading.../i)).toBeInTheDocument()\n})\n```"}]],"content":"\t  ```js\n// App.test.js\ntest('renders loading state', () => {\n  // Render the App component\n  render(<App />)\n\n  // Assert \n  expect(screen.getByText(/loading.../i)).toBeInTheDocument()\n})\n```"},{"id":"614adbbe-5a59-4cc9-9207-284eb42adc57","format":"markdown","children":[],"title":[["Plain","Next, we'll want to make sure that the app actually display our character, Luke Skywalker. To make the test pass we only need to add async/await and use a "],["Code","findBy*"],["Plain"," query."]],"body":[],"content":"Next, we'll want to make sure that the app actually display our character, Luke Skywalker. To make the test pass we only need to add async/await and use a `findBy*` query."},{"id":"614adbbe-151f-4c1a-a5e3-1544088cccdf","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["// Make the test asynchronous by adding async to the callback","\n","test('renders data', async () => {","\n","  render(<App />)","\n","\t  ","\n","  // Using await and a findBy* query the assertion will wait until the","\n","  // document contains the text we're looking for. If it takes too long","\n","  // the test will timeout.","\n","  expect(await screen.findByText(/luke skywalker/i)).toBeInTheDocument()","\n","  ","\n","  // This assertion checks that we're no longer rendering the loading state.","\n","  // It uses queryBy* since a getBy* or findBy* would throw errors if they","\n","  // can't find the element","\n","  expect(screen.queryByText(/loading.../)).not.toBeInTheDocument()","\n","})","\n"],"language":"js","pos_meta":{"start_pos":8522,"end_pos":9183},"full_content":"```js\n// Make the test asynchronous by adding async to the callback\ntest('renders data', async () => {\n  render(<App />)\n\t  \n  // Using await and a findBy* query the assertion will wait until the\n  // document contains the text we're looking for. If it takes too long\n  // the test will timeout.\n  expect(await screen.findByText(/luke skywalker/i)).toBeInTheDocument()\n  \n  // This assertion checks that we're no longer rendering the loading state.\n  // It uses queryBy* since a getBy* or findBy* would throw errors if they\n  // can't find the element\n  expect(screen.queryByText(/loading.../)).not.toBeInTheDocument()\n})\n```"}]],"content":"\t  ```js\n// Make the test asynchronous by adding async to the callback\ntest('renders data', async () => {\n  render(<App />)\n\t  \n  // Using await and a findBy* query the assertion will wait until the\n  // document contains the text we're looking for. If it takes too long\n  // the test will timeout.\n  expect(await screen.findByText(/luke skywalker/i)).toBeInTheDocument()\n  \n  // This assertion checks that we're no longer rendering the loading state.\n  // It uses queryBy* since a getBy* or findBy* would throw errors if they\n  // can't find the element\n  expect(screen.queryByText(/loading.../)).not.toBeInTheDocument()\n})\n```"},{"id":"614adbbe-8c13-4687-abf5-efd1913ab214","format":"markdown","children":[],"title":[["Plain","However, this would call the real API which is not ideal. The response could change, the service could be down or slow to respond. By adding a "],["Code","beforeEach"],["Plain"," with a mocked response we can ensure that our test won't be flaky."]],"body":[],"content":"However, this would call the real API which is not ideal. The response could change, the service could be down or slow to respond. By adding a `beforeEach` with a mocked response we can ensure that our test won't be flaky."},{"id":"614adbbe-79d2-4392-8039-5ad7419a3a89","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["beforeEach(() => {","\n","  global.fetch = jest.fn().mockResolvedValue({","\n","    json: jest.fn().mockResolvedValue({","\n","      // Use a name we know won't be returned from the API to ensure","\n","      // that we're calling our mock. Be sure to update the assertion","\n","      // as well. Kudos to a colleague for pointing this out!","\n","      name: 'Mocked Skywalker',","\n","    }),","\n","  })","\n","})","\n"],"language":"js","pos_meta":{"start_pos":9425,"end_pos":9813},"full_content":"```js\nbeforeEach(() => {\n  global.fetch = jest.fn().mockResolvedValue({\n    json: jest.fn().mockResolvedValue({\n      // Use a name we know won't be returned from the API to ensure\n      // that we're calling our mock. Be sure to update the assertion\n      // as well. Kudos to a colleague for pointing this out!\n      name: 'Mocked Skywalker',\n    }),\n  })\n})\n```"}]],"content":"\t  ```js\nbeforeEach(() => {\n  global.fetch = jest.fn().mockResolvedValue({\n    json: jest.fn().mockResolvedValue({\n      // Use a name we know won't be returned from the API to ensure\n      // that we're calling our mock. Be sure to update the assertion\n      // as well. Kudos to a colleague for pointing this out!\n      name: 'Mocked Skywalker',\n    }),\n  })\n})\n```"},{"id":"614adbbe-d901-44f7-ba43-f1de031e4cda","format":"markdown","children":[],"title":[["Plain","The final code is available on the branch "],["Link",{"url":["Complex",{"protocol":"https","link":"github.com/believer/frontend-testing-workshop/tree/2-async-complete"}],"label":[["Code","2-async-complete"]],"full_text":"[`2-async-complete`](https://github.com/believer/frontend-testing-workshop/tree/2-async-complete)","metadata":""}],["Plain","."]],"body":[],"content":"The final code is available on the branch [`2-async-complete`](https://github.com/believer/frontend-testing-workshop/tree/2-async-complete)."}],"title":[["Plain","Async"]],"body":[],"content":"### Async"},{"id":"614adbbe-b274-4912-b0a7-2fb368aeb726","heading-level":3,"format":"markdown","children":[{"id":"614adbbe-1050-4b54-9132-8992b630c1ff","format":"markdown","children":[],"title":[["Plain","For our third and final scenario we'll test a custom React hook. The hook we're testing is trivial, but we'll add some features using "],["Link",{"url":["Page_ref","TDD"],"label":[["Plain",""]],"full_text":"[[TDD]]","metadata":""}],["Plain"," as we go along. The code is available on the branch "],["Link",{"url":["Complex",{"protocol":"https","link":"github.com/believer/frontend-testing-workshop/tree/3-hooks"}],"label":[["Code","3-hooks"]],"full_text":"[`3-hooks`](https://github.com/believer/frontend-testing-workshop/tree/3-hooks)","metadata":""}],["Plain"," and the two files we'll use are"]],"body":[],"content":"For our third and final scenario we'll test a custom React hook. The hook we're testing is trivial, but we'll add some features using [[TDD]] as we go along. The code is available on the branch [`3-hooks`](https://github.com/believer/frontend-testing-workshop/tree/3-hooks) and the two files we'll use are"},{"id":"614adbbe-0d48-4f2a-95d6-4cad6764ac2a","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["// useCustomHook.js","\n","import React from 'react'","\n","\t  ","\n","export const useCustomHook = () => {","\n","  const [state] = React.useState('Initial')","\n","\t  ","\n","  return state","\n","}","\n"],"language":"js","pos_meta":{"start_pos":10299,"end_pos":10472},"full_content":"```js\n// useCustomHook.js\nimport React from 'react'\n\nexport const useCustomHook = () => {\n  const [state] = React.useState('Initial')\n\n  return state\n}\n```"}]],"content":"\t  ```js\n// useCustomHook.js\nimport React from 'react'\n\nexport const useCustomHook = () => {\n  const [state] = React.useState('Initial')\n\n  return state\n}\n```"},{"id":"614adbbe-84f1-4ea5-ac24-e931f32594f0","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["// useCustomHook.test.js","\n","import { act, renderHook } from '@testing-library/react-hooks'","\n","import { useCustomHook } from './useCustomHook'","\n","\t  ","\n","test.todo('custom hook return state')","\n","test.todo('custom hook with custom initial value')","\n","test.todo('custom hook with updater')","\n"],"language":"js","pos_meta":{"start_pos":10488,"end_pos":10776},"full_content":"```js\n// useCustomHook.test.js\nimport { act, renderHook } from '@testing-library/react-hooks'\nimport { useCustomHook } from './useCustomHook'\n\ntest.todo('custom hook return state')\ntest.todo('custom hook with custom initial value')\ntest.todo('custom hook with updater')\n```"}]],"content":"\t  ```js\n// useCustomHook.test.js\nimport { act, renderHook } from '@testing-library/react-hooks'\nimport { useCustomHook } from './useCustomHook'\n\ntest.todo('custom hook return state')\ntest.todo('custom hook with custom initial value')\ntest.todo('custom hook with updater')\n```"},{"id":"614adbbe-a880-4142-87ba-0e0154c7519e","format":"markdown","children":[],"title":[["Plain","The first test is pretty straightforward"]],"body":[],"content":"The first test is pretty straightforward"},{"id":"614adbbe-fcfe-4a7d-8a86-c700beafe247","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["// useCustomHook.test.js","\n","\t  ","\n","test('custom hook return state', () => {","\n","  // We use the renderHook utility to wrap our custom hook. This will return","\n","  // an object with the current value of the hook and as well as any errors","\n","  const { result } = renderHook(() => useCustomHook())","\n","\t  ","\n","  // result.current is the current value that is returned","\n","  expect(result.current).toEqual('Initial')","\n","})","\n"],"language":"js","pos_meta":{"start_pos":10836,"end_pos":11250},"full_content":"```js\n// useCustomHook.test.js\n\ntest('custom hook return state', () => {\n  // We use the renderHook utility to wrap our custom hook. This will return\n  // an object with the current value of the hook and as well as any errors\n  const { result } = renderHook(() => useCustomHook())\n\n  // result.current is the current value that is returned\n  expect(result.current).toEqual('Initial')\n})\n```"}]],"content":"\t  ```js\n// useCustomHook.test.js\n\ntest('custom hook return state', () => {\n  // We use the renderHook utility to wrap our custom hook. This will return\n  // an object with the current value of the hook and as well as any errors\n  const { result } = renderHook(() => useCustomHook())\n\n  // result.current is the current value that is returned\n  expect(result.current).toEqual('Initial')\n})\n```"},{"id":"614adbbe-7e23-4e61-999a-f37e88860aed","format":"markdown","children":[],"title":[["Plain","The criteria has changed and we now need to be able to pass in the initial value of the hook. This is where we'll start using "],["Link",{"url":["Page_ref","TDD"],"label":[["Plain",""]],"full_text":"[[TDD]]","metadata":""}],["Plain",". Let's add a new test that tests this criteria and update the code for our hook."]],"body":[],"content":"The criteria has changed and we now need to be able to pass in the initial value of the hook. This is where we'll start using [[TDD]]. Let's add a new test that tests this criteria and update the code for our hook."},{"id":"614adbbe-1c23-44b2-8838-703f148a207f","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["// useCustomHook.test.js","\n","\t  ","\n","test('custom hook with custom initial value', () => {","\n","  // Pass in an initial value to the hook","\n","  const { result } = renderHook(() => useCustomHook('newInitial'))","\n","\t  ","\n","  // Assert that the hook takes our passed value","\n","  expect(result.current).toEqual('newInitial')","\n","})","\n","\t  ","\n","// Once we've confirmed that the test is indeed failing we can","\n","// make the necessary updates that will make it pass","\n","\t  ","\n","// useCustomHook.js","\n","// Add the ability to pass in a value, but set the default value – which","\n","// is used if no value is passed – to what we had before 'Initial'.","\n","// This will make sure that our first test doesn't break","\n","export const useCustomHook = (initial = 'Initial') => {","\n","  const [state] = React.useState(initial)","\n","\t  ","\n","  return state","\n","}","\n"],"language":"js","pos_meta":{"start_pos":11484,"end_pos":12298},"full_content":"```js\n// useCustomHook.test.js\n\ntest('custom hook with custom initial value', () => {\n  // Pass in an initial value to the hook\n  const { result } = renderHook(() => useCustomHook('newInitial'))\n\n  // Assert that the hook takes our passed value\n  expect(result.current).toEqual('newInitial')\n})\n\n// Once we've confirmed that the test is indeed failing we can\n// make the necessary updates that will make it pass\n\n// useCustomHook.js\n// Add the ability to pass in a value, but set the default value – which\n// is used if no value is passed – to what we had before 'Initial'.\n// This will make sure that our first test doesn't break\nexport const useCustomHook = (initial = 'Initial') => {\n  const [state] = React.useState(initial)\n\n  return state\n}\n```"}]],"content":"\t  ```js\n// useCustomHook.test.js\n\ntest('custom hook with custom initial value', () => {\n  // Pass in an initial value to the hook\n  const { result } = renderHook(() => useCustomHook('newInitial'))\n\n  // Assert that the hook takes our passed value\n  expect(result.current).toEqual('newInitial')\n})\n\n// Once we've confirmed that the test is indeed failing we can\n// make the necessary updates that will make it pass\n\n// useCustomHook.js\n// Add the ability to pass in a value, but set the default value – which\n// is used if no value is passed – to what we had before 'Initial'.\n// This will make sure that our first test doesn't break\nexport const useCustomHook = (initial = 'Initial') => {\n  const [state] = React.useState(initial)\n\n  return state\n}\n```"},{"id":"614adbbe-8829-440c-a55f-42e7ca6f1b19","format":"markdown","children":[],"title":[["Plain","Awesome, we've fulfilled the new demands for the custom hook. Unfortunately, the conditions changed again while we were fixing the last case. Now we also need to be able to update the value from outside the hook. For this we'll return the setter part of "],["Code","useState"],["Plain"," so that the consumer can update the internal value. Again we'll do this using TDD."]],"body":[],"content":"Awesome, we've fulfilled the new demands for the custom hook. Unfortunately, the conditions changed again while we were fixing the last case. Now we also need to be able to update the value from outside the hook. For this we'll return the setter part of `useState` so that the consumer can update the internal value. Again we'll do this using TDD."},{"id":"614adbbe-ffcc-4ebe-9660-a66542fda148","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["// useCustomHook.test.js","\n","\t  ","\n","// We now want to return two values from our hook, the current value and","\n","// a function to update the value with. Let's use the same style as useState","\n","// uses, an array with two values: [value, updateFunction]","\n","\t  ","\n","test('custom hook return state', () => {","\n","  const { result } = renderHook(() => useCustomHook())","\n","  ","\n","  // The current value will now be the first item in an array","\n","  expect(result.current[0]).toEqual('Initial')","\n","})","\n","\t  ","\n","test('custom hook with custom initial value', () => {","\n","  const { result } = renderHook(() => useCustomHook('newInitial'))","\n","\t  ","\n","  // The current value will now be the first item in an array","\n","  expect(result.current[0]).toEqual('newInitial')","\n","})","\n","\t  ","\n","test('custom hook with updater', () => {","\n","  const { result } = renderHook(() => useCustomHook())","\n","\t  ","\n","  // The act utility is used to make the test run closer to how","\n","  // React actually calls it in the browser. The test passes without","\n","  // the act, but we would see an error in the test runner","\n","  act(() => {","\n","    // Call the second item of the returned array with our updated value","\n","    result.current[1]('newInitial')","\n","  })","\n","\t  ","\n","  // Assert that our value is the updated one","\n","  expect(result.current[0]).toEqual('newInitial')","\n","})","\n","\t  ","\n","// Finally once are tests are updated, we can rebuild the hook to make","\n","// all tests pass","\n","\t  ","\n","// useCustomHook.js","\n","// Since we're now returning exactly the same as what useState returns","\n","// [state, setState], we can simply return the useState hook.","\n","export const useCustomHook = (initial = 'Initial') => React.useState(initial)","\n"],"language":"js","pos_meta":{"start_pos":12665,"end_pos":14319},"full_content":"```js\n// useCustomHook.test.js\n\n// We now want to return two values from our hook, the current value and\n// a function to update the value with. Let's use the same style as useState\n// uses, an array with two values: [value, updateFunction]\n\ntest('custom hook return state', () => {\n  const { result } = renderHook(() => useCustomHook())\n  \n  // The current value will now be the first item in an array\n  expect(result.current[0]).toEqual('Initial')\n})\n\ntest('custom hook with custom initial value', () => {\n  const { result } = renderHook(() => useCustomHook('newInitial'))\n\n  // The current value will now be the first item in an array\n  expect(result.current[0]).toEqual('newInitial')\n})\n\ntest('custom hook with updater', () => {\n  const { result } = renderHook(() => useCustomHook())\n\n  // The act utility is used to make the test run closer to how\n  // React actually calls it in the browser. The test passes without\n  // the act, but we would see an error in the test runner\n  act(() => {\n    // Call the second item of the returned array with our updated value\n    result.current[1]('newInitial')\n  })\n\n  // Assert that our value is the updated one\n  expect(result.current[0]).toEqual('newInitial')\n})\n\n// Finally once are tests are updated, we can rebuild the hook to make\n// all tests pass\n\n// useCustomHook.js\n// Since we're now returning exactly the same as what useState returns\n// [state, setState], we can simply return the useState hook.\nexport const useCustomHook = (initial = 'Initial') => React.useState(initial)\n```"}]],"content":"\t  ```js\n// useCustomHook.test.js\n\n// We now want to return two values from our hook, the current value and\n// a function to update the value with. Let's use the same style as useState\n// uses, an array with two values: [value, updateFunction]\n\ntest('custom hook return state', () => {\n  const { result } = renderHook(() => useCustomHook())\n  \n  // The current value will now be the first item in an array\n  expect(result.current[0]).toEqual('Initial')\n})\n\ntest('custom hook with custom initial value', () => {\n  const { result } = renderHook(() => useCustomHook('newInitial'))\n\n  // The current value will now be the first item in an array\n  expect(result.current[0]).toEqual('newInitial')\n})\n\ntest('custom hook with updater', () => {\n  const { result } = renderHook(() => useCustomHook())\n\n  // The act utility is used to make the test run closer to how\n  // React actually calls it in the browser. The test passes without\n  // the act, but we would see an error in the test runner\n  act(() => {\n    // Call the second item of the returned array with our updated value\n    result.current[1]('newInitial')\n  })\n\n  // Assert that our value is the updated one\n  expect(result.current[0]).toEqual('newInitial')\n})\n\n// Finally once are tests are updated, we can rebuild the hook to make\n// all tests pass\n\n// useCustomHook.js\n// Since we're now returning exactly the same as what useState returns\n// [state, setState], we can simply return the useState hook.\nexport const useCustomHook = (initial = 'Initial') => React.useState(initial)\n```"},{"id":"614adbbe-eb19-4aeb-b75c-21d83fc2a53e","format":"markdown","children":[],"title":[["Plain","This was the complete code of our final scenario and the competed code is available in "],["Link",{"url":["Complex",{"protocol":"https","link":"github.com/believer/frontend-testing-workshop/tree/3-hooks-complete"}],"label":[["Code","3-hooks-complete"]],"full_text":"[`3-hooks-complete`](https://github.com/believer/frontend-testing-workshop/tree/3-hooks-complete)","metadata":""}],["Plain"," branch."]],"body":[],"content":"This was the complete code of our final scenario and the competed code is available in [`3-hooks-complete`](https://github.com/believer/frontend-testing-workshop/tree/3-hooks-complete) branch."}],"title":[["Plain","Custom hooks"]],"body":[],"content":"### Custom hooks"}]},{"id":"614adbbe-6ad4-49e2-b11d-aaea2544b62d","page-name":"Frontend","properties":{"public":true},"children":[{"id":"614adbbe-265c-4487-8bbc-c03274e536f9","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-27ad-42e4-a273-b180f6c4d2f8","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-a7ed-4ad7-a6f4-4bb47b6c9e65","page-name":"CSS","properties":{"public":true},"children":[{"id":"614adbbd-a769-4b39-9786-faf3f8f364e1","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbd-6ddd-45b2-a265-66140a4d6fd0","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-3a35-4095-b57a-a32653521bda","page-name":"2021-03-04","properties":{"public":true},"children":[{"id":"614adbbe-c326-41fd-9939-72796d9bcd85","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-8822-47e9-863a-088b44ba5add","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-e2ed-495a-9978-41684d15f7bd","page-name":"Rewriting Git commit history","properties":{"public":true},"children":[{"id":"614adbbe-92e1-4214-8374-737c58efbcd7","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-e6ec-42bb-a33e-22c370296da2","format":"markdown","children":[{"id":"614adbbe-01e0-40b1-9110-60a5236bb651","format":"markdown","children":[],"title":[["Plain","Commit A (sha: 123)"]],"body":[],"content":"Commit A (sha: 123)"},{"id":"614adbbe-d042-4c07-95c7-2fa84b31a98d","format":"markdown","children":[],"title":[["Plain","Commit B (sha: 456)"]],"body":[],"content":"Commit B (sha: 456)"},{"id":"614adbbe-a73a-4678-82fd-32837c156152","format":"markdown","children":[],"title":[["Plain","Commit C (sha: 789)"]],"body":[],"content":"Commit C (sha: 789)"}],"title":[["Plain","If you want to fix a commit inside a "],["Link",{"url":["Page_ref","PR"],"label":[["Plain",""]],"full_text":"[[PR]]","metadata":""}],["Plain"," you can use "],["Link",{"url":["Page_ref","Git"],"label":[["Plain",""]],"full_text":"[[Git]]","metadata":""}],["Plain"," rebasing and the easiest way to do it is using an interactive rebase. Let's say you have three commits:"]],"body":[],"content":"If you want to fix a commit inside a [[PR]] you can use [[Git]] rebasing and the easiest way to do it is using an interactive rebase. Let's say you have three commits:"},{"id":"614adbbe-0e3c-4b08-94f4-48b7d5663f64","format":"markdown","children":[],"title":[["Plain","Now you want to change "],["Emphasis",[["Italic"],[["Plain","Commit B"]]]],["Plain",". Start by finding its "],["Link",{"url":["Page_ref","SHA"],"label":[["Plain",""]],"full_text":"[[SHA]]","metadata":""}],["Plain"," ID using "],["Code","git log"],["Plain",", in this example we've called it "],["Code","456"],["Plain","."]],"body":[],"content":"Now you want to change _Commit B_. Start by finding its [[SHA]] ID using `git log`, in this example we've called it `456`."},{"id":"614adbbe-2cbb-4536-b4ec-91b32b9dc1aa","format":"markdown","children":[],"title":[["Plain","Run "],["Code","git rebase -i 456^"],["Plain"," to start an interactive rebase. Note the "],["Code","^"],["Plain"," at the end which "],["Emphasis",[["Bold"],[["Plain","includes the commit in question in the rebase"]]]]],"body":[],"content":"Run `git rebase -i 456^` to start an interactive rebase. Note the `^` at the end which **includes the commit in question in the rebase**"},{"id":"614adbbe-a5ca-4358-af4d-e920847d209c","format":"markdown","children":[{"id":"614adbbe-a7c2-48d3-8870-f5ab91ddf67b","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["pick 456 Commit B","\n","pick 789 Commit C","\n","\t  ","\n","# Commands","\n","# p, pick <commit> = use commit","\n","# e, edit <commit> = use commit, but stop for amending","\n","# ...","\n"],"language":"md","pos_meta":{"start_pos":606,"end_pos":771},"full_content":"```md\npick 456 Commit B\npick 789 Commit C\n\n# Commands\n# p, pick <commit> = use commit\n# e, edit <commit> = use commit, but stop for amending\n# ...\n```"}]],"content":"\t  ```md\npick 456 Commit B\npick 789 Commit C\n\n# Commands\n# p, pick <commit> = use commit\n# e, edit <commit> = use commit, but stop for amending\n# ...\n```"},{"id":"614adbbe-d7c8-4d34-a765-6a334f718c4a","format":"markdown","children":[],"title":[["Plain","Notice the "],["Emphasis",[["Italic"],[["Plain","edit"]]]],["Plain"," command, which is exactly what we want. Alter the line for "],["Emphasis",[["Italic"],[["Plain","Commit B"]]]],["Plain"," with the edit command instead of the pick command."]],"body":[],"content":"Notice the _edit_ command, which is exactly what we want. Alter the line for _Commit B_ with the edit command instead of the pick command."},{"id":"614adbbe-e4fb-4a33-a0df-a1c8fe6947d3","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["edit 456 Commit B","\n","pick 789 Commit C","\n"],"language":"md","pos_meta":{"start_pos":929,"end_pos":974},"full_content":"```md\nedit 456 Commit B\npick 789 Commit C\n```"}]],"content":"\t  ```md\nedit 456 Commit B\npick 789 Commit C\n```"},{"id":"614adbbe-8c0d-4302-bae9-f5ff1b9db5af","format":"markdown","children":[],"title":[["Plain","After saving, "],["Link",{"url":["Page_ref","How to save and quit Vim"],"label":[["Plain",""]],"full_text":"[[How to save and quit Vim]]","metadata":""}],["Plain",", you'll be taken back in time to "],["Emphasis",[["Italic"],[["Plain","Commit B"]]]],["Plain"," where you can make the changes you set out to do."]],"body":[],"content":"After saving, [[How to save and quit Vim]], you'll be taken back in time to _Commit B_ where you can make the changes you set out to do."},{"id":"614adbbe-b1c5-49fe-9a68-4c0749cba891","format":"markdown","children":[],"title":[["Plain","Once your done with the changes, run "],["Code","git rebase --continue"],["Plain"," to take you back to the present."]],"body":[],"content":"Once your done with the changes, run `git rebase --continue` to take you back to the present."}],"title":[["Plain","You'll be presented with a "],["Link",{"url":["Page_ref","Vim"],"label":[["Plain",""]],"full_text":"[[Vim]]","metadata":""}],["Plain"," buffer that would look something like:"]],"body":[],"content":"You'll be presented with a [[Vim]] buffer that would look something like:"},{"id":"614adbbe-7eaf-401e-9505-7f00e9c6ee05","format":"markdown","children":[],"title":[["Plain","If you would run "],["Code","git log"],["Plain"," at this point you would notice that the commit SHAs for Commit B and Commit C have changed. This happened be we altered history using with our rebase. To update our PR we need to do a force push, "],["Code","git push -f"]],"body":[],"content":"If you would run `git log` at this point you would notice that the commit SHAs for Commit B and Commit C have changed. This happened be we altered history using with our rebase. To update our PR we need to do a force push, `git push -f`"},{"id":"614adbbe-84fe-4ee8-b17b-5a480a7167a3","format":"markdown","children":[],"title":[],"body":[["Custom","warning",null,[["Paragraph",[["Plain","Only do this in pull requests, don't alter your commits on you default branch."],["Break_Line"]]]],"Only do this in pull requests, don't alter your commits on you default branch.\n"]],"content":"  #+BEGIN_WARNING\nOnly do this in pull requests, don't alter your commits on you default branch.\n#+END_WARNING"},{"id":"614adbbe-625e-4bbd-ad39-c2931d83959b","format":"markdown","children":[],"title":[],"body":[["Horizontal_Rule"]],"content":"  ---"},{"id":"614adbbe-867b-465a-8c75-716e9eea4c20","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Johnny Ji"],"label":[["Plain",""]],"full_text":"[[Johnny Ji]]","metadata":""}],["Plain",". ("],["Link",{"url":["Page_ref","2021-06-08"],"label":[["Plain",""]],"full_text":"[[2021-06-08]]","metadata":""}],["Plain","). "],["Emphasis",[["Italic"],[["Plain","Engineering Culture: Keeping a Clean Commit History"]]]],["Plain",". "],["Link",{"url":["Complex",{"protocol":"https","link":"johnnyisji.medium.com/engineering-culture-keeping-a-clean-commit-history-453f950c1f2d"}],"label":[["Plain","https://johnnyisji.medium.com/engineering-culture-keeping-a-clean-commit-history-453f950c1f2d"]],"full_text":"https://johnnyisji.medium.com/engineering-culture-keeping-a-clean-commit-history-453f950c1f2d","metadata":""}]],"body":[],"content":"[[Johnny Ji]]. ([[2021-06-08]]). _Engineering Culture: Keeping a Clean Commit History_. https://johnnyisji.medium.com/engineering-culture-keeping-a-clean-commit-history-453f950c1f2d"},{"id":"614adbbe-c2a4-40a7-b204-45e242c5eb22","format":"markdown","children":[],"title":[["Tag",[["Plain","Git"]]]],"body":[],"content":"#Git"},{"id":"614adbbe-c7fb-4f1f-ba4a-01d5dc8c19f6","format":"markdown","children":[],"title":[["Emphasis",[["Bold"],[["Plain","ID:"]]]],["Plain"," 210609102742"]],"body":[],"content":"**ID:** 210609102742"}]},{"id":"614adbbe-e5a8-4171-86a3-2e61c875b440","page-name":"2021-06-08","properties":{"public":true},"children":[{"id":"614adbbe-949c-4075-a360-447198b94eca","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-c22d-40bb-a449-0cf396398e81","format":"markdown","children":[],"title":[["Plain","Write out all the test cases – that you can think of – as TODOs before you start writing the code. "],["Link",{"url":["Page_ref","Jest"],"label":[["Plain",""]],"full_text":"[[Jest]]","metadata":""}],["Plain"," will display these tests as a separate metric in the interactive runner and in the test summary. It's as simple as using "],["Code","test.todo('description')"],["Plain"," "],["Tag",[["Link",{"url":["Page_ref","Testing"],"label":[["Plain",""]],"full_text":"[[Testing]]","metadata":""}]]]],"body":[],"content":"Write out all the test cases – that you can think of – as TODOs before you start writing the code. [[Jest]] will display these tests as a separate metric in the interactive runner and in the test summary. It's as simple as using `test.todo('description')` #[[Testing]]"}]},{"id":"614adbbe-90f4-4334-a724-513db455ccd8","page-name":"2021-06-22","children":[{"id":"614adbbe-f325-4291-8189-9a7b2fc6a145","format":"markdown","children":[{"id":"614adbbe-a1ae-4ee1-bb26-686fc5383696","format":"markdown","children":[{"id":"614adbbe-35f8-4ee7-9b3a-ad2ba31b55d0","format":"markdown","children":[],"title":[["Plain","Use cartoons or illustrations instead of writing text"]],"body":[],"content":"Use cartoons or illustrations instead of writing text"},{"id":"614adbbe-12cf-4010-8bb2-d87bf03c0ec9","format":"markdown","children":[],"title":[["Plain","Limit slang in issues/"],["Link",{"url":["Page_ref","PR"],"label":[["Plain",""]],"full_text":"[[PR]]","metadata":""}],["Plain","s. "],["Link",{"url":["Page_ref","Explain in plain words"],"label":[["Plain",""]],"full_text":"[[Explain in plain words]]","metadata":""}]],"body":[],"content":"Limit slang in issues/[[PR]]s. [[Explain in plain words]]"},{"id":"614adbbe-c05b-4de0-9a1d-461859bb33dd","format":"markdown","children":[],"title":[["Plain","Work with native speakers of other languages to create better documentation"]],"body":[],"content":"Work with native speakers of other languages to create better documentation"}],"title":[["Plain","Tech is full of jargon which can be hard for everyone to understand. Some languages might not even have a name for a certain topic. Here are a few ways that can help make things easier to understand"]],"body":[],"content":"Tech is full of jargon which can be hard for everyone to understand. Some languages might not even have a name for a certain topic. Here are a few ways that can help make things easier to understand"}],"title":[["Link",{"url":["Page_ref","The Etymology of Programming"],"label":[["Plain",""]],"full_text":"[[The Etymology of Programming]]","metadata":""}]],"body":[],"content":"[[The Etymology of Programming]]"},{"id":"614adbbe-3257-4afd-86ac-b74ca021821e","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Always use real variable names in examples"],"label":[["Plain",""]],"full_text":"[[Always use real variable names in examples]]","metadata":""}]],"body":[],"content":"[[Always use real variable names in examples]]"},{"id":"614adbbe-1012-4274-ba41-8d8f285a8914","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Don't use shorthands in CSS"],"label":[["Plain",""]],"full_text":"[[Don't use shorthands in CSS]]","metadata":""}]],"body":[],"content":"[[Don't use shorthands in CSS]]"},{"id":"614adbbe-b430-4872-af1b-f9697bdf7e5a","format":"markdown","children":[],"title":[["Plain","I keep forgetting the official names for each part of the structure of CSS. Hopefully writing it down will help future me in remembering it - "],["Link",{"url":["Page_ref","Structure of CSS"],"label":[["Plain",""]],"full_text":"[[Structure of CSS]]","metadata":""}],["Plain","."]],"body":[],"content":"I keep forgetting the official names for each part of the structure of CSS. Hopefully writing it down will help future me in remembering it - [[Structure of CSS]]."},{"id":"614adbbe-f185-43ce-8ddb-2740ec3324ec","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","AbortController can be used to cancel multiple request"],"label":[["Plain",""]],"full_text":"[[AbortController can be used to cancel multiple request]]","metadata":""}]],"body":[],"content":"[[AbortController can be used to cancel multiple request]]"}]},{"id":"614adbbe-9b9d-4fe9-9bd4-bd80011e0d31","page-name":"React","properties":{"public":true},"children":[{"id":"614adbbe-7bb0-4e11-881a-554b3c0e3b07","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-36db-4851-8ffc-548da89c0c22","format":"markdown","children":[],"title":[["Link",{"url":["Complex",{"protocol":"https","link":"reactjs.org/docs/getting-started.html"}],"label":[["Plain","Documentation"]],"full_text":"[Documentation](https://reactjs.org/docs/getting-started.html)","metadata":""}]],"body":[],"content":"[Documentation](https://reactjs.org/docs/getting-started.html)"}]},{"id":"614adbbe-2c87-4a58-a561-ef2f38c03de3","page-name":"Jest","properties":{"public":true},"children":[{"id":"614adbbe-571a-4294-8c57-9c7d50556b9c","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-b732-4e27-882d-3b2e276d00e7","format":"markdown","children":[],"title":[["Plain","Jest is a "],["Link",{"url":["Page_ref","JavaScript"],"label":[["Plain",""]],"full_text":"[[JavaScript]]","metadata":""}],["Plain"," testing framework."]],"body":[],"content":"Jest is a [[JavaScript]] testing framework."},{"id":"614adbbe-f05b-4c4e-be41-3aa6fcee56f1","format":"markdown","children":[{"id":"614adbbe-387f-49c2-badf-f71d4237278d","format":"markdown","children":[],"title":[["Plain","Interactive test runner"]],"body":[],"content":"Interactive test runner"}],"title":[["Emphasis",[["Bold"],[["Plain","Pros"]]]]],"body":[],"content":"**Pros**"},{"id":"614adbbe-1ade-4451-9637-61b27638738e","format":"markdown","children":[],"title":[["Link",{"url":["Complex",{"protocol":"https","link":"jestjs.io/"}],"label":[["Plain","https://jestjs.io/"]],"full_text":"https://jestjs.io/","metadata":""}]],"body":[],"content":"https://jestjs.io/"}]},{"id":"614adbbe-9793-4105-b35e-1d2384bc74bb","page-name":"Johnny Ji","properties":{"public":true},"children":[{"id":"614adbbe-61e8-4462-8b0b-3438aa1f5dfd","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-4013-4eea-9f83-c9a39e8f9dad","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-7d6a-42e3-88e5-172d5f2981a3","page-name":"IDE","properties":{"public":true},"children":[{"id":"614adbbe-9504-49a6-aea7-ff040d680552","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-c6e4-43cd-be23-066321351ac2","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-a8c2-452d-8f51-3739b0bd03c9","page-name":"Learning","properties":{"public":true},"children":[{"id":"614adbbe-2507-4ac3-9687-2869963a079d","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-a30b-40fb-97bc-ce3346d5ada1","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-4b76-4b63-9e5c-2668ac602ec5","page-name":"Git","properties":{"public":true},"children":[{"id":"614adbbe-1e5a-4115-83a6-288f50a22659","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-38d5-4ee9-a228-81b69504f48a","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-97b2-4f41-803e-928b2d2c36fe","page-name":"Kernel","properties":{"public":true},"children":[{"id":"614adbbe-36ec-4a83-9fda-b21be2579500","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-73e2-4f0b-babe-e309bc5e40e0","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-30bd-484c-b0bf-566164fd6a58","page-name":"2021-07-16","children":[{"id":"614adbbe-b1ac-490b-8748-0fa8914c23e9","properties":{"doing":1628021490866,"done":1628021491672},"format":"markdown","children":[],"title":[["Plain","Transfer "],["Link",{"url":["Page_ref","Good documentation is written by and for humans"],"label":[["Plain",""]],"full_text":"[[Good documentation is written by and for humans]]","metadata":""}],["Plain"," by "],["Link",{"url":["Page_ref","Jason Etcovich"],"label":[["Plain",""]],"full_text":"[[Jason Etcovich]]","metadata":""}]],"body":[],"content":"DONE Transfer [[Good documentation is written by and for humans]] by [[Jason Etcovich]]\ndoing:: 1628021490866\ndone:: 1628021491672"}]},{"id":"614adbbe-39cc-4d1f-980f-c98b9695ac3a","page-name":"2021-06-15","children":[{"id":"614adbbe-74c1-4b2e-8b71-ebf38830ff44","format":"markdown","children":[{"id":"614adbbe-33d9-4286-b9c4-d59902a818ba","format":"markdown","children":[],"title":[["Plain","A great way of finding out whether an array method is mutating or not is by using "],["Link",{"url":["Complex",{"protocol":"https","link":"doesitmutate.xyz/"}],"label":[["Plain","https://doesitmutate.xyz/"]],"full_text":"https://doesitmutate.xyz/","metadata":""}]],"body":[],"content":"A great way of finding out whether an array method is mutating or not is by using https://doesitmutate.xyz/"},{"id":"614adbbe-3f63-449d-91e1-9be5ef0fb360","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["// React app","\n","\t  ","\n","const data = [{ name: 'Test Testsson' }, { name: 'Aaron Aaronson' }];","\n","\t  ","\n","// Incorrect","\n","// The sorting operation that was used didn't really work as expected","\n","// and since the sort method is mutating the original data","\n","// we got some unexpected results","\n","data.sort((a, b) => a.name > b.name).map((user) => <div>{user.name}</div>);","\n","\t  ","\n","// Correct","\n","// Use the slice method to create a copy of the array","\n","// to not mutate the original data.","\n","// Update the sorting operation to use localeCompare for better results","\n","data","\n","  .slice()","\n","  .sort((a, b) => a.name.localeCompare(b.name))","\n","  .map((user) => <div>{user.name}</div>);","\n"],"language":"js","pos_meta":{"start_pos":511,"end_pos":1185},"full_content":"```js\n// React app\n\nconst data = [{ name: 'Test Testsson' }, { name: 'Aaron Aaronson' }];\n\n// Incorrect\n// The sorting operation that was used didn't really work as expected\n// and since the sort method is mutating the original data\n// we got some unexpected results\ndata.sort((a, b) => a.name > b.name).map((user) => <div>{user.name}</div>);\n\n// Correct\n// Use the slice method to create a copy of the array\n// to not mutate the original data.\n// Update the sorting operation to use localeCompare for better results\ndata\n  .slice()\n  .sort((a, b) => a.name.localeCompare(b.name))\n  .map((user) => <div>{user.name}</div>);\n```"}]],"content":"\t  ```js\n// React app\n\nconst data = [{ name: 'Test Testsson' }, { name: 'Aaron Aaronson' }];\n\n// Incorrect\n// The sorting operation that was used didn't really work as expected\n// and since the sort method is mutating the original data\n// we got some unexpected results\ndata.sort((a, b) => a.name > b.name).map((user) => <div>{user.name}</div>);\n\n// Correct\n// Use the slice method to create a copy of the array\n// to not mutate the original data.\n// Update the sorting operation to use localeCompare for better results\ndata\n  .slice()\n  .sort((a, b) => a.name.localeCompare(b.name))\n  .map((user) => <div>{user.name}</div>);\n```"}],"title":[["Plain","Here's an example of a bug I found recently. It was a list of users that occasionally displayed the wrong name with the wrong image. The data was stored as a JSON file and was using a "],["Code",".sort()"],["Plain"," operation before looping over each item. "],["Code",".sort()"],["Plain"," is a "],["Emphasis",[["Bold"],[["Plain","mutating"]]]],["Plain"," method and by adding a "],["Code",".slice()"],["Plain"," before sorting we can create a shallow copy of the array to not alter the original data."]],"body":[],"content":"Here's an example of a bug I found recently. It was a list of users that occasionally displayed the wrong name with the wrong image. The data was stored as a JSON file and was using a `.sort()` operation before looping over each item. `.sort()` is a **mutating** method and by adding a `.slice()` before sorting we can create a shallow copy of the array to not alter the original data."}]},{"id":"614adbbe-df0f-490a-b99d-49fd9de5a5ff","page-name":"Explain in plain words","properties":{"public":true},"children":[{"id":"614adbbe-878d-4005-aa2c-8fa117ae8776","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-42b1-493a-b390-f741b5b191ab","format":"markdown","children":[],"title":[["Plain","An efficient way of testing your knowledge is to try and explain the subject in simple words. If you're unable to do that you haven't understood the subject well enough. Identify where your knowledge is lacking and study those areas more until you can explain them in simple words."]],"body":[],"content":"An efficient way of testing your knowledge is to try and explain the subject in simple words. If you're unable to do that you haven't understood the subject well enough. Identify where your knowledge is lacking and study those areas more until you can explain them in simple words."},{"id":"614adbbe-4570-40db-95e3-01a152491000","format":"markdown","children":[],"title":[["Plain","You should be able to get your point across in as few words as possible, but don't overthink your first draft. Publish it then go over it again and make changes."]],"body":[],"content":"You should be able to get your point across in as few words as possible, but don't overthink your first draft. Publish it then go over it again and make changes."},{"id":"614adbbe-3f2e-4561-892c-a57c742d0ebb","format":"markdown","children":[],"title":[["Plain","A good way of testing this is by "],["Link",{"url":["Page_ref","Learning in public"],"label":[["Plain",""]],"full_text":"[[Learning in public]]","metadata":""}],["Plain",". Tell a friend about it, write a blog post, share on "],["Link",{"url":["Page_ref","Twitter"],"label":[["Plain",""]],"full_text":"[[Twitter]]","metadata":""}],["Plain","."]],"body":[],"content":"A good way of testing this is by [[Learning in public]]. Tell a friend about it, write a blog post, share on [[Twitter]]."},{"id":"614adbbe-a8f5-492f-a66e-80a4675b9751","format":"markdown","children":[],"title":[["Plain","This is the basis of "],["Link",{"url":["Page_ref","Richard Feynman"],"label":[["Plain",""]],"full_text":"[[Richard Feynman]]","metadata":""}],["Plain","'s learning technique"]],"body":[],"content":"This is the basis of [[Richard Feynman]]'s learning technique"},{"id":"614adbbe-d254-4767-861d-c26fee7e7c2d","format":"markdown","children":[],"title":[],"body":[["Horizontal_Rule"]],"content":"  ---"},{"id":"614adbbe-5751-405e-b36c-62580bb6c622","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Shu Omi"],"label":[["Plain",""]],"full_text":"[[Shu Omi]]","metadata":""}],["Plain"," ("],["Link",{"url":["Page_ref","2020-10-23"],"label":[["Plain",""]],"full_text":"[[2020-10-23]]","metadata":""}],["Plain","). "],["Emphasis",[["Italic"],[["Plain","\"Simple Feynman Technique for Studying\""]]]],["Plain",". "],["Link",{"url":["Complex",{"protocol":"https","link":"www.youtube.com/watch?v=GL6Z1DTJ-LQ"}],"label":[["Plain","https://www.youtube.com/watch?v=GL6Z1DTJ-LQ"]],"full_text":"https://www.youtube.com/watch?v=GL6Z1DTJ-LQ","metadata":""}]],"body":[],"content":"[[Shu Omi]] ([[2020-10-23]]). _\"Simple Feynman Technique for Studying\"_. https://www.youtube.com/watch?v=GL6Z1DTJ-LQ"},{"id":"614adbbe-15e9-43c5-829d-77d8f06717ed","format":"markdown","children":[],"title":[["Tag",[["Plain","Learning"]]]],"body":[],"content":"#Learning"},{"id":"614adbbe-7399-4ebe-a346-868970512ae2","format":"markdown","children":[],"title":[["Emphasis",[["Bold"],[["Plain","ID:"]]]],["Plain"," 210611105334"]],"body":[],"content":"**ID:** 210611105334"}]},{"id":"614adbbe-496b-4e2b-a723-a62f19eaec1c","page-name":"2021-07-12","properties":{"public":true},"children":[{"id":"614adbbe-52c3-4f69-a0b2-0bc4ca3064a6","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-ee4f-4658-87e2-d318db47cbb7","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-2b53-430f-b8bb-a3901ed592d1","page-name":"The Big Hack","properties":{"public":true},"children":[{"id":"614adbbe-09fe-4a75-873a-1168da34f3dc","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-b684-45d6-9039-ef8b1e6870ae","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-2e4d-4f50-a041-ec73334f9118","page-name":"Max Rozen","properties":{"public":true},"children":[{"id":"614adbbe-c2c9-4502-b436-f41e6cd5b2c5","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-f8ce-42dd-bed5-116c970133ae","format":"markdown","children":[],"title":[["Link",{"url":["Complex",{"protocol":"https","link":"twitter.com/RozenMD"}],"label":[["Plain","Twitter"]],"full_text":"[Twitter](https://twitter.com/RozenMD)","metadata":""}]],"body":[],"content":"[Twitter](https://twitter.com/RozenMD)"}]},{"id":"614adbbe-d8f9-4239-b183-39b5eda89566","page-name":"API","properties":{"public":true},"children":[{"id":"614adbbd-c0f8-4616-bcd0-21bb5c545dbf","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbd-1be3-4548-962d-a47806f04336","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-79e6-4230-91d1-1cca3cd10f79","page-name":"Accessibility","children":[{"id":"614adbbe-bf7a-4d25-bf7a-3ef95cf907ad","format":"markdown","children":[],"title":[["Plain","Commonly abbreviated as "],["Emphasis",[["Bold"],[["Plain","a11y"]]]],["Plain"," (a numeronym) which means \"a - 11 letters - y\" as in \"a - ccessibilit - y\""]],"body":[],"content":"Commonly abbreviated as **a11y** (a numeronym) which means \"a - 11 letters - y\" as in \"a - ccessibilit - y\""}]},{"id":"614adbbe-3f9b-4520-84b0-ed85374cca49","page-name":"Learning in public","properties":{"public":true},"children":[{"id":"614adbbd-de85-4b92-871d-5bef37c6ec44","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbd-9727-4f78-bc08-73f9b6c90beb","format":"markdown","children":[],"title":[["Plain","Share your knowledge and insights. To do this in the most effective way you'll need to "],["Link",{"url":["Page_ref","Explain in plain words"],"label":[["Plain",""]],"full_text":"[[Explain in plain words]]","metadata":""}],["Plain",". This \"forces\" you to refine your thinking until you can explain the topic in the most accessible way."]],"body":[],"content":"Share your knowledge and insights. To do this in the most effective way you'll need to [[Explain in plain words]]. This \"forces\" you to refine your thinking until you can explain the topic in the most accessible way."},{"id":"614adbbd-398c-4aff-8b5f-397b6ccb84eb","format":"markdown","children":[],"title":[["Plain","By learning and building in public you'll sooner or later post something that resonates with someone else. This feedback might lead to new insights and even better knowledge."]],"body":[],"content":"By learning and building in public you'll sooner or later post something that resonates with someone else. This feedback might lead to new insights and even better knowledge."},{"id":"614adbbd-e942-4626-b953-204e1cf26290","format":"markdown","children":[],"title":[],"body":[["Horizontal_Rule"]],"content":"  ---"},{"id":"614adbbd-6673-4b35-ad40-6d8f69bb6a03","format":"markdown","children":[],"title":[["Tag",[["Plain","Learning"]]]],"body":[],"content":"#Learning"},{"id":"614adbbd-1536-4085-bb28-d11fcba0e814","format":"markdown","children":[],"title":[["Emphasis",[["Bold"],[["Plain","ID:"]]]],["Plain"," 210611104738"]],"body":[],"content":"**ID:** 210611104738"}]},{"id":"614adbbe-0663-4588-96cc-9c041c39bd7a","page-name":"Meta viewport for mobile devices","properties":{"public":true},"children":[{"id":"614adbbe-e64c-46ba-acb5-1f4f919a6a3a","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-2f03-48cc-85bd-6ccb2d74ea31","format":"markdown","children":[],"title":[["Plain","Mobile devices render pages in a virtual viewport, which is usually wider than the screen, and shrink the content to fit. This viewport won't work when we want to use "],["Link",{"url":["Page_ref","Media queries"],"label":[["Plain",""]],"full_text":"[[Media queries]]","metadata":""}],["Plain",". If the viewport is "],["Code","980px"],["Plain"," and we have media queries that target "],["Code","480px"],["Plain",", they'll never fire."]],"body":[],"content":"Mobile devices render pages in a virtual viewport, which is usually wider than the screen, and shrink the content to fit. This viewport won't work when we want to use [[Media queries]]. If the viewport is `980px` and we have media queries that target `480px`, they'll never fire."},{"id":"614adbbe-2319-458c-9155-87019628fb46","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Apple"],"label":[["Plain",""]],"full_text":"[[Apple]]","metadata":""}],["Plain"," introduced the "],["Code","viewport"],["Plain"," "],["Code","meta"],["Plain"," tag in "],["Link",{"url":["Page_ref","Safari"],"label":[["Plain",""]],"full_text":"[[Safari]]","metadata":""}],["Plain"," to let developers control the viewport's size and scale. This is not part of any web standard, but it's supported by most other mobile browsers."]],"body":[],"content":"[[Apple]] introduced the `viewport` `meta` tag in [[Safari]] to let developers control the viewport's size and scale. This is not part of any web standard, but it's supported by most other mobile browsers."},{"id":"614adbbe-6121-4e1a-ad4a-755b5c151912","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">","\n"],"language":"html","pos_meta":{"start_pos":517,"end_pos":590},"full_content":"```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n```"}]],"content":"  ```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n```"}]},{"id":"614adbbe-7feb-412c-a62f-fae325ee2d8a","page-name":"2021-06-30","children":[{"id":"614adbbd-9670-47b9-982f-bd313372d34f","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Handling tech debt is like doing the dishes"],"label":[["Plain",""]],"full_text":"[[Handling tech debt is like doing the dishes]]","metadata":""}]],"body":[],"content":"[[Handling tech debt is like doing the dishes]]"}]},{"id":"614adbbe-6a1b-43f0-9bed-ebc171442c8a","page-name":"Technical debt","properties":{"public":true},"children":[{"id":"614adbbd-28e6-43c1-ac4c-04876ce62a36","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbd-0a77-405d-a37b-80b69ffbb900","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-36d9-4b86-9ed2-71efd44ddcec","page-name":"Shu Omi","properties":{"public":true},"children":[{"id":"614adbbe-cdb8-46a4-895f-eff4a46be776","properties":{"public":true},"format":"markdown","children":[],"content":"public:: true\n"}]},{"id":"614adbbe-4f34-4211-9e89-f8653dc05b6d","page-name":"2020-12-17","properties":{"public":true},"children":[{"id":"614adbbe-d7a5-45dd-b061-fec7134cadf1","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-fbb9-4d09-9b14-3bf101f59a9d","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-0054-4c5f-9ec1-5f965d6807e8","page-name":"Jason Etcovich","properties":{"public":true},"children":[{"id":"614adbbe-e092-42e8-bc6a-6b4b84b6e5dc","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-ea5e-4793-9741-c08d95b06b52","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-e6de-4be4-a118-402f59d40b8e","page-name":"Neovim","properties":{"public":true},"children":[{"id":"614adbbe-d17d-4fa0-bd19-853833acdb7e","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-ed2a-42ad-8d26-887616fff802","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-b60f-4994-b219-a3e746b3cd27","page-name":"2021-08-30","children":[{"id":"614adbbe-999f-4afa-9c32-6ae658e3e88e","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Describe what you're doing before doing it"],"label":[["Plain",""]],"full_text":"[[Describe what you're doing before doing it]]","metadata":""}]],"body":[],"content":"[[Describe what you're doing before doing it]]"}]},{"id":"614adbbe-a165-41d3-9dcf-41af8efa9212","page-name":"Teaching","properties":{"public":true},"children":[{"id":"614adbbe-1002-4ebe-9f22-f4df86be1451","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-bb8a-493d-8b2b-112192103d47","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-f34a-4858-a0b4-4cd95a2ace76","page-name":"Describe what you're doing before doing it","children":[{"id":"614adbbe-f8f6-4706-9cae-ee7389e65104","format":"markdown","children":[],"title":[["Plain","Describe what you're going to do and why before "],["Emphasis",[["Italic"],[["Plain","actually"]]]],["Plain"," doing it when you're teaching something to someone."]],"body":[],"content":"Describe what you're going to do and why before _actually_ doing it when you're teaching something to someone."},{"id":"614adbbe-0fdc-4d44-afba-369c7a6a4f17","format":"markdown","children":[{"id":"614adbbe-9ee7-4f66-940f-729470bc273a","format":"markdown","children":[],"title":[["Plain","If they have any objections or questions, they'll also get the time to ask them."]],"body":[],"content":"If they have any objections or questions, they'll also get the time to ask them."}],"title":[["Plain","The student will have a harder time following what you're doing if the code you're writing just \"magically appears\". This becomes even more relevant depending on the student's level of knowledge."]],"body":[],"content":"The student will have a harder time following what you're doing if the code you're writing just \"magically appears\". This becomes even more relevant depending on the student's level of knowledge."},{"id":"614adbbe-9d57-4457-bf4e-ee300ca31db8","format":"markdown","children":[],"title":[["Plain","By putting words to what you're doing you'll also get to think it through. "],["Link",{"url":["Page_ref","Rubber ducking"],"label":[["Plain",""]],"full_text":"[[Rubber ducking]]","metadata":""}]],"body":[],"content":"By putting words to what you're doing you'll also get to think it through. [[Rubber ducking]]"},{"id":"614adbbe-fb73-4480-beec-763417962093","format":"markdown","children":[],"title":[["Plain","This might be even more helpful when working remotely as you don't get the same connection as when you're sitting by the same computer."]],"body":[],"content":"This might be even more helpful when working remotely as you don't get the same connection as when you're sitting by the same computer."},{"id":"614adbbe-7225-475d-b661-553659cdc6b3","format":"markdown","children":[],"title":[],"body":[["Horizontal_Rule"]],"content":"  ---"},{"id":"614adbbe-e78e-44b5-9d5e-52cd53c929af","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","React Podcast"],"label":[["Plain",""]],"full_text":"[[React Podcast]]","metadata":""}],["Plain",". ("],["Link",{"url":["Page_ref","2020-12-17"],"label":[["Plain",""]],"full_text":"[[2020-12-17]]","metadata":""}],["Plain","). "],["Emphasis",[["Italic"],[["Plain","123: Cassidy Williams on Dreams and Disasters in 2020"]]]],["Plain",". "],["Link",{"url":["Complex",{"protocol":"https","link":"spec.fm/podcasts/reactpodcast/XHRPTLZZ"}],"label":[["Plain","Link"]],"full_text":"[Link](https://spec.fm/podcasts/reactpodcast/XHRPTLZZ)","metadata":""}]],"body":[],"content":"[[React Podcast]]. ([[2020-12-17]]). _123: Cassidy Williams on Dreams and Disasters in 2020_. [Link](https://spec.fm/podcasts/reactpodcast/XHRPTLZZ)"},{"id":"614adbbe-366d-4a02-b5c6-8b799bcf35ed","format":"markdown","children":[],"title":[["Tag",[["Plain","Development"]]],["Plain",", "],["Tag",[["Plain","Learning"]]],["Plain",", "],["Tag",[["Plain","Teaching"]]]],"body":[],"content":"#Development, #Learning, #Teaching"},{"id":"614adbbe-b4b1-46e7-ae69-c4d0e461db70","format":"markdown","children":[],"title":[["Emphasis",[["Bold"],[["Plain","ID:"]]]],["Plain"," 210830192911"]],"body":[],"content":"**ID:** 210830192911"}]},{"id":"614adbbe-5abd-4889-b821-67e3b42bacbf","page-name":"2019-10-07","properties":{"public":true},"children":[{"id":"614adbbe-1db2-42f1-8de4-5f91622a4dbb","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-9404-4b92-adb7-d532a5c775d1","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-7e91-4d75-a320-8abfabb5c330","page-name":"Harvard University","properties":{"public":true},"children":[{"id":"614adbbe-fb1b-4777-bf21-5f227b41e1ac","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-dd3a-417d-8e5e-ad006fa437a7","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-278d-4e55-b8ca-99e6e8eaa5b0","page-name":"Hemnet","properties":{"public":true},"children":[{"id":"614adbbe-fbbf-4549-b2da-ebcb5d2cfa82","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-dc45-45fa-a392-6ef14fdeb798","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-fda9-4cc5-906b-97aa1d096253","page-name":"2021-08-03","children":[{"id":"614adbbe-a007-4a46-abaa-304725a4cda1","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Write great alt texts for images"],"label":[["Plain",""]],"full_text":"[[Write great alt texts for images]]","metadata":""}]],"body":[],"content":"[[Write great alt texts for images]]"}]},{"id":"614adbbf-306b-42bd-a4b8-68325fb396a3","page-name":"2021-09-22","format":"markdown","children":[{"id":"614adbbf-65bb-4912-ae87-5377c88c9259","properties":{},"format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Difference between ?? and ||"],"label":[["Plain",""]],"full_text":"[[Difference between ?? and ||]]","metadata":""}]],"body":[],"content":"[[Difference between ?? and ||]]"}]},{"id":"618c09a1-5218-41d3-a724-f47c94bf202b","page-name":"Save disk space by deleting node_modules","properties":{"tags":["JavaScript"],"pid":211110190432},"children":[{"id":"618c09a2-93ff-4018-b169-29a22bbd9f01","properties":{"tags":["JavaScript"],"pid":211110190432},"format":"markdown","children":[],"content":"tags:: JavaScript,\npid:: 211110190432\n"},{"id":"618fb4c5-cb05-40f5-b6cf-f7a45eb2ead2","properties":{},"format":"markdown","children":[],"title":[],"body":[],"content":""},{"id":"618c09b1-508f-486a-91f7-019d1150c9b5","properties":{},"format":"markdown","children":[],"title":[["Plain","After developing on a computer for a while you'll probably end up with a bunch of projects. If those projects are "],["Link",{"url":["Page_ref","JavaScript"],"label":[["Plain",""]],"full_text":"[[JavaScript]]","metadata":""}],["Plain"," there's a good change that they contain a "],["Code","node_modules"],["Plain"," directory. From time to time it's a good idea to remove all of these folders, since they can get quite big, and re-download the dependencies in the projects you're actively using."]],"body":[],"content":"After developing on a computer for a while you'll probably end up with a bunch of projects. If those projects are [[JavaScript]] there's a good change that they contain a ``node_modules`` directory. From time to time it's a good idea to remove all of these folders, since they can get quite big, and re-download the dependencies in the projects you're actively using."},{"id":"618c0b36-9a07-480a-94e1-c2ac5dea9449","properties":{},"format":"markdown","children":[{"id":"618c0ad0-4bfc-43d5-9fa7-1556e52b6f39","properties":{},"format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["alias node-prune='find . -name \"node_modules\" -type d -prune -exec rm -rf '{}' +'","\n"],"language":"bash","pos_meta":{"start_pos":10,"end_pos":92},"full_content":"```bash\nalias node-prune='find . -name \"node_modules\" -type d -prune -exec rm -rf '{}' +'\n```"}]],"content":"```bash\nalias node-prune='find . -name \"node_modules\" -type d -prune -exec rm -rf '{}' +'\n```"}],"title":[["Plain","I have aliased the following command to "],["Code","node-prune"],["Plain"," and have been "],["Link",{"url":["Complex",{"protocol":"https","link":"github.com/believer/dotfiles/commit/a440d8abcdb47cf6fe5d9af69519f960f7c96ce0"}],"label":[["Plain","using it since"]],"full_text":"[using it since](https://github.com/believer/dotfiles/commit/a440d8abcdb47cf6fe5d9af69519f960f7c96ce0)","metadata":""}],["Plain"," "],["Link",{"url":["Page_ref","2019-12-11"],"label":[["Plain",""]],"full_text":"[[2019-12-11]]","metadata":""}],["Plain"," without any issues. When I ran the command on "],["Link",{"url":["Page_ref","2021-11-08"],"label":[["Plain",""]],"full_text":"[[2021-11-08]]","metadata":""}],["Plain"," I got back ~40 GB of disk space. Use it "],["Emphasis",[["Bold"],[["Plain","at your own risk"]]]],["Plain","."]],"body":[],"content":"I have aliased the following command to ``node-prune`` and have been [using it since](https://github.com/believer/dotfiles/commit/a440d8abcdb47cf6fe5d9af69519f960f7c96ce0) [[2019-12-11]] without any issues. When I ran the command on [[2021-11-08]] I got back ~40 GB of disk space. Use it **at your own risk**."},{"id":"618c0d20-663f-491e-bb50-dd0e07570c0f","properties":{},"format":"markdown","children":[{"id":"618c0d33-f942-4606-83eb-a33d26b2dfe6","properties":{},"format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["find . -name \"node_modules\" -type d -prune -print | xargs du -chs","\n"],"language":"bash","pos_meta":{"start_pos":10,"end_pos":76},"full_content":"```bash\nfind . -name \"node_modules\" -type d -prune -print | xargs du -chs\n```"}]],"content":"```bash\nfind . -name \"node_modules\" -type d -prune -print | xargs du -chs\n```"}],"title":[["Plain","If you just want to find and display the size of the folders you can use the following command"]],"body":[],"content":"If you just want to find and display the size of the folders you can use the following command"},{"id":"618c0c0b-bc18-4aa4-8191-75e16829cf94","properties":{},"format":"markdown","children":[],"title":[["Plain","There's also "],["Code","npkill"],["Plain"," which looks up and displays "],["Code","node_modules"],["Plain",", displays their size and allows you to delete the folders. Run it by using "],["Code","npx npkill"]],"body":[],"content":"There's also ``npkill`` which looks up and displays ``node_modules``, displays their size and allows you to delete the folders. Run it by using ``npx npkill``"},{"id":"61912482-4173-4696-ae2f-f66ac234083e","properties":{},"format":"markdown","children":[],"title":[["Plain","I also posted this on "],["Link",{"url":["Complex",{"protocol":"https","link":"willcodefor.beer/posts/save-disk-space-by-deleting-node-modules/"}],"label":[["Plain","my blog"]],"full_text":"[my blog](https://willcodefor.beer/posts/save-disk-space-by-deleting-node-modules/)","metadata":""}],["Plain"," with explanations of the command."]],"body":[],"content":"I also posted this on [my blog](https://willcodefor.beer/posts/save-disk-space-by-deleting-node-modules/) with explanations of the command."},{"id":"618c0a3c-ecb6-4ea6-98cd-734a0a076879","properties":{},"format":"markdown","children":[],"title":[],"body":[["Horizontal_Rule"]],"content":"---"},{"id":"618c0a3d-6b31-449a-9387-b66240dfa88c","properties":{},"format":"markdown","children":[{"id":"618c0cee-2054-4fb9-9aff-401c4b0934ab","properties":{},"format":"markdown","children":[],"title":[["Macro",{"name":"tweet","arguments":["https://twitter.com/erikras/status/1458074052929728515"]}]],"body":[],"content":"{{tweet https://twitter.com/erikras/status/1458074052929728515}}"}],"title":[["Link",{"url":["Page_ref","Erik Rasmussen"],"label":[["Plain",""]],"full_text":"[[Erik Rasmussen]]","metadata":""}],["Plain",". "],["Link",{"url":["Page_ref","2021-11-09"],"label":[["Plain",""]],"full_text":"[[2021-11-09]]","metadata":""}],["Plain",". "],["Link",{"url":["Complex",{"protocol":"https","link":"twitter.com/erikras/status/1458074052929728515"}],"label":[["Plain","Tweet"]],"full_text":"[Tweet](https://twitter.com/erikras/status/1458074052929728515)","metadata":""}]],"body":[],"content":"[[Erik Rasmussen]]. [[2021-11-09]]. [Tweet](https://twitter.com/erikras/status/1458074052929728515)"}]},{"id":"614adbbe-7c15-4784-a754-39b4f83ca16f","page-name":"Errors","properties":{"public":true},"children":[{"id":"614adbbe-2414-41d9-9c11-0e3f757a47d0","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-e7c9-4676-9426-14c72ab871e9","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-56c3-42e8-b88b-9d130a5f5884","page-name":"What's new in React 18","children":[{"id":"614adbbd-5a87-45a7-91ab-b263df5ec226","heading-level":2,"format":"markdown","children":[{"id":"614adbbd-6c88-4f8f-b9de-c10b9e1ad0c3","format":"markdown","children":[],"title":[["Plain","If two "],["Code","setState"],["Plain"," hooks are called inside a function, they are batched together and only perform one re-render. However, if we were to use these same hooks inside any other context, like a "],["Link",{"url":["Page_ref","Promise"],"label":[["Plain",""]],"full_text":"[[Promise]]","metadata":""}],["Plain",", an event listener or a "],["Code","setTimeout"],["Plain"," you would get two renders. It was possible to get the same behavior using "],["Code","unstable_batchedUpdates"],["Plain",", but as of "],["Link",{"url":["Page_ref","React"],"label":[["Plain",""]],"full_text":"[[React]]","metadata":""}],["Plain"," 18 it's now turned on by default."]],"body":[],"content":"If two `setState` hooks are called inside a function, they are batched together and only perform one re-render. However, if we were to use these same hooks inside any other context, like a [[Promise]], an event listener or a `setTimeout` you would get two renders. It was possible to get the same behavior using `unstable_batchedUpdates`, but as of [[React]] 18 it's now turned on by default."},{"id":"614adbbd-4b2b-4598-951b-8d4d405a9b65","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["const handleClick = () => {","\n","  setCount(count + 1)","\n","  setClicked(true)","\n","}","\n","const [count, setCount] = React.useState(0)","\n","const [clicked, setClicked] = React.useState(false)","\n","\t  ","\n","// These calls are batched together and only perform","\n","// on re-render. This works before React 18","\n","const handleClick = () => {","\n","  setCount(count + 1)","\n","  setClicked(true)","\n","}","\n","\t  ","\n","// Before React 18, all three of the following cases would perform","\n","// two re-renders. ","\n","fetch('...').then(() => {","\n","  setCount(count + 1)","\n","  setClicked(true)","\n","})","\n","\t  ","\n","element.addEventlistener('click', () => {","\n","  setCount(count + 1)","\n","  setClicked(true) ","\n","})","\n","\t  ","\n","setTimeout(() => {","\n","  setCount(count + 1)","\n","  setClicked(true) ","\n","}, 1000)","\n","\t  ","\n","// If you really want the updates to not be batched you can use","\n","// the flushSync utility from react-dom","\n","import { flushSync } from 'react-dom'","\n","\t  ","\n","const handleClick = () => {","\n","  flushSync(() => {","\n","    setCount(count + 1)","\n","  })","\n","  ","\n","  flushSync(() => {","\n","    setClicked(true)","\n","  })","\n","}","\n"],"language":"js","pos_meta":{"start_pos":430,"end_pos":1492},"full_content":"```js\nconst handleClick = () => {\n  setCount(count + 1)\n  setClicked(true)\n}\nconst [count, setCount] = React.useState(0)\nconst [clicked, setClicked] = React.useState(false)\n\n// These calls are batched together and only perform\n// on re-render. This works before React 18\nconst handleClick = () => {\n  setCount(count + 1)\n  setClicked(true)\n}\n\n// Before React 18, all three of the following cases would perform\n// two re-renders. \nfetch('...').then(() => {\n  setCount(count + 1)\n  setClicked(true)\n})\n\nelement.addEventlistener('click', () => {\n  setCount(count + 1)\n  setClicked(true) \n})\n\nsetTimeout(() => {\n  setCount(count + 1)\n  setClicked(true) \n}, 1000)\n\n// If you really want the updates to not be batched you can use\n// the flushSync utility from react-dom\nimport { flushSync } from 'react-dom'\n\nconst handleClick = () => {\n  flushSync(() => {\n    setCount(count + 1)\n  })\n  \n  flushSync(() => {\n    setClicked(true)\n  })\n}\n```"}]],"content":"\t  ```js\nconst handleClick = () => {\n  setCount(count + 1)\n  setClicked(true)\n}\nconst [count, setCount] = React.useState(0)\nconst [clicked, setClicked] = React.useState(false)\n\n// These calls are batched together and only perform\n// on re-render. This works before React 18\nconst handleClick = () => {\n  setCount(count + 1)\n  setClicked(true)\n}\n\n// Before React 18, all three of the following cases would perform\n// two re-renders. \nfetch('...').then(() => {\n  setCount(count + 1)\n  setClicked(true)\n})\n\nelement.addEventlistener('click', () => {\n  setCount(count + 1)\n  setClicked(true) \n})\n\nsetTimeout(() => {\n  setCount(count + 1)\n  setClicked(true) \n}, 1000)\n\n// If you really want the updates to not be batched you can use\n// the flushSync utility from react-dom\nimport { flushSync } from 'react-dom'\n\nconst handleClick = () => {\n  flushSync(() => {\n    setCount(count + 1)\n  })\n  \n  flushSync(() => {\n    setClicked(true)\n  })\n}\n```"}],"title":[["Plain","Automatic batching"]],"body":[],"content":"## Automatic batching"},{"id":"614adbbd-5adc-4a9b-aae3-b9cd34747ae7","heading-level":2,"format":"markdown","children":[{"id":"614adbbd-4928-4356-bc84-212a1d4196e0","format":"markdown","children":[],"title":[["Plain","Transitions tell "],["Link",{"url":["Page_ref","React"],"label":[["Plain",""]],"full_text":"[[React]]","metadata":""}],["Plain"," which updates are urgent and which are not. A good example would be an input field that filters out a list. Entering an input would be marked as urgent and the filtering of the list is secondary. If the list is in the process of filtering, typing in the input would "],["Emphasis",[["Bold"],[["Plain","interrupt"]]]],["Plain"," the filtering and discard the result."]],"body":[],"content":"Transitions tell [[React]] which updates are urgent and which are not. A good example would be an input field that filters out a list. Entering an input would be marked as urgent and the filtering of the list is secondary. If the list is in the process of filtering, typing in the input would **interrupt** the filtering and discard the result."},{"id":"614adbbd-946d-4f1c-a750-28087954442b","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["import { startTransition } from 'react'","\n","\t  ","\n","// Urgent: Show what was typed","\n","setInputValue(value)","\n","\t  ","\n","startTransition(() => {","\n","  // Secondary: Show results","\n","  setSearchQuery(value)","\n","})","\n"],"language":"js","pos_meta":{"start_pos":1871,"end_pos":2075},"full_content":"```js\nimport { startTransition } from 'react'\n\n// Urgent: Show what was typed\nsetInputValue(value)\n\nstartTransition(() => {\n  // Secondary: Show results\n  setSearchQuery(value)\n})\n```"}]],"content":"\t  ```js\nimport { startTransition } from 'react'\n\n// Urgent: Show what was typed\nsetInputValue(value)\n\nstartTransition(() => {\n  // Secondary: Show results\n  setSearchQuery(value)\n})\n```"}],"title":[["Plain","Transitions"]],"body":[],"content":"## Transitions"},{"id":"614adbbd-4d93-45ba-9310-f6315142090d","heading-level":2,"format":"markdown","children":[{"id":"614adbbd-b46b-40da-bbf2-5cb3ca95b7cc","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","React"],"label":[["Plain",""]],"full_text":"[[React]]","metadata":""}],["Plain"," 18 supports two features for better "],["Link",{"url":["Page_ref","SSR"],"label":[["Plain",""]],"full_text":"[[SSR]]","metadata":""}],["Plain",": streaming HTML and selective hydration. "],["Emphasis",[["Bold"],[["Plain","Streaming HTML"]]]],["Plain"," means that you can send some pieces of you UI directly and have it wait for other parts that might take longer to load. This works by using the "],["Code","<Suspense>"],["Plain"," component."]],"body":[],"content":"[[React]] 18 supports two features for better [[SSR]]: streaming HTML and selective hydration. **Streaming HTML** means that you can send some pieces of you UI directly and have it wait for other parts that might take longer to load. This works by using the `<Suspense>` component."},{"id":"614adbbd-e187-4c2c-a717-9b9fb7b54bb3","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["// We render the important parts straight away","\n","<Navigation />","\n","<Article />","\n","// The comments can take longer to load and aren't as important as the","\n","// article. Therefore, we can make the UI wait for this","\n","<Suspense fallback={<Spinner />}>","\n","  <Comments />","\n","</Suspense>","\n"],"language":"jsx","pos_meta":{"start_pos":2397,"end_pos":2686},"full_content":"```jsx\n// We render the important parts straight away\n<Navigation />\n<Article />\n// The comments can take longer to load and aren't as important as the\n// article. Therefore, we can make the UI wait for this\n<Suspense fallback={<Spinner />}>\n  <Comments />\n</Suspense>\n```"}]],"content":"\t  ```jsx\n// We render the important parts straight away\n<Navigation />\n<Article />\n// The comments can take longer to load and aren't as important as the\n// article. Therefore, we can make the UI wait for this\n<Suspense fallback={<Spinner />}>\n  <Comments />\n</Suspense>\n```"},{"id":"614adbbd-8355-49f2-9ccd-1bda6734ed97","format":"markdown","children":[],"title":[["Plain","Hydration is the final part of making you page interactive when using SSR. It happens after the "],["Link",{"url":["Page_ref","JavaScript"],"label":[["Plain",""]],"full_text":"[[JavaScript]]","metadata":""}],["Plain"," has been fetched and loaded. Previously, this part would block the pattern above, but with "],["Emphasis",[["Bold"],[["Plain","selective hydration"]]]],["Plain"," each part can start hydrating whenever that part is ready. If the user starts interacting with a component before it's been fully hydrated, React will "],["Emphasis",[["Bold"],[["Plain","prioritize"]]]],["Plain"," hydrating that component."]],"body":[],"content":"Hydration is the final part of making you page interactive when using SSR. It happens after the [[JavaScript]] has been fetched and loaded. Previously, this part would block the pattern above, but with **selective hydration** each part can start hydrating whenever that part is ready. If the user starts interacting with a component before it's been fully hydrated, React will **prioritize** hydrating that component."}],"title":[["Plain","Suspense and SSR"]],"body":[],"content":"## Suspense and SSR"},{"id":"614adbbd-25f7-4694-8874-6eef7732e27d","format":"markdown","children":[],"title":[],"body":[["Horizontal_Rule"]],"content":"  ---"},{"id":"614adbbd-2be3-4c85-bc8b-2f298bc23bc9","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","evening kid"],"label":[["Plain",""]],"full_text":"[[evening kid]]","metadata":""}],["Plain",". ("],["Link",{"url":["Page_ref","2021-06-10"],"label":[["Plain",""]],"full_text":"[[2021-06-10]]","metadata":""}],["Plain","). "],["Emphasis",[["Italic"],[["Plain","What’s new in React 18"]]]],["Plain",". "],["Link",{"url":["Complex",{"protocol":"https","link":"www.youtube.com/watch?v=bpVRWrrfM1M"}],"label":[["Plain","https://www.youtube.com/watch?v=bpVRWrrfM1M"]],"full_text":"https://www.youtube.com/watch?v=bpVRWrrfM1M","metadata":""}]],"body":[],"content":"[[evening kid]]. ([[2021-06-10]]). _What’s new in React 18_. https://www.youtube.com/watch?v=bpVRWrrfM1M"},{"id":"614adbbd-4817-4c44-9478-53c5a4a3c911","format":"markdown","children":[],"title":[],"body":[["Paragraph",[["Plain",""],["Tag",[["Link",{"url":["Page_ref","React"],"label":[["Plain",""]],"full_text":"[[React]]","metadata":""}]]],["Break_Line"]]]],"content":"  #[[React]]"},{"id":"614adbbd-f635-4377-934e-193b1a085a82","format":"markdown","children":[],"title":[["Emphasis",[["Bold"],[["Plain","ID:"]]]],["Plain"," 210621072907"]],"body":[],"content":"**ID:** 210621072907"}]},{"id":"614adbbe-6fae-48c2-a462-8198371aa6ae","page-name":"CSS Grid tricks","properties":{"public":true},"children":[{"id":"614adbbe-5c74-4240-80d8-94179def86ee","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-c957-4681-8b40-8b6bc2544fb1","format":"markdown","children":[{"id":"614adbbe-4ece-40d6-8390-2d72696a404b","format":"markdown","children":[],"title":[["Plain","We have some content that we want to position in the center of the screen. For this we can use "],["Link",{"url":["Page_ref","CSS Grid"],"label":[["Plain",""]],"full_text":"[[CSS Grid]]","metadata":""}],["Plain",". By defining fixed values at the edges of our grid template we can achieve spacing without using "],["Code","padding"],["Plain"," when the grid resizes on a smaller screen."]],"body":[],"content":"We have some content that we want to position in the center of the screen. For this we can use [[CSS Grid]]. By defining fixed values at the edges of our grid template we can achieve spacing without using `padding` when the grid resizes on a smaller screen."},{"id":"614adbbe-5cdc-42fe-b1eb-25f5b9f39dc1","format":"markdown","children":[],"title":[["Plain","Remember to add "],["Link",{"url":["Page_ref","Meta viewport for mobile devices"],"label":[["Plain",""]],"full_text":"[[Meta viewport for mobile devices]]","metadata":""}],["Plain",", otherwise the content won't scale correctly on smaller screens and the spacings will not work."]],"body":[],"content":"Remember to add [[Meta viewport for mobile devices]], otherwise the content won't scale correctly on smaller screens and the spacings will not work."},{"id":"614adbbe-6c3d-4247-a44d-2dbb3517e06a","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":["<div class=\"grid\">","\n","\t<div class=\"content\">","\n","      Elit suscipit consequuntur rerum alias eius. Autem soluta voluptas","\n","      doloremque corrupti distinctio dicta Cumque sit accusamus minima magni","\n","      voluptatum. Distinctio veritatis consectetur et eligendi dolores est","\n","      Impedit at tenetur pariatur","\n","\t</div>","\n","</div>","\n","\t  ","\n"],"language":"html","pos_meta":{"start_pos":482,"end_pos":829},"full_content":"```html\n<div class=\"grid\">\n\t<div class=\"content\">\n      Elit suscipit consequuntur rerum alias eius. Autem soluta voluptas\n      doloremque corrupti distinctio dicta Cumque sit accusamus minima magni\n      voluptatum. Distinctio veritatis consectetur et eligendi dolores est\n      Impedit at tenetur pariatur\n\t</div>\n</div>\n\n```"}]],"content":"\t  ```html\n<div class=\"grid\">\n\t<div class=\"content\">\n      Elit suscipit consequuntur rerum alias eius. Autem soluta voluptas\n      doloremque corrupti distinctio dicta Cumque sit accusamus minima magni\n      voluptatum. Distinctio veritatis consectetur et eligendi dolores est\n      Impedit at tenetur pariatur\n\t</div>\n</div>\n\n```"},{"id":"614adbbe-241e-431b-a501-4c6807fab961","format":"markdown","children":[],"title":[],"body":[["Src",{"lines":[".grid {","\n","  display: grid;","\n","  grid-template-columns: 20px 1fr minmax(0, 960px) 1fr 20px;","\n","}","\n","\t  ","\n","/* From the image below we can see that our content's","\n","  area starts at column 3 and ends at column 4 */","\n",".content {","\n","  grid-column: 3 / 4;","\n","  /* This is a shorthand form of:","\n","  * grid-column-start: 3;","\n","  * grid-column-end: 4;","\n","  */","\n","}","\n"],"language":"css","pos_meta":{"start_pos":846,"end_pos":1286},"full_content":"```css\n      .grid {\n        display: grid;\n        grid-template-columns: 20px 1fr minmax(0, 960px) 1fr 20px;\n      }\n\n      /* From the image below we can see that our content's\n        area starts at column 3 and ends at column 4 */\n      .content {\n        grid-column: 3 / 4;\n        /* This is a shorthand form of:\n        * grid-column-start: 3;\n        * grid-column-end: 4;\n        */\n      }\n```"}]],"content":"\t  ```css\n      .grid {\n        display: grid;\n        grid-template-columns: 20px 1fr minmax(0, 960px) 1fr 20px;\n      }\n\n      /* From the image below we can see that our content's\n        area starts at column 3 and ends at column 4 */\n      .content {\n        grid-column: 3 / 4;\n        /* This is a shorthand form of:\n        * grid-column-start: 3;\n        * grid-column-end: 4;\n        */\n      }\n```"},{"id":"614adbbe-450e-420a-963b-1f6ff85e4216","format":"markdown","children":[],"title":[["Plain","Here's the grid in desktop size with the grid columns highlighted using "],["Link",{"url":["Page_ref","Chrome"],"label":[["Plain",""]],"full_text":"[[Chrome]]","metadata":""}],["Plain","'s "],["Code","grid"],["Plain"," tool."]],"body":[],"content":"Here's the grid in desktop size with the grid columns highlighted using [[Chrome]]'s `grid` tool."},{"id":"614adbbe-5f9b-4a9f-ba2a-62506b9df0c0","format":"markdown","children":[],"title":[["Link",{"url":["Search","../assets/grid_desktop_1630347066416_0.png"],"label":[["Plain","grid_desktop.png"]],"full_text":"![grid_desktop.png](../assets/grid_desktop_1630347066416_0.png)","metadata":""}]],"body":[],"content":"![grid_desktop.png](../assets/grid_desktop_1630347066416_0.png)"},{"id":"614adbbe-67b1-4df5-9669-dab79357bc45","format":"markdown","children":[],"title":[["Plain","The same grid on a screen size of "],["Code","411px"],["Plain"," (Pixel 2 XL) displays that our "],["Code","1fr"],["Plain"," columns are very small (or non-existent) at this point leaving only our \"padding\" columns and the content."]],"body":[],"content":"The same grid on a screen size of `411px` (Pixel 2 XL) displays that our `1fr` columns are very small (or non-existent) at this point leaving only our \"padding\" columns and the content."},{"id":"614adbbe-9c77-4e3b-9251-b86c23bec154","format":"markdown","children":[],"title":[["Link",{"url":["Search","../assets/grid_mobile_1630347074383_0.png"],"label":[["Plain","grid_mobile.png"]],"full_text":"![grid_mobile.png](../assets/grid_mobile_1630347074383_0.png)","metadata":""}]],"body":[],"content":"![grid_mobile.png](../assets/grid_mobile_1630347074383_0.png)"}],"title":[["Emphasis",[["Bold"],[["Plain","Add columns for spacing on mobile"]]]]],"body":[],"content":"**Add columns for spacing on mobile**"}]},{"id":"614adbbe-9418-4fd8-8bbc-227721dfa048","page-name":"Etymology","properties":{"public":true},"children":[{"id":"614adbbd-83ee-4af4-8f51-111d3fd40ff9","properties":{"public":true},"format":"markdown","children":[],"content":"public:: true\n"}]},{"id":"614adbbe-545f-4f45-8ffa-2d307c6b8832","page-name":"ESLint","properties":{"public":true},"children":[{"id":"614adbbd-44d2-4e8c-908f-f2bc89dc2c9a","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbd-a255-4e05-acc4-45ead67c7a2a","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-51b7-45ea-8b37-51ebf039a115","page-name":"SHA","children":[{"id":"614adbbe-c959-4ea2-b052-b9481b3c725b","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-5290-4aa3-9577-4a4055404db2","page-name":"Always use real variable names in examples","children":[{"id":"614adbbe-a82a-4e50-a878-b02ac9da958d","format":"markdown","children":[],"title":[["Plain","Just like you wouldn't use "],["Code","foo"],["Plain",", "],["Code","bar"],["Plain",", and "],["Code","baz"],["Plain"," in the real code you are writing, you should not use them when writing example code either."]],"body":[],"content":"Just like you wouldn't use `foo`, `bar`, and `baz` in the real code you are writing, you should not use them when writing example code either."},{"id":"614adbbe-9ba7-4afc-969e-1ea546757efb","format":"markdown","children":[],"title":[["Plain","Instead use real variable names that describe what it contains and create examples based on reality. This will make your examples easier to grasp and build upon."]],"body":[],"content":"Instead use real variable names that describe what it contains and create examples based on reality. This will make your examples easier to grasp and build upon."},{"id":"614adbbe-a9e2-48cd-842a-999fb0330719","format":"markdown","children":[],"title":[],"body":[["Horizontal_Rule"]],"content":"  ---"},{"id":"614adbbe-6084-4b79-8f1a-30873b2e5aa0","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Jason Etcovich"],"label":[["Plain",""]],"full_text":"[[Jason Etcovich]]","metadata":""}],["Plain"," ("],["Link",{"url":["Page_ref","2020-08-24"],"label":[["Plain",""]],"full_text":"[[2020-08-24]]","metadata":""}],["Plain","). "],["Emphasis",[["Italic"],[["Plain","\"Assorted thoughts on documentation\""]]]],["Plain",". "],["Link",{"url":["Complex",{"protocol":"https","link":"jasonet.co/posts/thoughts-on-docs/"}],"label":[["Plain","https://jasonet.co/posts/thoughts-on-docs/"]],"full_text":"https://jasonet.co/posts/thoughts-on-docs/","metadata":""}]],"body":[],"content":"[[Jason Etcovich]] ([[2020-08-24]]). _\"Assorted thoughts on documentation\"_. https://jasonet.co/posts/thoughts-on-docs/"},{"id":"614adbbe-a10f-4569-9724-3e696d2cc0da","format":"markdown","children":[],"title":[["Tag",[["Plain","Development"]]]],"body":[],"content":"#Development"},{"id":"614adbbe-9cd1-49db-8610-cef8c67da581","format":"markdown","children":[],"title":[["Emphasis",[["Bold"],[["Plain","ID:"]]]],["Plain"," 210426074810"]],"body":[],"content":"**ID:** 210426074810"}]},{"id":"618bc61d-4aed-4c46-ac7b-fea37d11bc16","page-name":"Internet Explorer","properties":{"alias":["IE"]},"children":[{"id":"618bc61f-4c4a-4836-8164-ec71f459bd6e","properties":{"alias":["IE"]},"format":"markdown","children":[],"content":"alias:: IE,"}]},{"id":"614adbbe-d9bf-4070-aae9-7c2e0a3d19ff","page-name":"Mob programming","properties":{"public":true},"children":[{"id":"614adbbe-d48b-4367-b5b6-64518c54e429","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-14fd-43e7-8875-1eba28e99342","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-6d2c-4c51-9653-bc383fd26280","page-name":"2021-07-18","children":[{"id":"614adbbe-ba21-4011-87a1-97b2e7bb0673","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Good documentation is written by and for humans"],"label":[["Plain",""]],"full_text":"[[Good documentation is written by and for humans]]","metadata":""}]],"body":[],"content":"[[Good documentation is written by and for humans]]"}]},{"id":"614adbbe-dd02-4410-98b1-29b69180b678","page-name":"JavaScript","properties":{"public":true},"children":[{"id":"614adbbe-e3f6-4649-98b9-bf083256fa77","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-4b43-49f1-b135-a57822a02c26","format":"markdown","children":[],"title":[],"body":[],"content":""}]},{"id":"614adbbe-4a23-4540-8418-75f7c9ddbec8","page-name":"Write useful error messages","properties":{"public":true},"children":[{"id":"614adbbe-46f5-4e4a-af41-9ce5d79667ab","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-f504-4dac-9f56-dc258e66b6f1","format":"markdown","children":[],"title":[["Plain","Inform your users what is happening by writing good and useful error messages. This will hopefully lead to few support errands in the long run as the user can understand what went wrong."]],"body":[],"content":"Inform your users what is happening by writing good and useful error messages. This will hopefully lead to few support errands in the long run as the user can understand what went wrong."},{"id":"614adbbe-5239-481b-be06-2928cb04bd55","format":"markdown","children":[{"id":"614adbbe-0ac4-4114-b968-69462fa88234","format":"markdown","children":[],"title":[["Plain","Write using plain words. Avoid technical jargon and error codes"]],"body":[],"content":"Write using plain words. Avoid technical jargon and error codes"},{"id":"614adbbe-4264-4b27-8980-7aa720f8ed46","format":"markdown","children":[],"title":[["Plain","Tell the user exactly what went wrong. "],["Emphasis",[["Bold"],[["Plain","What"]]]],["Plain"," happened, and "],["Emphasis",[["Bold"],[["Plain","why"]]]],["Plain","?"]],"body":[],"content":"Tell the user exactly what went wrong. **What** happened, and **why**?"},{"id":"614adbbe-87fe-4f9d-bdbf-be9716195a95","format":"markdown","children":[],"title":[["Plain","Tell the user how the problem can be fixed. "],["Emphasis",[["Bold"],[["Plain","When"]]]],["Plain"," will it be fixed and "],["Emphasis",[["Bold"],[["Plain","How"]]]],["Plain"," can the user respond to the error?"]],"body":[],"content":"Tell the user how the problem can be fixed. **When** will it be fixed and **How** can the user respond to the error?"}],"title":[["Plain","The "],["Link",{"url":["Page_ref","Nielsen Norman Group"],"label":[["Plain",""]],"full_text":"[[Nielsen Norman Group]]","metadata":""}],["Plain"," "],["Link",{"url":["Complex",{"protocol":"https","link":"www.nngroup.com/articles/improving-dreaded-404-error-message/"}],"label":[["Plain","wrote about it"]],"full_text":"[wrote about it](https://www.nngroup.com/articles/improving-dreaded-404-error-message/)","metadata":""}],["Plain"," in 1998 and summarized it in these three guiding principles:"]],"body":[],"content":"The [[Nielsen Norman Group]] [wrote about it](https://www.nngroup.com/articles/improving-dreaded-404-error-message/) in 1998 and summarized it in these three guiding principles:"},{"id":"614adbbe-9473-4fae-9d47-470ea1106fb8","properties":{"later":1623229872696},"format":"markdown","children":[],"title":[["Plain","Use "],["Emphasis",[["Italic"],[["Plain","we"]]]],["Plain"," when the error is on the developer's side, e.g. \"We are down for maintenance\". Use "],["Emphasis",[["Italic"],[["Plain","you"]]]],["Plain"," when the error is on the user's side, e.g. \"Access Denied. You don not have permission to view this page\""]],"body":[],"content":"Use _we_ when the error is on the developer's side, e.g. \"We are down for maintenance\". Use _you_ when the error is on the user's side, e.g. \"Access Denied. You don not have permission to view this page\"\nlater:: 1623229872696"},{"id":"614adbbe-752b-4f73-b93b-88c71d4f73ed","format":"markdown","children":[],"title":[["Plain","Use words like \"Page not found. The URL might be incorrect.\" instead of writing \"404 Not found\""]],"body":[],"content":"Use words like \"Page not found. The URL might be incorrect.\" instead of writing \"404 Not found\""},{"id":"614adbbe-9207-4160-9050-bd3ffec7605b","format":"markdown","children":[],"title":[["Plain","We don't always know how long an error will persist. Add links to a status page (if available), to a "],["Link",{"url":["Page_ref","Twitter"],"label":[["Plain",""]],"full_text":"[[Twitter]]","metadata":""}],["Plain"," acccount, or another way for the user to get in touch if they need to."]],"body":[],"content":"We don't always know how long an error will persist. Add links to a status page (if available), to a [[Twitter]] acccount, or another way for the user to get in touch if they need to."},{"id":"614adbbe-9a2c-426f-82fe-1cca63c585a4","format":"markdown","children":[],"title":[],"body":[["Horizontal_Rule"]],"content":"  ---"},{"id":"614adbbe-1bbe-4e57-96cc-4ff36649d68a","format":"markdown","children":[],"title":[["Link",{"url":["Page_ref","Max Rozen"],"label":[["Plain",""]],"full_text":"[[Max Rozen]]","metadata":""}],["Plain",". ("],["Link",{"url":["Page_ref","2021-06-08"],"label":[["Plain",""]],"full_text":"[[2021-06-08]]","metadata":""}],["Plain","). "],["Emphasis",[["Italic"],[["Plain","What the Fastly outage can teach us about writing error messages"]]]],["Plain",". "],["Link",{"url":["Complex",{"protocol":"https","link":"onlineornot.com/what-fastly-outage-can-teach-about-writing-error-messages"}],"label":[["Plain","https://onlineornot.com/what-fastly-outage-can-teach-about-writing-error-messages"]],"full_text":"https://onlineornot.com/what-fastly-outage-can-teach-about-writing-error-messages","metadata":""}]],"body":[],"content":"[[Max Rozen]]. ([[2021-06-08]]). _What the Fastly outage can teach us about writing error messages_. https://onlineornot.com/what-fastly-outage-can-teach-about-writing-error-messages"},{"id":"614adbbe-d6ef-4a7c-b896-fb40fe5e2d27","format":"markdown","children":[],"title":[["Tag",[["Plain","Errors"]]],["Plain",", "],["Tag",[["Plain","Writing"]]]],"body":[],"content":"#Errors, #Writing"},{"id":"614adbbe-ed42-42c0-b60f-ad253f28481f","format":"markdown","children":[],"title":[["Emphasis",[["Bold"],[["Plain","ID:"]]]],["Plain"," 210609111151"]],"body":[],"content":"**ID:** 210609111151"}]},{"id":"614adbbe-32de-47ac-a610-9e2986c0f01a","page-name":"Prettier","properties":{"public":true},"children":[{"id":"614adbbe-44aa-4658-bb4c-1839465ba8fb","properties":{"public":true},"format":"markdown","children":[],"body":[["Paragraph",[["Break_Line"]]]],"content":"public:: true\n\n"},{"id":"614adbbe-057a-4233-9fa7-a2241688ce0a","format":"markdown","children":[],"title":[],"body":[],"content":""}]}]}